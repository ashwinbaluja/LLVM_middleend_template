make[1]: Entering directory '/home/hwo2853/LLVM/H3/tests/test43'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc

loopBlocks
loopToBlock ****

constant----
0x6ebb7a0endconstant


BLOCK AFTER MODIFICATION

  %3 = icmp eq i64 %0, 0
  br i1 %3, label %4, label %6


NEXTBLOCK
0x6ebb7a0basicblock
constant----
0x6ec28e0endconstant
  %5 = call i8* @CAT_new(i64 noundef 1) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #3  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #32^^^^

BLOCK AFTER MODIFICATION

4:                                                ; preds = %2
  %5 = call i8* @CAT_new(i64 noundef 1) #3
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3
  br label %10


NEXTBLOCK
0x6ebb7a0basicblock
constant----
0x6ec2930endconstant


BLOCK AFTER MODIFICATION

6:                                                ; preds = %2
  %7 = add i64 %0, 5
  %8 = call i8* @CAT_new(i64 noundef %7) #3
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %8) #3
  %9 = add i64 %0, -1
  call void @p(i64 noundef %9, i8* noundef %1)
  br label %10


NEXTBLOCK
0x6ec2930basicblock0x6ec28e0basicblock
constant  %5 = call i8* @CAT_new(i64 noundef 1) #30x0
----
0x6ec2980endconstant

constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

10:                                               ; preds = %6, %4
  ret void


NEXTBLOCK

loopBlocks

10:                                               ; preds = %2, %10
  %11 = phi i64 [ 1, %2 ], [ %14, %10 ]
  call void @p(i64 noundef %11, i8* noundef %3)
  %12 = call i64 @CAT_get(i8* noundef %3) #3
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef %12)
  %14 = add nuw nsw i64 %11, 1
  %15 = icmp eq i64 %14, 6
  br i1 %15, label %4, label %10, !llvm.loop !3
 loopToBlock ****
0x6ec2f00 : 

constant----
0x6ec2e60endconstant
  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3

BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 7) #3
  br label %10


NEXTBLOCK
0x6ec2e60basicblock0x6ec2f00basicblock
constant  %3 = call i8* @CAT_new(i64 noundef 7) #30x0
----
0x6ec2f00endconstant
phiNode
incomingvalue
i64 1
incomingvalue
  %14 = add nuw nsw i64 %11, 1


constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  call void @p(i64 noundef %11, i8* noundef %3)  call void @p(i64 noundef %11, i8* noundef %3)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  %12 = call i64 @CAT_get(i8* noundef %3) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef %12)  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef %12)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
  %12 = call i64 @CAT_get(i8* noundef %3) #3|i64 7

BLOCK AFTER MODIFICATION

10:                                               ; preds = %2, %10
  %11 = phi i64 [ 1, %2 ], [ %13, %10 ]
  call void @p(i64 noundef %11, i8* noundef %3)
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)
  %13 = add nuw nsw i64 %11, 1
  %14 = icmp eq i64 %13, 6
  br i1 %14, label %4, label %10, !llvm.loop !3


NEXTBLOCK
0x6ec2f00basicblock
constant  %3 = call i8* @CAT_new(i64 noundef 7) #30x0
----
0x6ec2eb0endconstant
  %5 = call i8* @CAT_new(i64 noundef 52) #3  %5 = call i8* @CAT_new(i64 noundef 52) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 52) #3  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3
endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 52) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3

BLOCK AFTER MODIFICATION

4:                                                ; preds = %10
  %5 = call i8* @CAT_new(i64 noundef 52) #3
  call void @CAT_set(i8* %5, i64 104)
  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
  %6 = call i64 @CAT_variables() #3
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)
  %8 = call i64 @CAT_cost() #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)
  ret i32 0


NEXTBLOCK
0x6ec2e60basicblock0x6ec2f00basicblock
constant  %3 = call i8* @CAT_new(i64 noundef 7) #30x0
----
0x6ec2f00endconstant
phiNode
incomingvalue
i64 1
incomingvalue
  %13 = add nuw nsw i64 %11, 1


constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  call void @p(i64 noundef %11, i8* noundef %3)  call void @p(i64 noundef %11, i8* noundef %3)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3

BLOCK AFTER MODIFICATION

10:                                               ; preds = %2, %10
  %11 = phi i64 [ 1, %2 ], [ %13, %10 ]
  call void @p(i64 noundef %11, i8* noundef %3)
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)
  %13 = add nuw nsw i64 %11, 1
  %14 = icmp eq i64 %13, 6
  br i1 %14, label %4, label %10, !llvm.loop !3


NEXTBLOCK

constant----
0x6ec2e60endconstant
  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3

BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 7) #3
  br label %10


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc

loopBlocks
loopToBlock ****

constant----
0x7e5c7b0endconstant


BLOCK AFTER MODIFICATION

  %3 = icmp eq i64 %0, 0
  br i1 %3, label %4, label %6


NEXTBLOCK
0x7e5c7b0basicblock
constant----
0x7e63670endconstant
  %5 = call i8* @CAT_new(i64 noundef 1) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #3  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #32^^^^

BLOCK AFTER MODIFICATION

4:                                                ; preds = %2
  %5 = call i8* @CAT_new(i64 noundef 1) #3
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3
  br label %10


NEXTBLOCK
0x7e5c7b0basicblock
constant----
0x7e636c0endconstant


BLOCK AFTER MODIFICATION

6:                                                ; preds = %2
  %7 = add i64 %0, 5
  %8 = call i8* @CAT_new(i64 noundef %7) #3
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %8) #3
  %9 = add i64 %0, -1
  call void @p(i64 noundef %9, i8* noundef %1)
  br label %10


NEXTBLOCK
0x7e636c0basicblock0x7e63670basicblock
constant  %5 = call i8* @CAT_new(i64 noundef 1) #30x0
----
0x7e63710endconstant

constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

10:                                               ; preds = %6, %4
  ret void


NEXTBLOCK

loopBlocks

10:                                               ; preds = %2, %10
  %11 = phi i64 [ 1, %2 ], [ %13, %10 ]
  call void @p(i64 noundef %11, i8* noundef %3)
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)
  %13 = add nuw nsw i64 %11, 1
  %14 = icmp eq i64 %13, 6
  br i1 %14, label %4, label %10, !llvm.loop !3
 loopToBlock ****
0x7e63c90 : 

constant----
0x7e63bf0endconstant
  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3

BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 7) #3
  br label %10


NEXTBLOCK
0x7e63bf0basicblock0x7e63c90basicblock
constant  %3 = call i8* @CAT_new(i64 noundef 7) #30x0
----
0x7e63c90endconstant
phiNode
incomingvalue
i64 1
incomingvalue
  %13 = add nuw nsw i64 %11, 1


constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  call void @p(i64 noundef %11, i8* noundef %3)  call void @p(i64 noundef %11, i8* noundef %3)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3

BLOCK AFTER MODIFICATION

10:                                               ; preds = %2, %10
  %11 = phi i64 [ 1, %2 ], [ %13, %10 ]
  call void @p(i64 noundef %11, i8* noundef %3)
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)
  %13 = add nuw nsw i64 %11, 1
  %14 = icmp eq i64 %13, 6
  br i1 %14, label %4, label %10, !llvm.loop !3


NEXTBLOCK
0x7e63c90basicblock
constant  %3 = call i8* @CAT_new(i64 noundef 7) #30x0
----
0x7e63c40endconstant
  %5 = call i8* @CAT_new(i64 noundef 52) #3  %5 = call i8* @CAT_new(i64 noundef 52) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 52) #3  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 104)
endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 52) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* %5, i64 104)  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %5) #3
endofblockkilling:  call void @CAT_set(i8* %5, i64 104)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3

BLOCK AFTER MODIFICATION

4:                                                ; preds = %10
  %5 = call i8* @CAT_new(i64 noundef 52) #3
  call void @CAT_set(i8* %5, i64 104)
  call void @CAT_set(i8* %5, i64 0)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
  %6 = call i64 @CAT_variables() #3
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)
  %8 = call i64 @CAT_cost() #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc

loopBlocks
loopToBlock ****

constant----
0x72ef770endconstant


BLOCK AFTER MODIFICATION

  %3 = icmp eq i64 %0, 0
  br i1 %3, label %4, label %6


NEXTBLOCK
0x72ef770basicblock
constant----
0x72f64d0endconstant
  %5 = call i8* @CAT_new(i64 noundef 1) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #3  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #32^^^^

BLOCK AFTER MODIFICATION

4:                                                ; preds = %2
  %5 = call i8* @CAT_new(i64 noundef 1) #3
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %5) #3
  br label %10


NEXTBLOCK
0x72ef770basicblock
constant----
0x72f6520endconstant


BLOCK AFTER MODIFICATION

6:                                                ; preds = %2
  %7 = add i64 %0, 5
  %8 = call i8* @CAT_new(i64 noundef %7) #3
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %8) #3
  %9 = add i64 %0, -1
  call void @p(i64 noundef %9, i8* noundef %1)
  br label %10


NEXTBLOCK
0x72f6520basicblock0x72f64d0basicblock
constant  %5 = call i8* @CAT_new(i64 noundef 1) #30x0
----
0x72f6570endconstant

constantatm  %5 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

10:                                               ; preds = %6, %4
  ret void


NEXTBLOCK

loopBlocks

10:                                               ; preds = %2, %10
  %11 = phi i64 [ 1, %2 ], [ %13, %10 ]
  call void @p(i64 noundef %11, i8* noundef %3)
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)
  %13 = add nuw nsw i64 %11, 1
  %14 = icmp eq i64 %13, 6
  br i1 %14, label %4, label %10, !llvm.loop !3
 loopToBlock ****
0x72f6af0 : 

constant----
0x72f6a50endconstant
  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3

BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 7) #3
  br label %10


NEXTBLOCK
0x72f6a50basicblock0x72f6af0basicblock
constant  %3 = call i8* @CAT_new(i64 noundef 7) #30x0
----
0x72f6af0endconstant
phiNode
incomingvalue
i64 1
incomingvalue
  %13 = add nuw nsw i64 %11, 1


constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  call void @p(i64 noundef %11, i8* noundef %3)  call void @p(i64 noundef %11, i8* noundef %3)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3

BLOCK AFTER MODIFICATION

10:                                               ; preds = %2, %10
  %11 = phi i64 [ 1, %2 ], [ %13, %10 ]
  call void @p(i64 noundef %11, i8* noundef %3)
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 noundef 7)
  %13 = add nuw nsw i64 %11, 1
  %14 = icmp eq i64 %13, 6
  br i1 %14, label %4, label %10, !llvm.loop !3


NEXTBLOCK
0x72f6af0basicblock
constant  %3 = call i8* @CAT_new(i64 noundef 7) #30x0
----
0x72f6aa0endconstant
  %5 = call i8* @CAT_new(i64 noundef 52) #3  %5 = call i8* @CAT_new(i64 noundef 52) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 52) #3  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 104)
endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 52) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* %5, i64 104)  call void @CAT_set(i8* %5, i64 0)  call void @CAT_set(i8* %5, i64 0)  call void @CAT_set(i8* %5, i64 0)  call void @CAT_set(i8* %5, i64 0)  call void @CAT_set(i8* %5, i64 0)  call void @CAT_set(i8* %5, i64 0)
endofblockkilling:  call void @CAT_set(i8* %5, i64 104)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* %5, i64 0)  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
endofblockkilling:  call void @CAT_set(i8* %5, i64 0)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
constantatm  %3 = call i8* @CAT_new(i64 noundef 7) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3

BLOCK AFTER MODIFICATION

4:                                                ; preds = %10
  %5 = call i8* @CAT_new(i64 noundef 52) #3
  call void @CAT_set(i8* %5, i64 104)
  call void @CAT_set(i8* %5, i64 0)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #3
  %6 = call i64 @CAT_variables() #3
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %6)
  %8 = call i64 @CAT_cost() #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
  Test failed because output  isn't correct
  Output differences can be found in "diff"
make[1]: *** [Makefile:43: check] Error 1
make[1]: Leaving directory '/home/hwo2853/LLVM/H3/tests/test43'
