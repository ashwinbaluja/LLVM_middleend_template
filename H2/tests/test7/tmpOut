make[1]: Entering directory '/home/hwo2853/LLVM/H2/tests/test7'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc




NEW INSTRUCTION
  %2 = call i8* @CAT_new(i64 noundef 5) #4


CONSTANTS---

!---!

CONSTANT INT FOUND!




NEW INSTRUCTION
  %3 = call i64 @CAT_get(i8* noundef %2) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %3 = call i64 @CAT_get(i8* noundef %2) #4

before
  %3 = call i64 @CAT_get(i8* noundef %2) #4
after
  %3 = call i64 @CAT_get(i8* noundef inttoptr (i64 5 to i8*)) #4-




NEW INSTRUCTION
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef %3)


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef %3)




NEW INSTRUCTION
  %5 = icmp sgt i32 %0, 0


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!





NEW INSTRUCTION
  call void @llvm.assume(i1 %5)


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  call void @llvm.assume(i1 %5)




NEW INSTRUCTION
  %6 = icmp ugt i32 %0, 10


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!





NEW INSTRUCTION
  %7 = icmp ugt i32 %0, 20


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!





NEW INSTRUCTION
  br label %17


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!





NEW INSTRUCTION
  %.lcssa1 = phi i8* [ %24, %27 ]


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!





NEW INSTRUCTION
  %.lcssa = phi i8* [ %25, %27 ]


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!





NEW INSTRUCTION
  %9 = call i64 @CAT_get(i8* noundef %.lcssa) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %9 = call i64 @CAT_get(i8* noundef %.lcssa) #4




NEW INSTRUCTION
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef %9)


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef %9)




NEW INSTRUCTION
  %11 = call i64 @CAT_get(i8* noundef %.lcssa1) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %11 = call i64 @CAT_get(i8* noundef %.lcssa1) #4




NEW INSTRUCTION
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)




NEW INSTRUCTION
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4




NEW INSTRUCTION
  %13 = call i64 @CAT_get(i8* noundef %.lcssa1) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %13 = call i64 @CAT_get(i8* noundef %.lcssa1) #4




NEW INSTRUCTION
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)




NEW INSTRUCTION
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4




NEW INSTRUCTION
  %15 = call i64 @CAT_get(i8* noundef %.lcssa1) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %15 = call i64 @CAT_get(i8* noundef %.lcssa1) #4




NEW INSTRUCTION
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %15)


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %15)




NEW INSTRUCTION
  ret void


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!





NEW INSTRUCTION
  %18 = phi i32 [ 0, %1 ], [ %30, %27 ]


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!





NEW INSTRUCTION
  %19 = call i8* @CAT_new(i64 noundef 8) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

CONSTANT INT FOUND!




NEW INSTRUCTION
  br i1 %6, label %20, label %21


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %19 = call i8* @CAT_new(i64 noundef 8) #4
!---!





NEW INSTRUCTION
  call void @CAT_add(i8* noundef %19, i8* noundef %19, i8* noundef %19) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %19 = call i8* @CAT_new(i64 noundef 8) #4
!---!

  call void @CAT_add(i8* noundef %19, i8* noundef %19, i8* noundef %19) #4this killed   %19 = call i8* @CAT_new(i64 noundef 8) #4
errased   %19 = call i8* @CAT_new(i64 noundef 8) #4
STARTING TO REPLACE
  call void @CAT_add(i8* noundef %19, i8* noundef %19, i8* noundef %19) #4




NEW INSTRUCTION
  br label %21


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!





NEW INSTRUCTION
  %22 = call i64 @CAT_get(i8* noundef %19) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %22 = call i64 @CAT_get(i8* noundef %19) #4




NEW INSTRUCTION
  %23 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %22)


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

STARTING TO REPLACE
  %23 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %22)




NEW INSTRUCTION
  %24 = call i8* @CAT_new(i64 noundef 0) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4
!---!

CONSTANT INT FOUND!




NEW INSTRUCTION
  %25 = call i8* @CAT_new(i64 noundef 42) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %24 = call i8* @CAT_new(i64 noundef 0) #4
!---!

CONSTANT INT FOUND!




NEW INSTRUCTION
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %19) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %24 = call i8* @CAT_new(i64 noundef 0) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!

  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %19) #4this killed   %24 = call i8* @CAT_new(i64 noundef 0) #4
errased   %24 = call i8* @CAT_new(i64 noundef 0) #4
STARTING TO REPLACE
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %19) #4

before
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %19) #4
after
  call void @CAT_add(i8* noundef %24, i8* noundef inttoptr (i64 5 to i8*), i8* noundef %19) #4-




NEW INSTRUCTION
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %24) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!

STARTING TO REPLACE
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %24) #4

before
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %24) #4
after
  call void @CAT_add(i8* noundef %24, i8* noundef inttoptr (i64 5 to i8*), i8* noundef %24) #4-




NEW INSTRUCTION
  call void @CAT_add(i8* noundef %24, i8* noundef %24, i8* noundef %24) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!

STARTING TO REPLACE
  call void @CAT_add(i8* noundef %24, i8* noundef %24, i8* noundef %24) #4




NEW INSTRUCTION
  br i1 %7, label %26, label %27


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!





NEW INSTRUCTION
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %2) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!

STARTING TO REPLACE
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %2) #4

before
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %2) #4
after
  call void @CAT_add(i8* noundef %24, i8* noundef inttoptr (i64 5 to i8*), i8* noundef %2) #4-

before
  call void @CAT_add(i8* noundef %24, i8* noundef inttoptr (i64 5 to i8*), i8* noundef %2) #4
after
  call void @CAT_add(i8* noundef %24, i8* noundef inttoptr (i64 5 to i8*), i8* noundef inttoptr (i64 5 to i8*)) #4-




NEW INSTRUCTION
  br label %27


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!





NEW INSTRUCTION
  %28 = call i64 @CAT_get(i8* noundef %24) #4


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!

STARTING TO REPLACE
  %28 = call i64 @CAT_get(i8* noundef %24) #4




NEW INSTRUCTION
  %29 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %28)


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!

STARTING TO REPLACE
  %29 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %28)




NEW INSTRUCTION
  %30 = add nuw i32 %18, 1


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!





NEW INSTRUCTION
  %31 = icmp eq i32 %30, %0


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!





NEW INSTRUCTION
  br i1 %31, label %8, label %17, !llvm.loop !3


CONSTANTS---
  %2 = call i8* @CAT_new(i64 noundef 5) #4  %25 = call i8* @CAT_new(i64 noundef 42) #4
!---!





NEW INSTRUCTION
  call void @CAT_execution(i32 noundef %0)


CONSTANTS---

!---!

STARTING TO REPLACE
  call void @CAT_execution(i32 noundef %0)




NEW INSTRUCTION
  %3 = call i64 @CAT_variables() #4


CONSTANTS---

!---!

STARTING TO REPLACE
  %3 = call i64 @CAT_variables() #4




NEW INSTRUCTION
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %3)


CONSTANTS---

!---!

STARTING TO REPLACE
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %3)




NEW INSTRUCTION
  %5 = call i64 @CAT_cost() #4


CONSTANTS---

!---!

STARTING TO REPLACE
  %5 = call i64 @CAT_cost() #4




NEW INSTRUCTION
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)


CONSTANTS---

!---!

STARTING TO REPLACE
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)




NEW INSTRUCTION
  ret i32 0


CONSTANTS---

!---!

####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
/bin/sh: line 1: 1903151 Segmentation fault      ./program_optimized > program_optimized_output
make[1]: *** [Makefile:40: program_optimized_output] Error 139
make[1]: Leaving directory '/home/hwo2853/LLVM/H2/tests/test7'
