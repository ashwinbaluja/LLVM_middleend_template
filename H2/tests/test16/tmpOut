make[1]: Entering directory '/home/azb1671/LLVM_middleend_template/H2/tests/test16'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc

constant----

  %2 = sext i32 %0 to i64
  %3 = call i8* @CAT_new(i64 noundef %2) #3
  %4 = call i8* @CAT_new(i64 noundef 0) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3
  %6 = call i64 @CAT_get(i8* noundef %5) #3
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %6)
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %4) #3
  %8 = call i64 @CAT_get(i8* noundef %5) #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %8)
  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3
  call void @CAT_sub(i8* noundef %5, i8* noundef %3, i8* noundef %5) #3
  %10 = call i64 @CAT_get(i8* noundef %5) #3
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %10)
  ret void
endconstant
  %4 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %5 = call i8* @CAT_new(i64 noundef 0) #3  %5 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 0) #3  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3
endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %6 = call i64 @CAT_get(i8* noundef %5) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %6)  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %6)
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %4) #3  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %4) #3  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %4) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %8 = call i64 @CAT_get(i8* noundef %5) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %8)  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %8)
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %3, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %3, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %3, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %3, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %3, i8* noundef %5) #3  call void @CAT_sub(i8* noundef %5, i8* noundef %3, i8* noundef %5) #3
endofblockkilling:  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %10 = call i64 @CAT_get(i8* noundef %5) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %10)  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %10)
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #32^^^^
  %10 = call i64 @CAT_get(i8* %3)getinsertreplace
2^^^^
  %8 = call i64 @CAT_get(i8* %5)getinsertreplace
2^^^^
  %6 = call i64 @CAT_get(i8* %3)getinsertreplace

constant----

  call void @my_execution(i32 noundef %0)
  %3 = call i64 @CAT_variables() #3
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %3)
  %5 = call i64 @CAT_cost() #3
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %5)
  ret i32 0
endconstant
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc

constant----

  %2 = sext i32 %0 to i64
  %3 = call i8* @CAT_new(i64 noundef %2) #3
  %4 = call i8* @CAT_new(i64 noundef 0) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %6 = call i64 @CAT_get(i8* %3)
  call void @CAT_set(i8* %5, i64 %6)
  %7 = call i64 @CAT_get(i8* noundef %5) #3
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %7)
  %9 = call i64 @CAT_get(i8* %5)
  call void @CAT_set(i8* %5, i64 %9)
  %10 = call i64 @CAT_get(i8* noundef %5) #3
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %10)
  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3
  %12 = call i64 @CAT_get(i8* %3)
  call void @CAT_set(i8* %5, i64 %12)
  %13 = call i64 @CAT_get(i8* noundef %5) #3
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %13)
  ret void
endconstant
  %4 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %5 = call i8* @CAT_new(i64 noundef 0) #3  %5 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 0) #3  %6 = call i64 @CAT_get(i8* %3)  %6 = call i64 @CAT_get(i8* %3)
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %5 = call i8* @CAT_new(i64 noundef 0) #3  call void @CAT_set(i8* %5, i64 %6)  call void @CAT_set(i8* %5, i64 %6)  call void @CAT_set(i8* %5, i64 %6)  call void @CAT_set(i8* %5, i64 %6)
endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %7 = call i64 @CAT_get(i8* noundef %5) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %7)  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %7)
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %9 = call i64 @CAT_get(i8* %5)
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  call void @CAT_set(i8* %5, i64 %9)  call void @CAT_set(i8* %5, i64 %9)
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %10 = call i64 @CAT_get(i8* noundef %5) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %10)  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %10)
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3  %12 = call i64 @CAT_get(i8* %3)  %12 = call i64 @CAT_get(i8* %3)
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3  call void @CAT_set(i8* %5, i64 %12)  call void @CAT_set(i8* %5, i64 %12)  call void @CAT_set(i8* %5, i64 %12)  call void @CAT_set(i8* %5, i64 %12)
endofblockkilling:  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %13 = call i64 @CAT_get(i8* noundef %5) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %13)  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %13)
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3
constantatm  %4 = call i8* @CAT_new(i64 noundef 0) #3
constant----

  call void @my_execution(i32 noundef %0)
  %3 = call i64 @CAT_variables() #3
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %3)
  %5 = call i64 @CAT_cost() #3
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %5)
  ret i32 0
endconstant
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/azb1671/LLVM_middleend_template/H2/tests/test16'
