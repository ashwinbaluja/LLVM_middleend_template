make[1]: Entering directory '/home/hwo2853/LLVM/H2/tests/test16'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc




NEW INSTRUCTION
  %2 = sext i32 %0 to i64


CONSTANTS---

!---!





NEW INSTRUCTION
  %3 = call i8* @CAT_new(i64 noundef %2) #3


CONSTANTS---

!---!

STARTING TO REPLACE
  %3 = call i8* @CAT_new(i64 noundef %2) #3




NEW INSTRUCTION
  %4 = call i8* @CAT_new(i64 noundef 0) #3


CONSTANTS---

!---!

CONSTANT INT FOUND!




NEW INSTRUCTION
  %5 = call i8* @CAT_new(i64 noundef 0) #3


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!

CONSTANT INT FOUND!




NEW INSTRUCTION
  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3  %5 = call i8* @CAT_new(i64 noundef 0) #3
!---!

  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3this killed   %5 = call i8* @CAT_new(i64 noundef 0) #3
errased   %5 = call i8* @CAT_new(i64 noundef 0) #3
STARTING TO REPLACE
  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3

before
  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %4) #3
after
  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef null) #3-




NEW INSTRUCTION
  %6 = call i64 @CAT_get(i8* noundef %5) #3


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!

STARTING TO REPLACE
  %6 = call i64 @CAT_get(i8* noundef %5) #3




NEW INSTRUCTION
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %6)


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!

STARTING TO REPLACE
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %6)




NEW INSTRUCTION
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %4) #3


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!

STARTING TO REPLACE
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %4) #3

before
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %4) #3
after
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef null) #3-




NEW INSTRUCTION
  %8 = call i64 @CAT_get(i8* noundef %5) #3


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!

STARTING TO REPLACE
  %8 = call i64 @CAT_get(i8* noundef %5) #3




NEW INSTRUCTION
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %8)


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!

STARTING TO REPLACE
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %8)




NEW INSTRUCTION
  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!

STARTING TO REPLACE
  call void @CAT_set(i8* noundef %5, i64 noundef 0) #3




NEW INSTRUCTION
  call void @CAT_sub(i8* noundef %5, i8* noundef %3, i8* noundef %5) #3


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!

STARTING TO REPLACE
  call void @CAT_sub(i8* noundef %5, i8* noundef %3, i8* noundef %5) #3




NEW INSTRUCTION
  %10 = call i64 @CAT_get(i8* noundef %5) #3


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!

STARTING TO REPLACE
  %10 = call i64 @CAT_get(i8* noundef %5) #3




NEW INSTRUCTION
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %10)


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!

STARTING TO REPLACE
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 noundef %10)




NEW INSTRUCTION
  ret void


CONSTANTS---
  %4 = call i8* @CAT_new(i64 noundef 0) #3
!---!





NEW INSTRUCTION
  call void @my_execution(i32 noundef %0)


CONSTANTS---

!---!

STARTING TO REPLACE
  call void @my_execution(i32 noundef %0)




NEW INSTRUCTION
  %3 = call i64 @CAT_variables() #3


CONSTANTS---

!---!

STARTING TO REPLACE
  %3 = call i64 @CAT_variables() #3




NEW INSTRUCTION
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %3)


CONSTANTS---

!---!

STARTING TO REPLACE
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %3)




NEW INSTRUCTION
  %5 = call i64 @CAT_cost() #3


CONSTANTS---

!---!

STARTING TO REPLACE
  %5 = call i64 @CAT_cost() #3




NEW INSTRUCTION
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %5)


CONSTANTS---

!---!

STARTING TO REPLACE
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %5)




NEW INSTRUCTION
  ret i32 0


CONSTANTS---

!---!

####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
  Test failed because output  isn't correct
  Output differences can be found in "diff"
make[1]: *** [Makefile:43: check] Error 1
make[1]: Leaving directory '/home/hwo2853/LLVM/H2/tests/test16'
