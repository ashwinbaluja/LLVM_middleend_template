make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test6'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %1 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  ret i32 10000

Constant after instruction


BLOCK AFTER MODIFICATION

  %1 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0))
  ret i32 10000


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str.6, i64 0, i64 0))

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0)) #5

Constant after instruction


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 noundef 10000)

Constant after instruction


Instruction
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %7 = call i8* @CAT_new(i64 noundef 5) #6

Constant after instruction
  %7 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  call void @CAT_add(i8* noundef %7, i8* noundef %7, i8* noundef %7) #6

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #6

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %8 = call i64 @CAT_get(i8* noundef %7) #6

optimize Cat_get

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  call void @CAT_destroy(i8* noundef %7) #6
erased an instruction cause it was called in a function  %7 = call i8* @CAT_new(i64 noundef 5) #6

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %9 = call i64 @CAT_variables() #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %9)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %11 = call i64 @CAT_cost() #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %11)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6
i64 42

BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str.6, i64 0, i64 0))
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0)) #5
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 noundef 10000)
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))
  %7 = call i8* @CAT_new(i64 noundef 5) #6
  call void @CAT_set(i8* %7, i64 10)
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #6
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6
  call void @CAT_destroy(i8* noundef %7) #6
  %8 = call i64 @CAT_variables() #6
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #6
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str.6, i64 0, i64 0))

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0)) #5

Constant after instruction


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 noundef 10000)

Constant after instruction


Instruction
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %7 = call i8* @CAT_new(i64 noundef 5) #6

Constant after instruction
  %7 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  call void @CAT_set(i8* %7, i64 10)

endofblockkilling:  call void @CAT_set(i8* %7, i64 10)
endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #6

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  call void @CAT_destroy(i8* noundef %7) #6
erased an instruction cause it was called in a function  %7 = call i8* @CAT_new(i64 noundef 5) #6

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %8 = call i64 @CAT_variables() #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %10 = call i64 @CAT_cost() #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str.6, i64 0, i64 0))
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0)) #5
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 noundef 10000)
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))
  %7 = call i8* @CAT_new(i64 noundef 5) #6
  call void @CAT_set(i8* %7, i64 10)
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #6
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6
  call void @CAT_destroy(i8* noundef %7) #6
  %8 = call i64 @CAT_variables() #6
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #6
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %1 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  ret i32 10000

Constant after instruction


BLOCK AFTER MODIFICATION

  %1 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0))
  ret i32 10000


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str.6, i64 0, i64 0))

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0)) #5

Constant after instruction


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 noundef 10000)

Constant after instruction


Instruction
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %7 = call i8* @CAT_new(i64 noundef 5) #6

Constant after instruction
  %7 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  call void @CAT_set(i8* %7, i64 10)

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction
  call void @CAT_set(i8* %7, i64 10)


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #6

endofblockkilling:  call void @CAT_set(i8* %7, i64 10)
Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  call void @CAT_destroy(i8* noundef %7) #6
erased an instruction cause it was called in a function  %7 = call i8* @CAT_new(i64 noundef 5) #6

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %8 = call i64 @CAT_variables() #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %10 = call i64 @CAT_cost() #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str.6, i64 0, i64 0))
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0)) #5
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 noundef 10000)
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))
  %7 = call i8* @CAT_new(i64 noundef 5) #6
  call void @CAT_set(i8* %7, i64 10)
  call void @CAT_set(i8* %7, i64 0)
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6
  call void @CAT_destroy(i8* noundef %7) #6
  %8 = call i64 @CAT_variables() #6
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #6
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %1 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  ret i32 10000

Constant after instruction


BLOCK AFTER MODIFICATION

  %1 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0))
  ret i32 10000


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str.6, i64 0, i64 0))

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0)) #5

Constant after instruction


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 noundef 10000)

Constant after instruction


Instruction
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %7 = call i8* @CAT_new(i64 noundef 5) #6

Constant after instruction
  %7 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  call void @CAT_set(i8* %7, i64 10)

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction
  call void @CAT_set(i8* %7, i64 10)


Instruction
  call void @CAT_set(i8* %7, i64 0)

endofblockkilling:  call void @CAT_set(i8* %7, i64 10)
Constant after instruction
  call void @CAT_set(i8* %7, i64 0)


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6

endofblockkilling:  call void @CAT_set(i8* %7, i64 0)
Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  call void @CAT_destroy(i8* noundef %7) #6
erased an instruction cause it was called in a function  %7 = call i8* @CAT_new(i64 noundef 5) #6

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %8 = call i64 @CAT_variables() #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %10 = call i64 @CAT_cost() #6

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6


BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str.6, i64 0, i64 0))
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str, i64 0, i64 0)) #5
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 noundef 10000)
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))
  %7 = call i8* @CAT_new(i64 noundef 5) #6
  call void @CAT_set(i8* %7, i64 10)
  call void @CAT_set(i8* %7, i64 0)
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #6
  call void @CAT_destroy(i8* noundef %7) #6
  %8 = call i64 @CAT_variables() #6
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #6
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test6'
