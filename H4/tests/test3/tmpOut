make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test3'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %2 = call i64 @CAT_get(i8* noundef %1) #4

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef %2)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %5 = call i64 @CAT_get(i8* noundef %4) #4

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %7 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4
  %7 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %4, i8* noundef %1) #4

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  call void @CAT_add(i8* noundef %7, i8* noundef %4, i8* noundef %7) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %8 = call i64 @CAT_get(i8* noundef %7) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %10 = call i64 @CAT_get(i8* noundef %7) #4

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  call void @CAT_destroy(i8* noundef %1) #4
erased an instruction cause it was called in a function  %1 = call i8* @CAT_new(i64 noundef 5) #4

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #4
Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
1^^^^i64 5i64 8i64 42

BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* %5, i64 3)
  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %5) #4
  %6 = call i64 @CAT_get(i8* noundef %5) #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %6)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  call void @CAT_destroy(i8* noundef %1) #4
  ret void


NEXTBLOCK


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_set(i8* %5, i64 3)

endofblockkilling:  call void @CAT_set(i8* %5, i64 3)
endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #4
endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 8) #4
endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction


Instruction
  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %5) #4

Constant after instruction


Instruction
  %6 = call i64 @CAT_get(i8* noundef %5) #4

Constant after instruction


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %6)

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4

Constant after instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  call void @CAT_destroy(i8* noundef %1) #4
erased an instruction cause it was called in a function  %1 = call i8* @CAT_new(i64 noundef 5) #4

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #4
Constant after instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* %5, i64 3)
  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %5) #4
  %6 = call i64 @CAT_get(i8* noundef %5) #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %6)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  call void @CAT_destroy(i8* noundef %1) #4
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  call void @CAT_execution()

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %5 = call i64 @CAT_variables() #4

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  %7 = call i64 @CAT_cost() #4

Constant after instruction


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str, i64 0, i64 0))
  call void @CAT_execution()
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))
  %5 = call i64 @CAT_variables() #4
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)
  %7 = call i64 @CAT_cost() #4
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_set(i8* %5, i64 3)

endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 3)


Instruction
  call void @CAT_add(i8* noundef %5, i8* noundef %3, i8* noundef %5) #4

endofblockkilling:  call void @CAT_set(i8* %5, i64 3)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %6 = call i64 @CAT_get(i8* noundef %5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %6)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  call void @CAT_destroy(i8* noundef %1) #4
erased an instruction cause it was called in a function  %1 = call i8* @CAT_new(i64 noundef 5) #4

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #4
Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* %5, i64 3)
  call void @CAT_set(i8* %5, i64 11)
  %6 = call i64 @CAT_get(i8* noundef %5) #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %6)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  call void @CAT_destroy(i8* noundef %1) #4
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  call void @CAT_execution()

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %5 = call i64 @CAT_variables() #4

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  %7 = call i64 @CAT_cost() #4

Constant after instruction


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str, i64 0, i64 0))
  call void @CAT_execution()
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))
  %5 = call i64 @CAT_variables() #4
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)
  %7 = call i64 @CAT_cost() #4
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_set(i8* %5, i64 3)

endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 3)


Instruction
  call void @CAT_set(i8* %5, i64 11)

endofblockkilling:  call void @CAT_set(i8* %5, i64 3)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 11)


Instruction
  %6 = call i64 @CAT_get(i8* noundef %5) #4

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 11)


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %6)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 11)


Instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4

endofblockkilling:  call void @CAT_set(i8* %5, i64 11)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  call void @CAT_destroy(i8* noundef %1) #4
erased an instruction cause it was called in a function  %1 = call i8* @CAT_new(i64 noundef 5) #4

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #4
Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4
i64 11

BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* %5, i64 3)
  call void @CAT_set(i8* %5, i64 11)
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 11)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  call void @CAT_destroy(i8* noundef %1) #4
  ret void


NEXTBLOCK


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_set(i8* %5, i64 3)

endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 3)


Instruction
  call void @CAT_set(i8* %5, i64 11)

endofblockkilling:  call void @CAT_set(i8* %5, i64 3)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 11)


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 11)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 11)


Instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4

endofblockkilling:  call void @CAT_set(i8* %5, i64 11)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  call void @CAT_destroy(i8* noundef %1) #4
erased an instruction cause it was called in a function  %1 = call i8* @CAT_new(i64 noundef 5) #4

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #4
Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* %5, i64 3)
  call void @CAT_set(i8* %5, i64 11)
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 11)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  call void @CAT_destroy(i8* noundef %1) #4
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  call void @CAT_execution()

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %5 = call i64 @CAT_variables() #4

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  %7 = call i64 @CAT_cost() #4

Constant after instruction


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str, i64 0, i64 0))
  call void @CAT_execution()
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))
  %5 = call i64 @CAT_variables() #4
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)
  %7 = call i64 @CAT_cost() #4
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_2.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_set(i8* %5, i64 3)

endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 3)


Instruction
  call void @CAT_set(i8* %5, i64 11)

endofblockkilling:  call void @CAT_set(i8* %5, i64 3)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 11)


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 11)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* %5, i64 11)


Instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4

endofblockkilling:  call void @CAT_set(i8* %5, i64 11)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  call void @CAT_destroy(i8* noundef %1) #4
erased an instruction cause it was called in a function  %1 = call i8* @CAT_new(i64 noundef 5) #4

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #4
Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #4
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #4
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* %5, i64 3)
  call void @CAT_set(i8* %5, i64 11)
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 11)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  call void @CAT_destroy(i8* noundef %1) #4
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  call void @CAT_execution()

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %5 = call i64 @CAT_variables() #4

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  %7 = call i64 @CAT_cost() #4

Constant after instruction


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str, i64 0, i64 0))
  call void @CAT_execution()
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.7, i64 0, i64 0))
  %5 = call i64 @CAT_variables() #4
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)
  %7 = call i64 @CAT_cost() #4
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test3'
