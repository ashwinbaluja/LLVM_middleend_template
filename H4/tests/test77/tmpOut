make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test77'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %3 = icmp sgt i32 %1, 10

Constant after instruction


Instruction
  br i1 %3, label %4, label %6

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = icmp sgt i32 %1, 10
  br i1 %3, label %4, label %6


NEXTBLOCK


Instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  br label %6

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3


BLOCK AFTER MODIFICATION

4:                                                ; preds = %2
  %5 = call i8* @CAT_new(i64 noundef 8) #3
  br label %6


NEXTBLOCK


Instruction
  %7 = phi i8* [ %5, %4 ], [ %0, %2 ]
phiNode
not falsefind

incomingValue:   %5 = call i8* @CAT_new(i64 noundef 8) #3
incomingConstant: i64 8
incomingValue: i8* %0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %8 = call i64 @CAT_get(i8* noundef %7) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  call void @CAT_add(i8* noundef %7, i8* noundef %7, i8* noundef %7) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3


Instruction
  ret void

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3


BLOCK AFTER MODIFICATION

6:                                                ; preds = %4, %2
  %7 = phi i8* [ %5, %4 ], [ %0, %2 ]
  %8 = call i64 @CAT_get(i8* noundef %7) #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i64 noundef %8)
  call void @CAT_add(i8* noundef %7, i8* noundef %7, i8* noundef %7) #3
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %4 = icmp sgt i32 %0, 10

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  br i1 %4, label %5, label %7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = icmp sgt i32 %0, 10
  br i1 %4, label %5, label %7


NEXTBLOCK


Instruction
  %6 = call i8* @CAT_new(i64 noundef 8) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  br label %7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3


BLOCK AFTER MODIFICATION

5:                                                ; preds = %2
  %6 = call i8* @CAT_new(i64 noundef 8) #3
  br label %7


NEXTBLOCK


Instruction
  %8 = phi i8* [ %6, %5 ], [ %3, %2 ]
phiNode
not falsefind

incomingValue:   %6 = call i8* @CAT_new(i64 noundef 8) #3
incomingConstant: i64 8
incomingValue:   %3 = call i8* @CAT_new(i64 noundef 5) #3
incomingConstant: i64 5
not equal
prev: i64 8
Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %9 = call i64 @CAT_get(i8* noundef %8) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i64 noundef %9) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  call void @CAT_add(i8* noundef %8, i8* noundef %8, i8* noundef %8) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  call void @CAT_sub(i8* noundef %8, i8* noundef %8, i8* noundef %8) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  call void @CAT_set(i8* noundef %8, i64 noundef 42) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3
  call void @CAT_set(i8* noundef %8, i64 noundef 42) #3


Instruction
  %11 = call i64 @CAT_variables() #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3
  call void @CAT_set(i8* noundef %8, i64 noundef 42) #3


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %11)

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3
  call void @CAT_set(i8* noundef %8, i64 noundef 42) #3


Instruction
  %13 = call i64 @CAT_cost() #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3
  call void @CAT_set(i8* noundef %8, i64 noundef 42) #3


Instruction
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3
  call void @CAT_set(i8* noundef %8, i64 noundef 42) #3


Instruction
  ret i32 0

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #3
  %6 = call i8* @CAT_new(i64 noundef 8) #3
  call void @CAT_set(i8* noundef %8, i64 noundef 42) #3


BLOCK AFTER MODIFICATION

7:                                                ; preds = %2, %5
  %8 = phi i8* [ %6, %5 ], [ %3, %2 ]
  %9 = call i64 @CAT_get(i8* noundef %8) #3
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i64 noundef %9) #4
  call void @CAT_add(i8* noundef %8, i8* noundef %8, i8* noundef %8) #3
  call void @CAT_sub(i8* noundef %8, i8* noundef %8, i8* noundef %8) #3
  call void @CAT_set(i8* noundef %8, i64 noundef 42) #3
  %11 = call i64 @CAT_variables() #3
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %11)
  %13 = call i64 @CAT_cost() #3
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test77'
