make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test53'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****
loop

12:                                               ; preds = %2, %30
  %13 = phi i32 [ 1, %2 ], [ %31, %30 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %30 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %28, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %27, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %27 = call i8* @CAT_new(i64 noundef 1) #4
  %28 = add nuw nsw i32 %21, 1
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %.preheader3, label %20, !llvm.loop !3
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

30:                                               ; preds = %44
  %.lcssa6 = phi i8* [ %45, %44 ]
  %31 = add nuw nsw i32 %13, 1
  %32 = icmp eq i32 %31, 11
  br i1 %32, label %6, label %12, !llvm.loop !6
: 
____________________
loop

33:                                               ; preds = %.preheader3, %44
  %34 = phi i32 [ %47, %44 ], [ 0, %.preheader3 ]
  %35 = phi i32 [ %46, %44 ], [ 0, %.preheader3 ]
  %36 = phi i8* [ %45, %44 ], [ %.lcssa, %.preheader3 ]
  %37 = call i32 @llvm.umax.i32(i32 %34, i32 1)
  %38 = call i64 @CAT_get(i8* noundef %36) #4
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)
  call void @CAT_add(i8* noundef %36, i8* noundef %3, i8* noundef %4) #4
  %40 = call i64 @CAT_get(i8* noundef %36) #4
  %41 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %40)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %42 = call i8* @CAT_new(i64 noundef 1) #4
  %43 = icmp eq i32 %35, 0
  br i1 %43, label %44, label %.preheader1
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

44:                                               ; preds = %.loopexit2, %33
  %45 = phi i8* [ %42, %33 ], [ %.lcssa5, %.loopexit2 ]
  %46 = add nuw nsw i32 %35, 1
  %47 = add nuw nsw i32 %34, 3
  %48 = icmp eq i32 %46, %13
  br i1 %48, label %30, label %33, !llvm.loop !7
: 
____________________
loop

49:                                               ; preds = %.preheader1, %60
  %50 = phi i32 [ %63, %60 ], [ 0, %.preheader1 ]
  %51 = phi i32 [ %62, %60 ], [ 0, %.preheader1 ]
  %52 = phi i8* [ %61, %60 ], [ %42, %.preheader1 ]
  %53 = call i32 @llvm.umax.i32(i32 %50, i32 1)
  %54 = call i64 @CAT_get(i8* noundef %52) #4
  %55 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %54)
  call void @CAT_add(i8* noundef %52, i8* noundef %3, i8* noundef %4) #4
  %56 = call i64 @CAT_get(i8* noundef %52) #4
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %58 = call i8* @CAT_new(i64 noundef 1) #4
  %59 = icmp eq i32 %51, 0
  br i1 %59, label %60, label %.preheader
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

60:                                               ; preds = %.loopexit, %49
  %61 = phi i8* [ %58, %49 ], [ %.lcssa4, %.loopexit ]
  %62 = add nuw nsw i32 %51, 1
  %63 = add nuw nsw i32 %50, 2
  %64 = icmp eq i32 %62, %37
  br i1 %64, label %.loopexit2, label %49, !llvm.loop !8
: 
____________________
loop

65:                                               ; preds = %.preheader, %65
  %66 = phi i32 [ %73, %65 ], [ 0, %.preheader ]
  %67 = phi i8* [ %72, %65 ], [ %58, %.preheader ]
  %68 = call i64 @CAT_get(i8* noundef %67) #4
  %69 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %68)
  call void @CAT_add(i8* noundef %67, i8* noundef %3, i8* noundef %4) #4
  %70 = call i64 @CAT_get(i8* noundef %67) #4
  %71 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %70)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %72 = call i8* @CAT_new(i64 noundef 1) #4
  %73 = add nuw nsw i32 %66, 1
  %74 = icmp eq i32 %73, %53
  br i1 %74, label %.loopexit, label %65, !llvm.loop !9
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

.loopexit:                                        ; preds = %65
  %.lcssa4 = phi i8* [ %72, %65 ]
  br label %60
: 
____________________
loop

.preheader:                                       ; preds = %49
  br label %65
: 
____________________
loop

.preheader1:                                      ; preds = %33
  br label %49
: 
____________________
loop

.loopexit2:                                       ; preds = %60
  %.lcssa5 = phi i8* [ %61, %60 ]
  br label %44
: 
____________________
loop

.preheader3:                                      ; preds = %20
  %.lcssa = phi i8* [ %27, %20 ]
  br label %33
: 
____________________


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %30 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #43->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #42->1

Instruction
  %13 = phi i32 [ 1, %2 ], [ %31, %30 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %30 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %30
  %13 = phi i32 [ 1, %2 ], [ %31, %30 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %30 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %22 = phi i8* [ %19, %12 ], [ %27, %20 ] 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %28, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %27, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %27 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %27 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %27 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %29 = icmp eq i32 %28, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %27 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %29, label %.preheader3, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %27 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %28, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %27, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %27 = call i8* @CAT_new(i64 noundef 1) #4
  %28 = add nuw nsw i32 %21, 1
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %.preheader3, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa = phi i8* [ %27, %20 ]
phiNode
not falsefind

constantphifound  %.lcssa = phi i8* [ %27, %20 ]  %27 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %27 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %33

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %27 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

BLOCK AFTER MODIFICATION

.preheader3:                                      ; preds = %20
  br label %32


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ] 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %35 = phi i8* [ %44, %43 ], [ %.lcssa, %.preheader3 ] 

Instruction
  %33 = phi i32 [ %46, %43 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %46 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %34 = phi i32 [ %45, %43 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %45 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %35 = phi i8* [ %44, %43 ], [ %.lcssa, %.preheader3 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %37 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %39 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %41 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %42 = icmp eq i32 %34, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %42, label %43, label %.preheader1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

32:                                               ; preds = %.preheader3, %43
  %33 = phi i32 [ %46, %43 ], [ 0, %.preheader3 ]
  %34 = phi i32 [ %45, %43 ], [ 0, %.preheader3 ]
  %35 = phi i8* [ %44, %43 ], [ %.lcssa, %.preheader3 ]
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)
  %37 = call i64 @CAT_get(i8* noundef %35) #4
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4
  %39 = call i64 @CAT_get(i8* noundef %35) #4
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %42 = icmp eq i32 %34, 0
  br i1 %42, label %43, label %.preheader1


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %32

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3:                                      ; preds = %20
  br label %32


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %44 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]
phiNode
not falsefind

incomingValue:   %41 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
incomingValue:   %.lcssa5 = phi i8* [ %60, %59 ]

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %45 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %46 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %47 = icmp eq i32 %45, %13

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %47, label %29, label %32, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

43:                                               ; preds = %.loopexit2, %32
  %44 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]
  %45 = add nuw nsw i32 %34, 1
  %46 = add nuw nsw i32 %33, 3
  %47 = icmp eq i32 %45, %13
  br i1 %47, label %29, label %32, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %48

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader1:                                      ; preds = %32
  br label %48


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #43->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #42->1

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa6 = phi i8* [ %44, %43 ]
phiNode
not falsefind

constantphifound  %.lcssa6 = phi i8* [ %44, %43 ]  %44 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %31 = icmp eq i32 %30, 11

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]

BLOCK AFTER MODIFICATION

29:                                               ; preds = %43
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ] 

Instruction
  %33 = phi i32 [ %45, %43 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %45 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %34 = phi i32 [ %44, %43 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %44 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %37 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %39 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %41 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %42 = icmp eq i32 %34, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %42, label %43, label %.preheader1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

32:                                               ; preds = %.preheader3, %43
  %33 = phi i32 [ %45, %43 ], [ 0, %.preheader3 ]
  %34 = phi i32 [ %44, %43 ], [ 0, %.preheader3 ]
  %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ]
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)
  %37 = call i64 @CAT_get(i8* noundef %35) #4
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4
  %39 = call i64 @CAT_get(i8* noundef %35) #4
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %42 = icmp eq i32 %34, 0
  br i1 %42, label %43, label %.preheader1


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %50 = phi i8* [ %59, %58 ], [ %41, %.preheader1 ] 

Instruction
  %48 = phi i32 [ %61, %58 ], [ 0, %.preheader1 ]
phiNode
not falsefind

incomingValue:   %61 = add nuw nsw i32 %48, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %49 = phi i32 [ %60, %58 ], [ 0, %.preheader1 ]
phiNode
not falsefind

incomingValue:   %60 = add nuw nsw i32 %49, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %50 = phi i8* [ %59, %58 ], [ %41, %.preheader1 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %51 = call i32 @llvm.umax.i32(i32 %48, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %52 = call i64 @CAT_get(i8* noundef %50) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %53 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %52)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %50, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %54 = call i64 @CAT_get(i8* noundef %50) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %55 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %54)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %56 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %57 = icmp eq i32 %49, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %57, label %58, label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

47:                                               ; preds = %.preheader1, %58
  %48 = phi i32 [ %61, %58 ], [ 0, %.preheader1 ]
  %49 = phi i32 [ %60, %58 ], [ 0, %.preheader1 ]
  %50 = phi i8* [ %59, %58 ], [ %41, %.preheader1 ]
  %51 = call i32 @llvm.umax.i32(i32 %48, i32 1)
  %52 = call i64 @CAT_get(i8* noundef %50) #4
  %53 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %52)
  call void @CAT_add(i8* noundef %50, i8* noundef %3, i8* noundef %4) #4
  %54 = call i64 @CAT_get(i8* noundef %50) #4
  %55 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %54)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %57 = icmp eq i32 %49, 0
  br i1 %57, label %58, label %.preheader


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ] 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3, label %20, !llvm.loop !3


NEXTBLOCK


Instruction
  %7 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %7, i8* noundef %7, i8* noundef %7) #4

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %8 = call i64 @CAT_variables() #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %10 = call i64 @CAT_cost() #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

6:                                                ; preds = %29
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %7, i64 104)
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %8 = call i64 @CAT_variables() #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #4
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #46->5REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #45->4

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa6 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]
phiNode
not falsefind

incomingValue:   %41 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
incomingValue:   %.lcssa5 = phi i8* [ %59, %58 ]

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %44 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %45 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %46 = icmp eq i32 %44, %13

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %46, label %29, label %32, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

43:                                               ; preds = %.loopexit2, %32
  %.lcssa6 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]
  %44 = add nuw nsw i32 %34, 1
  %45 = add nuw nsw i32 %33, 3
  %46 = icmp eq i32 %44, %13
  br i1 %46, label %29, label %32, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %47

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader1:                                      ; preds = %32
  br label %47


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %59 = phi i8* [ %56, %47 ], [ %.lcssa4, %.loopexit ]
phiNode
not falsefind

incomingValue:   %56 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
incomingValue:   %.lcssa4 = phi i8* [ %70, %63 ]

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %60 = add nuw nsw i32 %49, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %61 = add nuw nsw i32 %48, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %62 = icmp eq i32 %60, %36

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %62, label %.loopexit2, label %47, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

58:                                               ; preds = %.loopexit, %47
  %59 = phi i8* [ %56, %47 ], [ %.lcssa4, %.loopexit ]
  %60 = add nuw nsw i32 %49, 1
  %61 = add nuw nsw i32 %48, 2
  %62 = icmp eq i32 %60, %36
  br i1 %62, label %.loopexit2, label %47, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %63

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %47
  br label %63


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %32

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3:                                      ; preds = %20
  br label %32


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %31 = icmp eq i32 %30, 11

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

29:                                               ; preds = %43
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa5 = phi i8* [ %59, %58 ]
phiNode
not falsefind

constantphifound  %.lcssa5 = phi i8* [ %59, %58 ]  %59 = phi i8* [ %56, %47 ], [ %.lcssa4, %.loopexit ]

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %43

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = phi i8* [ %56, %47 ], [ %.lcssa4, %.loopexit ]

BLOCK AFTER MODIFICATION

.loopexit2:                                       ; preds = %58
  br label %43


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %50 = phi i8* [ %.lcssa5, %58 ], [ %41, %.preheader1 ] 

Instruction
  %48 = phi i32 [ %60, %58 ], [ 0, %.preheader1 ]
phiNode
not falsefind

incomingValue:   %60 = add nuw nsw i32 %48, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %49 = phi i32 [ %59, %58 ], [ 0, %.preheader1 ]
phiNode
not falsefind

incomingValue:   %59 = add nuw nsw i32 %49, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %50 = phi i8* [ %.lcssa5, %58 ], [ %41, %.preheader1 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %51 = call i32 @llvm.umax.i32(i32 %48, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %52 = call i64 @CAT_get(i8* noundef %50) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %53 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %52)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %50, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %54 = call i64 @CAT_get(i8* noundef %50) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %55 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %54)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %56 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %57 = icmp eq i32 %49, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %57, label %58, label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

47:                                               ; preds = %.preheader1, %58
  %48 = phi i32 [ %60, %58 ], [ 0, %.preheader1 ]
  %49 = phi i32 [ %59, %58 ], [ 0, %.preheader1 ]
  %50 = phi i8* [ %.lcssa5, %58 ], [ %41, %.preheader1 ]
  %51 = call i32 @llvm.umax.i32(i32 %48, i32 1)
  %52 = call i64 @CAT_get(i8* noundef %50) #4
  %53 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %52)
  call void @CAT_add(i8* noundef %50, i8* noundef %3, i8* noundef %4) #4
  %54 = call i64 @CAT_get(i8* noundef %50) #4
  %55 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %54)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %57 = icmp eq i32 %49, 0
  br i1 %57, label %58, label %.preheader


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %64 = phi i8* [ %69, %62 ], [ %56, %.preheader ] 

Instruction
  %63 = phi i32 [ %70, %62 ], [ 0, %.preheader ]
phiNode
not falsefind

incomingValue:   %70 = add nuw nsw i32 %63, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %64 = phi i8* [ %69, %62 ], [ %56, %.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %65 = call i64 @CAT_get(i8* noundef %64) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %66 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %65)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %64, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %67 = call i64 @CAT_get(i8* noundef %64) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %68 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %67)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %69 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %69 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %70 = add nuw nsw i32 %63, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %69 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %71 = icmp eq i32 %70, %51

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %69 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %71, label %.loopexit, label %62, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %69 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

62:                                               ; preds = %.preheader, %62
  %63 = phi i32 [ %70, %62 ], [ 0, %.preheader ]
  %64 = phi i8* [ %69, %62 ], [ %56, %.preheader ]
  %65 = call i64 @CAT_get(i8* noundef %64) #4
  %66 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %65)
  call void @CAT_add(i8* noundef %64, i8* noundef %3, i8* noundef %4) #4
  %67 = call i64 @CAT_get(i8* noundef %64) #4
  %68 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %67)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %69 = call i8* @CAT_new(i64 noundef 1) #4
  %70 = add nuw nsw i32 %63, 1
  %71 = icmp eq i32 %70, %51
  br i1 %71, label %.loopexit, label %62, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ] 

Instruction
  %33 = phi i32 [ %45, %43 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %45 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %34 = phi i32 [ %44, %43 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %44 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %37 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %39 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %41 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %42 = icmp eq i32 %34, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %42, label %43, label %.preheader1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

32:                                               ; preds = %.preheader3, %43
  %33 = phi i32 [ %45, %43 ], [ 0, %.preheader3 ]
  %34 = phi i32 [ %44, %43 ], [ 0, %.preheader3 ]
  %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ]
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)
  %37 = call i64 @CAT_get(i8* noundef %35) #4
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4
  %39 = call i64 @CAT_get(i8* noundef %35) #4
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %42 = icmp eq i32 %34, 0
  br i1 %42, label %43, label %.preheader1


NEXTBLOCK


Instruction
  %7 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_set(i8* %7, i64 104)

endofblockkilling:  call void @CAT_set(i8* %7, i64 104)
endofblockkilling:  %19 = call i8* @CAT_new(i64 noundef 1) #4
endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #4
endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 52) #4
endofblockkilling:  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
endofblockkilling:  %41 = call i8* @CAT_new(i64 noundef 1) #4
Constant after instruction


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #4

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %8 = call i64 @CAT_variables() #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %10 = call i64 @CAT_cost() #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

6:                                                ; preds = %29
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %7, i64 104)
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %8 = call i64 @CAT_variables() #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #4
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #46->5REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #45->4

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa6 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]
phiNode
not falsefind

incomingValue:   %41 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
incomingValue:   %.lcssa5 = phi i8* [ %56, %47 ], [ %.lcssa4, %.loopexit ]

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %44 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %45 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %46 = icmp eq i32 %44, %13

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %46, label %29, label %32, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

43:                                               ; preds = %.loopexit2, %32
  %.lcssa6 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]
  %44 = add nuw nsw i32 %34, 1
  %45 = add nuw nsw i32 %33, 3
  %46 = icmp eq i32 %44, %13
  br i1 %46, label %29, label %32, !llvm.loop !7


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa5 = phi i8* [ %56, %47 ], [ %.lcssa4, %.loopexit ]
phiNode
not falsefind

incomingValue:   %56 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
incomingValue:   %.lcssa4 = phi i8* [ %69, %62 ]

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %59 = add nuw nsw i32 %49, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %60 = add nuw nsw i32 %48, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %61 = icmp eq i32 %59, %36

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %61, label %.loopexit2, label %47, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

58:                                               ; preds = %.loopexit, %47
  %.lcssa5 = phi i8* [ %56, %47 ], [ %.lcssa4, %.loopexit ]
  %59 = add nuw nsw i32 %49, 1
  %60 = add nuw nsw i32 %48, 2
  %61 = icmp eq i32 %59, %36
  br i1 %61, label %.loopexit2, label %47, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %62

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %47
  br label %62


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa4 = phi i8* [ %69, %62 ]
phiNode
not falsefind

constantphifound  %.lcssa4 = phi i8* [ %69, %62 ]  %69 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %69 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %58

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %69 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4

BLOCK AFTER MODIFICATION

.loopexit:                                        ; preds = %62
  br label %58


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %64 = phi i8* [ %.lcssa4, %62 ], [ %56, %.preheader ] 

Instruction
  %63 = phi i32 [ %69, %62 ], [ 0, %.preheader ]
phiNode
not falsefind

incomingValue:   %69 = add nuw nsw i32 %63, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %64 = phi i8* [ %.lcssa4, %62 ], [ %56, %.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %65 = call i64 @CAT_get(i8* noundef %64) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %66 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %65)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %64, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %67 = call i64 @CAT_get(i8* noundef %64) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %68 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %67)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %69 = add nuw nsw i32 %63, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %70 = icmp eq i32 %69, %51

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %70, label %.loopexit, label %62, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

62:                                               ; preds = %.preheader, %62
  %63 = phi i32 [ %69, %62 ], [ 0, %.preheader ]
  %64 = phi i8* [ %.lcssa4, %62 ], [ %56, %.preheader ]
  %65 = call i64 @CAT_get(i8* noundef %64) #4
  %66 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %65)
  call void @CAT_add(i8* noundef %64, i8* noundef %3, i8* noundef %4) #4
  %67 = call i64 @CAT_get(i8* noundef %64) #4
  %68 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %67)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4
  %69 = add nuw nsw i32 %63, 1
  %70 = icmp eq i32 %69, %51
  br i1 %70, label %.loopexit, label %62, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa6 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]
phiNode
not falsefind

incomingValue:   %41 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
incomingValue:   %.lcssa5 = phi i8* [ %56, %47 ], [ %.lcssa4, %.loopexit ]

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %44 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %45 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %46 = icmp eq i32 %44, %13

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %46, label %29, label %32, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

43:                                               ; preds = %.loopexit2, %32
  %.lcssa6 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]
  %44 = add nuw nsw i32 %34, 1
  %45 = add nuw nsw i32 %33, 3
  %46 = icmp eq i32 %44, %13
  br i1 %46, label %29, label %32, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %47

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader1:                                      ; preds = %32
  br label %47


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ] 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %31 = icmp eq i32 %30, 11

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

29:                                               ; preds = %43
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ] 

Instruction
  %33 = phi i32 [ %45, %43 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %45 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %34 = phi i32 [ %44, %43 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %44 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %37 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %39 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %41 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %42 = icmp eq i32 %34, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %42, label %43, label %.preheader1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

32:                                               ; preds = %.preheader3, %43
  %33 = phi i32 [ %45, %43 ], [ 0, %.preheader3 ]
  %34 = phi i32 [ %44, %43 ], [ 0, %.preheader3 ]
  %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ]
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)
  %37 = call i64 @CAT_get(i8* noundef %35) #4
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4
  %39 = call i64 @CAT_get(i8* noundef %35) #4
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %42 = icmp eq i32 %34, 0
  br i1 %42, label %43, label %.preheader1


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #46->5REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #45->4

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %43

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit2:                                       ; preds = %58
  br label %43


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %50 = phi i8* [ %.lcssa5, %58 ], [ %41, %.preheader1 ] 

Instruction
  %48 = phi i32 [ %60, %58 ], [ 0, %.preheader1 ]
phiNode
not falsefind

incomingValue:   %60 = add nuw nsw i32 %48, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %49 = phi i32 [ %59, %58 ], [ 0, %.preheader1 ]
phiNode
not falsefind

incomingValue:   %59 = add nuw nsw i32 %49, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %50 = phi i8* [ %.lcssa5, %58 ], [ %41, %.preheader1 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %51 = call i32 @llvm.umax.i32(i32 %48, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %52 = call i64 @CAT_get(i8* noundef %50) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %53 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %52)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %50, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %54 = call i64 @CAT_get(i8* noundef %50) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %55 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %54)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %56 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %57 = icmp eq i32 %49, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %57, label %58, label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

47:                                               ; preds = %.preheader1, %58
  %48 = phi i32 [ %60, %58 ], [ 0, %.preheader1 ]
  %49 = phi i32 [ %59, %58 ], [ 0, %.preheader1 ]
  %50 = phi i8* [ %.lcssa5, %58 ], [ %41, %.preheader1 ]
  %51 = call i32 @llvm.umax.i32(i32 %48, i32 1)
  %52 = call i64 @CAT_get(i8* noundef %50) #4
  %53 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %52)
  call void @CAT_add(i8* noundef %50, i8* noundef %3, i8* noundef %4) #4
  %54 = call i64 @CAT_get(i8* noundef %50) #4
  %55 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %54)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %57 = icmp eq i32 %49, 0
  br i1 %57, label %58, label %.preheader


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa5 = phi i8* [ %56, %47 ], [ %.lcssa4, %.loopexit ]
phiNode
not falsefind

incomingValue:   %56 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
incomingValue:   %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
constant: i64 1
constantphifoundHERE  %.lcssa5 = phi i8* [ %56, %47 ], [ %.lcssa4, %.loopexit ]i64 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %59 = add nuw nsw i32 %49, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %60 = add nuw nsw i32 %48, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %61 = icmp eq i32 %59, %36

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %61, label %.loopexit2, label %47, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4

BLOCK AFTER MODIFICATION

57:                                               ; preds = %.loopexit, %47
  %58 = add nuw nsw i32 %49, 1
  %59 = add nuw nsw i32 %48, 2
  %60 = icmp eq i32 %58, %36
  br i1 %60, label %.loopexit2, label %47, !llvm.loop !8


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %57

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit:                                        ; preds = %61
  br label %57


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %63 = phi i8* [ %.lcssa4, %61 ], [ %.lcssa5, %.preheader ] 

Instruction
  %62 = phi i32 [ %68, %61 ], [ 0, %.preheader ]
phiNode
not falsefind

incomingValue:   %68 = add nuw nsw i32 %62, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %63 = phi i8* [ %.lcssa4, %61 ], [ %.lcssa5, %.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %64 = call i64 @CAT_get(i8* noundef %63) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %65 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %64)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %63, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %66 = call i64 @CAT_get(i8* noundef %63) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %67 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %66)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %68 = add nuw nsw i32 %62, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %69 = icmp eq i32 %68, %51

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %69, label %.loopexit, label %61, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

61:                                               ; preds = %.preheader, %61
  %62 = phi i32 [ %68, %61 ], [ 0, %.preheader ]
  %63 = phi i8* [ %.lcssa4, %61 ], [ %.lcssa5, %.preheader ]
  %64 = call i64 @CAT_get(i8* noundef %63) #4
  %65 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %64)
  call void @CAT_add(i8* noundef %63, i8* noundef %3, i8* noundef %4) #4
  %66 = call i64 @CAT_get(i8* noundef %63) #4
  %67 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %66)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4
  %68 = add nuw nsw i32 %62, 1
  %69 = icmp eq i32 %68, %51
  br i1 %69, label %.loopexit, label %61, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %31 = icmp eq i32 %30, 11

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

29:                                               ; preds = %43
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ] 

Instruction
  %33 = phi i32 [ %45, %43 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %45 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %34 = phi i32 [ %44, %43 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %44 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %37 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %39 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %41 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %42 = icmp eq i32 %34, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %42, label %43, label %.preheader1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

32:                                               ; preds = %.preheader3, %43
  %33 = phi i32 [ %45, %43 ], [ 0, %.preheader3 ]
  %34 = phi i32 [ %44, %43 ], [ 0, %.preheader3 ]
  %35 = phi i8* [ %.lcssa6, %43 ], [ %.lcssa, %.preheader3 ]
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)
  %37 = call i64 @CAT_get(i8* noundef %35) #4
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4
  %39 = call i64 @CAT_get(i8* noundef %35) #4
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %42 = icmp eq i32 %34, 0
  br i1 %42, label %43, label %.preheader1


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %50 = phi i8* [ %.lcssa5, %57 ], [ %41, %.preheader1 ] 

Instruction
  %48 = phi i32 [ %59, %57 ], [ 0, %.preheader1 ]
phiNode
not falsefind

incomingValue:   %59 = add nuw nsw i32 %48, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %49 = phi i32 [ %58, %57 ], [ 0, %.preheader1 ]
phiNode
not falsefind

incomingValue:   %58 = add nuw nsw i32 %49, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %50 = phi i8* [ %.lcssa5, %57 ], [ %41, %.preheader1 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %51 = call i32 @llvm.umax.i32(i32 %48, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %52 = call i64 @CAT_get(i8* noundef %50) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %53 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %52)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %50, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %54 = call i64 @CAT_get(i8* noundef %50) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %55 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %54)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %56 = icmp eq i32 %49, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %56, label %57, label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

47:                                               ; preds = %.preheader1, %57
  %48 = phi i32 [ %59, %57 ], [ 0, %.preheader1 ]
  %49 = phi i32 [ %58, %57 ], [ 0, %.preheader1 ]
  %50 = phi i8* [ %.lcssa5, %57 ], [ %41, %.preheader1 ]
  %51 = call i32 @llvm.umax.i32(i32 %48, i32 1)
  %52 = call i64 @CAT_get(i8* noundef %50) #4
  %53 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %52)
  call void @CAT_add(i8* noundef %50, i8* noundef %3, i8* noundef %4) #4
  %54 = call i64 @CAT_get(i8* noundef %50) #4
  %55 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %54)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %56 = icmp eq i32 %49, 0
  br i1 %56, label %57, label %.preheader


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %32

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3:                                      ; preds = %20
  br label %32


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ] 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3, label %20, !llvm.loop !3


NEXTBLOCK


Instruction
  %7 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_set(i8* %7, i64 104)

endofblockkilling:  call void @CAT_set(i8* %7, i64 104)
endofblockkilling:  %19 = call i8* @CAT_new(i64 noundef 1) #4
endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #4
endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 52) #4
endofblockkilling:  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
endofblockkilling:  %41 = call i8* @CAT_new(i64 noundef 1) #4
Constant after instruction


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #4

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %8 = call i64 @CAT_variables() #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %10 = call i64 @CAT_cost() #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

6:                                                ; preds = %29
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %7, i64 104)
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %8 = call i64 @CAT_variables() #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #4
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #46->5REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #45->4

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa6 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]
phiNode
not falsefind

incomingValue:   %41 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
incomingValue:   %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
constant: i64 1
constantphifoundHERE  %.lcssa6 = phi i8* [ %41, %32 ], [ %.lcssa5, %.loopexit2 ]i64 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %44 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %45 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %46 = icmp eq i32 %44, %13

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %46, label %29, label %32, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %41 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4

BLOCK AFTER MODIFICATION

42:                                               ; preds = %.loopexit2, %32
  %43 = add nuw nsw i32 %34, 1
  %44 = add nuw nsw i32 %33, 3
  %45 = icmp eq i32 %43, %13
  br i1 %45, label %29, label %32, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %46

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader1:                                      ; preds = %32
  br label %46


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ] 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %43 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %44 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %45 = icmp eq i32 %43, %13

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %45, label %29, label %32, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

42:                                               ; preds = %.loopexit2, %32
  %43 = add nuw nsw i32 %34, 1
  %44 = add nuw nsw i32 %33, 3
  %45 = icmp eq i32 %43, %13
  br i1 %45, label %29, label %32, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %57 = add nuw nsw i32 %48, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %58 = add nuw nsw i32 %47, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %59 = icmp eq i32 %57, %36

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %59, label %.loopexit2, label %46, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

56:                                               ; preds = %.loopexit, %46
  %57 = add nuw nsw i32 %48, 1
  %58 = add nuw nsw i32 %47, 2
  %59 = icmp eq i32 %57, %36
  br i1 %59, label %.loopexit2, label %46, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %60

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %46
  br label %60


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %42

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit2:                                       ; preds = %56
  br label %42


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %49 = phi i8* [ %.lcssa5, %56 ], [ %.lcssa6, %.preheader1 ] 

Instruction
  %47 = phi i32 [ %58, %56 ], [ 0, %.preheader1 ]
phiNode
not falsefind

incomingValue:   %58 = add nuw nsw i32 %47, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %48 = phi i32 [ %57, %56 ], [ 0, %.preheader1 ]
phiNode
not falsefind

incomingValue:   %57 = add nuw nsw i32 %48, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %49 = phi i8* [ %.lcssa5, %56 ], [ %.lcssa6, %.preheader1 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %50 = call i32 @llvm.umax.i32(i32 %47, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %51 = call i64 @CAT_get(i8* noundef %49) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %52 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %51)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %49, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %53 = call i64 @CAT_get(i8* noundef %49) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %54 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %53)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %55 = icmp eq i32 %48, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %55, label %56, label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

46:                                               ; preds = %.preheader1, %56
  %47 = phi i32 [ %58, %56 ], [ 0, %.preheader1 ]
  %48 = phi i32 [ %57, %56 ], [ 0, %.preheader1 ]
  %49 = phi i8* [ %.lcssa5, %56 ], [ %.lcssa6, %.preheader1 ]
  %50 = call i32 @llvm.umax.i32(i32 %47, i32 1)
  %51 = call i64 @CAT_get(i8* noundef %49) #4
  %52 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %51)
  call void @CAT_add(i8* noundef %49, i8* noundef %3, i8* noundef %4) #4
  %53 = call i64 @CAT_get(i8* noundef %49) #4
  %54 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %53)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %55 = icmp eq i32 %48, 0
  br i1 %55, label %56, label %.preheader


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #46->5REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #45->4

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %56

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit:                                        ; preds = %60
  br label %56


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %62 = phi i8* [ %.lcssa4, %60 ], [ %.lcssa5, %.preheader ] 

Instruction
  %61 = phi i32 [ %67, %60 ], [ 0, %.preheader ]
phiNode
not falsefind

incomingValue:   %67 = add nuw nsw i32 %61, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %62 = phi i8* [ %.lcssa4, %60 ], [ %.lcssa5, %.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %63 = call i64 @CAT_get(i8* noundef %62) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %64 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %63)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %62, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %65 = call i64 @CAT_get(i8* noundef %62) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %66 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %65)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %67 = add nuw nsw i32 %61, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %68 = icmp eq i32 %67, %50

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %68, label %.loopexit, label %60, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

60:                                               ; preds = %.preheader, %60
  %61 = phi i32 [ %67, %60 ], [ 0, %.preheader ]
  %62 = phi i8* [ %.lcssa4, %60 ], [ %.lcssa5, %.preheader ]
  %63 = call i64 @CAT_get(i8* noundef %62) #4
  %64 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %63)
  call void @CAT_add(i8* noundef %62, i8* noundef %3, i8* noundef %4) #4
  %65 = call i64 @CAT_get(i8* noundef %62) #4
  %66 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %65)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4
  %67 = add nuw nsw i32 %61, 1
  %68 = icmp eq i32 %67, %50
  br i1 %68, label %.loopexit, label %60, !llvm.loop !9


NEXTBLOCK


Instruction
  %7 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_set(i8* %7, i64 104)

endofblockkilling:  call void @CAT_set(i8* %7, i64 104)
endofblockkilling:  %19 = call i8* @CAT_new(i64 noundef 1) #4
endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #4
endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 52) #4
endofblockkilling:  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
endofblockkilling:  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
Constant after instruction


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #4

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %8 = call i64 @CAT_variables() #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %10 = call i64 @CAT_cost() #4

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

6:                                                ; preds = %29
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %7, i64 104)
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %8 = call i64 @CAT_variables() #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #4
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %35 = phi i8* [ %.lcssa6, %42 ], [ %.lcssa, %.preheader3 ] 

Instruction
  %33 = phi i32 [ %44, %42 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %44 = add nuw nsw i32 %33, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %34 = phi i32 [ %43, %42 ], [ 0, %.preheader3 ]
phiNode
not falsefind

incomingValue:   %43 = add nuw nsw i32 %34, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %35 = phi i8* [ %.lcssa6, %42 ], [ %.lcssa, %.preheader3 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %37 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %39 = call i64 @CAT_get(i8* noundef %35) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %41 = icmp eq i32 %34, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %41, label %42, label %.preheader1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

32:                                               ; preds = %.preheader3, %42
  %33 = phi i32 [ %44, %42 ], [ 0, %.preheader3 ]
  %34 = phi i32 [ %43, %42 ], [ 0, %.preheader3 ]
  %35 = phi i8* [ %.lcssa6, %42 ], [ %.lcssa, %.preheader3 ]
  %36 = call i32 @llvm.umax.i32(i32 %33, i32 1)
  %37 = call i64 @CAT_get(i8* noundef %35) #4
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #4
  %39 = call i64 @CAT_get(i8* noundef %35) #4
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %39)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %41 = icmp eq i32 %34, 0
  br i1 %41, label %42, label %.preheader1


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %32

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3:                                      ; preds = %20
  br label %32


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %31 = icmp eq i32 %30, 11

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

29:                                               ; preds = %42
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****
loop

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

29:                                               ; preds = %.loopexit2
  %.lcssa6.lcssa = phi i8* [ %.lcssa6, %.loopexit2 ]
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6
: 
____________________
loop

.preheader3:                                      ; preds = %.preheader3.preheader, %.loopexit2
  %32 = phi i32 [ %42, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %33 = phi i32 [ %41, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa.lcssa, %.preheader3.preheader ]
  %35 = call i32 @llvm.umax.i32(i32 %32, i32 1)
  %36 = call i64 @CAT_get(i8* noundef %34) #4
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #4
  %38 = call i64 @CAT_get(i8* noundef %34) #4
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %40 = icmp eq i32 %33, 0
  br i1 %40, label %.loopexit2, label %.preheader1.preheader
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

.loopexit2:                                       ; preds = %.loopexit2.loopexit, %.preheader3
  %41 = add nuw nsw i32 %33, 1
  %42 = add nuw nsw i32 %32, 3
  %43 = icmp eq i32 %41, %13
  br i1 %43, label %29, label %.preheader3, !llvm.loop !7
: 
____________________
loop

.preheader1:                                      ; preds = %.preheader1.preheader, %.loopexit
  %44 = phi i32 [ %54, %.loopexit ], [ 0, %.preheader1.preheader ]
  %45 = phi i32 [ %53, %.loopexit ], [ 0, %.preheader1.preheader ]
  %46 = phi i8* [ %.lcssa5, %.loopexit ], [ %.lcssa6, %.preheader1.preheader ]
  %47 = call i32 @llvm.umax.i32(i32 %44, i32 1)
  %48 = call i64 @CAT_get(i8* noundef %46) #4
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)
  call void @CAT_add(i8* noundef %46, i8* noundef %3, i8* noundef %4) #4
  %50 = call i64 @CAT_get(i8* noundef %46) #4
  %51 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %50)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %52 = icmp eq i32 %45, 0
  br i1 %52, label %.loopexit, label %.preheader.preheader
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

.loopexit:                                        ; preds = %.loopexit.loopexit, %.preheader1
  %53 = add nuw nsw i32 %45, 1
  %54 = add nuw nsw i32 %44, 2
  %55 = icmp eq i32 %53, %35
  br i1 %55, label %.loopexit2.loopexit, label %.preheader1, !llvm.loop !8
: 
____________________
loop

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %56 = phi i32 [ %62, %.preheader ], [ 0, %.preheader.preheader ]
  %57 = phi i8* [ %.lcssa4, %.preheader ], [ %.lcssa5, %.preheader.preheader ]
  %58 = call i64 @CAT_get(i8* noundef %57) #4
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %57, i8* noundef %3, i8* noundef %4) #4
  %60 = call i64 @CAT_get(i8* noundef %57) #4
  %61 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %60)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4
  %62 = add nuw nsw i32 %56, 1
  %63 = icmp eq i32 %62, %47
  br i1 %63, label %.loopexit.loopexit, label %.preheader, !llvm.loop !9
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

.loopexit.loopexit:                               ; preds = %.preheader
  br label %.loopexit
: 
____________________
loop

.preheader.preheader:                             ; preds = %.preheader1
  br label %.preheader
: 
____________________
loop

.preheader1.preheader:                            ; preds = %.preheader3
  br label %.preheader1
: 
____________________
loop

.loopexit2.loopexit:                              ; preds = %.loopexit
  br label %.loopexit2
: 
____________________
loop

.preheader3.preheader:                            ; preds = %20
  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]
  br label %.preheader3
: 
____________________


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #43->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #42->1

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]
phiNode
not falsefind

constantphifound  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %.preheader3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

BLOCK AFTER MODIFICATION

.preheader3.preheader:                            ; preds = %20
  br label %.preheader3


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ] 

Instruction
  %32 = phi i32 [ %42, %.loopexit2 ], [ 0, %.preheader3.preheader ]
phiNode
not falsefind

incomingValue:   %42 = add nuw nsw i32 %32, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %33 = phi i32 [ %41, %.loopexit2 ], [ 0, %.preheader3.preheader ]
phiNode
not falsefind

incomingValue:   %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %35 = call i32 @llvm.umax.i32(i32 %32, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %36 = call i64 @CAT_get(i8* noundef %34) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %38 = call i64 @CAT_get(i8* noundef %34) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %40 = icmp eq i32 %33, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %40, label %.loopexit2, label %.preheader1.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3:                                      ; preds = %.preheader3.preheader, %.loopexit2
  %32 = phi i32 [ %42, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %33 = phi i32 [ %41, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ]
  %35 = call i32 @llvm.umax.i32(i32 %32, i32 1)
  %36 = call i64 @CAT_get(i8* noundef %34) #4
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #4
  %38 = call i64 @CAT_get(i8* noundef %34) #4
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %40 = icmp eq i32 %33, 0
  br i1 %40, label %.loopexit2, label %.preheader1.preheader


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.preheader3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3.preheader:                            ; preds = %20
  br label %.preheader3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %42 = add nuw nsw i32 %32, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %43 = icmp eq i32 %41, %13

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %43, label %29, label %.preheader3, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit2:                                       ; preds = %.loopexit2.loopexit, %.preheader3
  %41 = add nuw nsw i32 %33, 1
  %42 = add nuw nsw i32 %32, 3
  %43 = icmp eq i32 %41, %13
  br i1 %43, label %29, label %.preheader3, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.preheader1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader1.preheader:                            ; preds = %.preheader3
  br label %.preheader1


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #43->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #42->1

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa6.lcssa = phi i8* [ %.lcssa6, %.loopexit2 ]
phiNode
not falsefind

constantphifound  %.lcssa6.lcssa = phi i8* [ %.lcssa6, %.loopexit2 ]  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %31 = icmp eq i32 %30, 11

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4

BLOCK AFTER MODIFICATION

29:                                               ; preds = %.loopexit2
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ] 

Instruction
  %32 = phi i32 [ %42, %.loopexit2 ], [ 0, %.preheader3.preheader ]
phiNode
not falsefind

incomingValue:   %42 = add nuw nsw i32 %32, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %33 = phi i32 [ %41, %.loopexit2 ], [ 0, %.preheader3.preheader ]
phiNode
not falsefind

incomingValue:   %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %35 = call i32 @llvm.umax.i32(i32 %32, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %36 = call i64 @CAT_get(i8* noundef %34) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %38 = call i64 @CAT_get(i8* noundef %34) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %40 = icmp eq i32 %33, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %40, label %.loopexit2, label %.preheader1.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3:                                      ; preds = %.preheader3.preheader, %.loopexit2
  %32 = phi i32 [ %42, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %33 = phi i32 [ %41, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ]
  %35 = call i32 @llvm.umax.i32(i32 %32, i32 1)
  %36 = call i64 @CAT_get(i8* noundef %34) #4
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #4
  %38 = call i64 @CAT_get(i8* noundef %34) #4
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %40 = icmp eq i32 %33, 0
  br i1 %40, label %.loopexit2, label %.preheader1.preheader


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %46 = phi i8* [ %.lcssa5, %.loopexit ], [ %.lcssa6, %.preheader1.preheader ] 

Instruction
  %44 = phi i32 [ %54, %.loopexit ], [ 0, %.preheader1.preheader ]
phiNode
not falsefind

incomingValue:   %54 = add nuw nsw i32 %44, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %45 = phi i32 [ %53, %.loopexit ], [ 0, %.preheader1.preheader ]
phiNode
not falsefind

incomingValue:   %53 = add nuw nsw i32 %45, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %46 = phi i8* [ %.lcssa5, %.loopexit ], [ %.lcssa6, %.preheader1.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %47 = call i32 @llvm.umax.i32(i32 %44, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %48 = call i64 @CAT_get(i8* noundef %46) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %46, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %50 = call i64 @CAT_get(i8* noundef %46) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %51 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %50)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %52 = icmp eq i32 %45, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %52, label %.loopexit, label %.preheader.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader1:                                      ; preds = %.preheader1.preheader, %.loopexit
  %44 = phi i32 [ %54, %.loopexit ], [ 0, %.preheader1.preheader ]
  %45 = phi i32 [ %53, %.loopexit ], [ 0, %.preheader1.preheader ]
  %46 = phi i8* [ %.lcssa5, %.loopexit ], [ %.lcssa6, %.preheader1.preheader ]
  %47 = call i32 @llvm.umax.i32(i32 %44, i32 1)
  %48 = call i64 @CAT_get(i8* noundef %46) #4
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)
  call void @CAT_add(i8* noundef %46, i8* noundef %3, i8* noundef %4) #4
  %50 = call i64 @CAT_get(i8* noundef %46) #4
  %51 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %50)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %52 = icmp eq i32 %45, 0
  br i1 %52, label %.loopexit, label %.preheader.preheader


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3


NEXTBLOCK


Instruction
  %7 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_set(i8* %7, i64 104)

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction
  call void @CAT_set(i8* %7, i64 104)
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #4

endofblockkilling:  call void @CAT_set(i8* %7, i64 104)
Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %8 = call i64 @CAT_variables() #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %10 = call i64 @CAT_cost() #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  ret i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

6:                                                ; preds = %29
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %7, i64 104)
  call void @CAT_set(i8* %7, i64 0)
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %8 = call i64 @CAT_variables() #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #4
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #46->5REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #45->4

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %42 = add nuw nsw i32 %32, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %43 = icmp eq i32 %41, %13

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %43, label %29, label %.preheader3, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit2:                                       ; preds = %.loopexit2.loopexit, %.preheader3
  %41 = add nuw nsw i32 %33, 1
  %42 = add nuw nsw i32 %32, 3
  %43 = icmp eq i32 %41, %13
  br i1 %43, label %29, label %.preheader3, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.preheader1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader1.preheader:                            ; preds = %.preheader3
  br label %.preheader1


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %53 = add nuw nsw i32 %45, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %54 = add nuw nsw i32 %44, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %55 = icmp eq i32 %53, %35

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %55, label %.loopexit2.loopexit, label %.preheader1, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit:                                        ; preds = %.loopexit.loopexit, %.preheader1
  %53 = add nuw nsw i32 %45, 1
  %54 = add nuw nsw i32 %44, 2
  %55 = icmp eq i32 %53, %35
  br i1 %55, label %.loopexit2.loopexit, label %.preheader1, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader.preheader:                             ; preds = %.preheader1
  br label %.preheader


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.preheader3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3.preheader:                            ; preds = %20
  br label %.preheader3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %31 = icmp eq i32 %30, 11

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

29:                                               ; preds = %.loopexit2
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.loopexit2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit2.loopexit:                              ; preds = %.loopexit
  br label %.loopexit2


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %57 = phi i8* [ %.lcssa4, %.preheader ], [ %.lcssa5, %.preheader.preheader ] 

Instruction
  %56 = phi i32 [ %62, %.preheader ], [ 0, %.preheader.preheader ]
phiNode
not falsefind

incomingValue:   %62 = add nuw nsw i32 %56, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %57 = phi i8* [ %.lcssa4, %.preheader ], [ %.lcssa5, %.preheader.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %58 = call i64 @CAT_get(i8* noundef %57) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %57, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %60 = call i64 @CAT_get(i8* noundef %57) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %61 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %60)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %62 = add nuw nsw i32 %56, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %63 = icmp eq i32 %62, %47

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %63, label %.loopexit.loopexit, label %.preheader, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %56 = phi i32 [ %62, %.preheader ], [ 0, %.preheader.preheader ]
  %57 = phi i8* [ %.lcssa4, %.preheader ], [ %.lcssa5, %.preheader.preheader ]
  %58 = call i64 @CAT_get(i8* noundef %57) #4
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %57, i8* noundef %3, i8* noundef %4) #4
  %60 = call i64 @CAT_get(i8* noundef %57) #4
  %61 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %60)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4
  %62 = add nuw nsw i32 %56, 1
  %63 = icmp eq i32 %62, %47
  br i1 %63, label %.loopexit.loopexit, label %.preheader, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.loopexit

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit.loopexit:                               ; preds = %.preheader
  br label %.loopexit


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****
loop

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

29:                                               ; preds = %.loopexit2
  %.lcssa6.lcssa = phi i8* [ %.lcssa6, %.loopexit2 ]
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6
: 
____________________
loop

.preheader3:                                      ; preds = %.preheader3.preheader, %.loopexit2
  %32 = phi i32 [ %42, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %33 = phi i32 [ %41, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa.lcssa, %.preheader3.preheader ]
  %35 = call i32 @llvm.umax.i32(i32 %32, i32 1)
  %36 = call i64 @CAT_get(i8* noundef %34) #4
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #4
  %38 = call i64 @CAT_get(i8* noundef %34) #4
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %40 = icmp eq i32 %33, 0
  br i1 %40, label %.loopexit2, label %.preheader1.preheader
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

.loopexit2:                                       ; preds = %.loopexit2.loopexit, %.preheader3
  %41 = add nuw nsw i32 %33, 1
  %42 = add nuw nsw i32 %32, 3
  %43 = icmp eq i32 %41, %13
  br i1 %43, label %29, label %.preheader3, !llvm.loop !7
: 
____________________
loop

.preheader1:                                      ; preds = %.preheader1.preheader, %.loopexit
  %44 = phi i32 [ %54, %.loopexit ], [ 0, %.preheader1.preheader ]
  %45 = phi i32 [ %53, %.loopexit ], [ 0, %.preheader1.preheader ]
  %46 = phi i8* [ %.lcssa5, %.loopexit ], [ %.lcssa6, %.preheader1.preheader ]
  %47 = call i32 @llvm.umax.i32(i32 %44, i32 1)
  %48 = call i64 @CAT_get(i8* noundef %46) #4
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)
  call void @CAT_add(i8* noundef %46, i8* noundef %3, i8* noundef %4) #4
  %50 = call i64 @CAT_get(i8* noundef %46) #4
  %51 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %50)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %52 = icmp eq i32 %45, 0
  br i1 %52, label %.loopexit, label %.preheader.preheader
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

.loopexit:                                        ; preds = %.loopexit.loopexit, %.preheader1
  %53 = add nuw nsw i32 %45, 1
  %54 = add nuw nsw i32 %44, 2
  %55 = icmp eq i32 %53, %35
  br i1 %55, label %.loopexit2.loopexit, label %.preheader1, !llvm.loop !8
: 
____________________
loop

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %56 = phi i32 [ %62, %.preheader ], [ 0, %.preheader.preheader ]
  %57 = phi i8* [ %.lcssa4, %.preheader ], [ %.lcssa5, %.preheader.preheader ]
  %58 = call i64 @CAT_get(i8* noundef %57) #4
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %57, i8* noundef %3, i8* noundef %4) #4
  %60 = call i64 @CAT_get(i8* noundef %57) #4
  %61 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %60)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4
  %62 = add nuw nsw i32 %56, 1
  %63 = icmp eq i32 %62, %47
  br i1 %63, label %.loopexit.loopexit, label %.preheader, !llvm.loop !9
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

.loopexit.loopexit:                               ; preds = %.preheader
  br label %.loopexit
: 
____________________
loop

.preheader.preheader:                             ; preds = %.preheader1
  br label %.preheader
: 
____________________
loop

.preheader1.preheader:                            ; preds = %.preheader3
  br label %.preheader1
: 
____________________
loop

.loopexit2.loopexit:                              ; preds = %.loopexit
  br label %.loopexit2
: 
____________________
loop

.preheader3.preheader:                            ; preds = %20
  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]
  br label %.preheader3
: 
____________________


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #43->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #42->1

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]
phiNode
not falsefind

constantphifound  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %.preheader3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

BLOCK AFTER MODIFICATION

.preheader3.preheader:                            ; preds = %20
  br label %.preheader3


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ] 

Instruction
  %32 = phi i32 [ %42, %.loopexit2 ], [ 0, %.preheader3.preheader ]
phiNode
not falsefind

incomingValue:   %42 = add nuw nsw i32 %32, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %33 = phi i32 [ %41, %.loopexit2 ], [ 0, %.preheader3.preheader ]
phiNode
not falsefind

incomingValue:   %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %35 = call i32 @llvm.umax.i32(i32 %32, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %36 = call i64 @CAT_get(i8* noundef %34) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %38 = call i64 @CAT_get(i8* noundef %34) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %40 = icmp eq i32 %33, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %40, label %.loopexit2, label %.preheader1.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3:                                      ; preds = %.preheader3.preheader, %.loopexit2
  %32 = phi i32 [ %42, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %33 = phi i32 [ %41, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ]
  %35 = call i32 @llvm.umax.i32(i32 %32, i32 1)
  %36 = call i64 @CAT_get(i8* noundef %34) #4
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #4
  %38 = call i64 @CAT_get(i8* noundef %34) #4
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %40 = icmp eq i32 %33, 0
  br i1 %40, label %.loopexit2, label %.preheader1.preheader


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.preheader3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3.preheader:                            ; preds = %20
  br label %.preheader3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %42 = add nuw nsw i32 %32, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %43 = icmp eq i32 %41, %13

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %43, label %29, label %.preheader3, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit2:                                       ; preds = %.loopexit2.loopexit, %.preheader3
  %41 = add nuw nsw i32 %33, 1
  %42 = add nuw nsw i32 %32, 3
  %43 = icmp eq i32 %41, %13
  br i1 %43, label %29, label %.preheader3, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.preheader1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader1.preheader:                            ; preds = %.preheader3
  br label %.preheader1


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #43->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #42->1

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %.lcssa6.lcssa = phi i8* [ %.lcssa6, %.loopexit2 ]
phiNode
not falsefind

constantphifound  %.lcssa6.lcssa = phi i8* [ %.lcssa6, %.loopexit2 ]  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %31 = icmp eq i32 %30, 11

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4

BLOCK AFTER MODIFICATION

29:                                               ; preds = %.loopexit2
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ] 

Instruction
  %32 = phi i32 [ %42, %.loopexit2 ], [ 0, %.preheader3.preheader ]
phiNode
not falsefind

incomingValue:   %42 = add nuw nsw i32 %32, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %33 = phi i32 [ %41, %.loopexit2 ], [ 0, %.preheader3.preheader ]
phiNode
not falsefind

incomingValue:   %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %35 = call i32 @llvm.umax.i32(i32 %32, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %36 = call i64 @CAT_get(i8* noundef %34) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %38 = call i64 @CAT_get(i8* noundef %34) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %40 = icmp eq i32 %33, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %40, label %.loopexit2, label %.preheader1.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3:                                      ; preds = %.preheader3.preheader, %.loopexit2
  %32 = phi i32 [ %42, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %33 = phi i32 [ %41, %.loopexit2 ], [ 0, %.preheader3.preheader ]
  %34 = phi i8* [ %.lcssa6, %.loopexit2 ], [ %.lcssa, %.preheader3.preheader ]
  %35 = call i32 @llvm.umax.i32(i32 %32, i32 1)
  %36 = call i64 @CAT_get(i8* noundef %34) #4
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #4
  %38 = call i64 @CAT_get(i8* noundef %34) #4
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %40 = icmp eq i32 %33, 0
  br i1 %40, label %.loopexit2, label %.preheader1.preheader


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4   %46 = phi i8* [ %.lcssa5, %.loopexit ], [ %.lcssa6, %.preheader1.preheader ] 

Instruction
  %44 = phi i32 [ %54, %.loopexit ], [ 0, %.preheader1.preheader ]
phiNode
not falsefind

incomingValue:   %54 = add nuw nsw i32 %44, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %45 = phi i32 [ %53, %.loopexit ], [ 0, %.preheader1.preheader ]
phiNode
not falsefind

incomingValue:   %53 = add nuw nsw i32 %45, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %46 = phi i8* [ %.lcssa5, %.loopexit ], [ %.lcssa6, %.preheader1.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %47 = call i32 @llvm.umax.i32(i32 %44, i32 1)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %48 = call i64 @CAT_get(i8* noundef %46) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %46, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %50 = call i64 @CAT_get(i8* noundef %46) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %51 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %50)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %52 = icmp eq i32 %45, 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %52, label %.loopexit, label %.preheader.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader1:                                      ; preds = %.preheader1.preheader, %.loopexit
  %44 = phi i32 [ %54, %.loopexit ], [ 0, %.preheader1.preheader ]
  %45 = phi i32 [ %53, %.loopexit ], [ 0, %.preheader1.preheader ]
  %46 = phi i8* [ %.lcssa5, %.loopexit ], [ %.lcssa6, %.preheader1.preheader ]
  %47 = call i32 @llvm.umax.i32(i32 %44, i32 1)
  %48 = call i64 @CAT_get(i8* noundef %46) #4
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)
  call void @CAT_add(i8* noundef %46, i8* noundef %3, i8* noundef %4) #4
  %50 = call i64 @CAT_get(i8* noundef %46) #4
  %51 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %50)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %52 = icmp eq i32 %45, 0
  br i1 %52, label %.loopexit, label %.preheader.preheader


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader3.preheader, label %20, !llvm.loop !3


NEXTBLOCK


Instruction
  %7 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_set(i8* %7, i64 104)

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction
  call void @CAT_set(i8* %7, i64 104)
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_set(i8* %7, i64 0)

endofblockkilling:  call void @CAT_set(i8* %7, i64 104)
Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* %7, i64 0)
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4

endofblockkilling:  call void @CAT_set(i8* %7, i64 0)
Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %8 = call i64 @CAT_variables() #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %10 = call i64 @CAT_cost() #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  ret i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

6:                                                ; preds = %29
  %7 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %7, i64 104)
  call void @CAT_set(i8* %7, i64 0)
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #4
  %8 = call i64 @CAT_variables() #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #4
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #46->5REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #45->4

Instruction
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 1, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa6, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %14) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  br label %20


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %42 = add nuw nsw i32 %32, 3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %43 = icmp eq i32 %41, %13

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %43, label %29, label %.preheader3, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit2:                                       ; preds = %.loopexit2.loopexit, %.preheader3
  %41 = add nuw nsw i32 %33, 1
  %42 = add nuw nsw i32 %32, 3
  %43 = icmp eq i32 %41, %13
  br i1 %43, label %29, label %.preheader3, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.preheader1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader1.preheader:                            ; preds = %.preheader3
  br label %.preheader1


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %53 = add nuw nsw i32 %45, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %54 = add nuw nsw i32 %44, 2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %55 = icmp eq i32 %53, %35

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %55, label %.loopexit2.loopexit, label %.preheader1, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit:                                        ; preds = %.loopexit.loopexit, %.preheader1
  %53 = add nuw nsw i32 %45, 1
  %54 = add nuw nsw i32 %44, 2
  %55 = icmp eq i32 %53, %35
  br i1 %55, label %.loopexit2.loopexit, label %.preheader1, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader.preheader:                             ; preds = %.preheader1
  br label %.preheader


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.preheader3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader3.preheader:                            ; preds = %20
  br label %.preheader3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %31 = icmp eq i32 %30, 11

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

29:                                               ; preds = %.loopexit2
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.loopexit2

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit2.loopexit:                              ; preds = %.loopexit
  br label %.loopexit2


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %57 = phi i8* [ %.lcssa4, %.preheader ], [ %.lcssa5, %.preheader.preheader ]   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %56 = phi i32 [ %62, %.preheader ], [ 0, %.preheader.preheader ]
phiNode
not falsefind

incomingValue:   %62 = add nuw nsw i32 %56, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %57 = phi i8* [ %.lcssa4, %.preheader ], [ %.lcssa5, %.preheader.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %58 = call i64 @CAT_get(i8* noundef %57) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %57, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %60 = call i64 @CAT_get(i8* noundef %57) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %61 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %60)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %62 = add nuw nsw i32 %56, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %63 = icmp eq i32 %62, %47

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %63, label %.loopexit.loopexit, label %.preheader, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %56 = phi i32 [ %62, %.preheader ], [ 0, %.preheader.preheader ]
  %57 = phi i8* [ %.lcssa4, %.preheader ], [ %.lcssa5, %.preheader.preheader ]
  %58 = call i64 @CAT_get(i8* noundef %57) #4
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %57, i8* noundef %3, i8* noundef %4) #4
  %60 = call i64 @CAT_get(i8* noundef %57) #4
  %61 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %60)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4
  %62 = add nuw nsw i32 %56, 1
  %63 = icmp eq i32 %62, %47
  br i1 %63, label %.loopexit.loopexit, label %.preheader, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  br label %.loopexit

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa5 = call i8* @CAT_new(i64 noundef 1) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa6 = call i8* @CAT_new(i64 noundef 1) #4
  %.lcssa4 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

.loopexit.loopexit:                               ; preds = %.preheader
  br label %.loopexit


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
  Test failed because output  isn't correct
  Output differences can be found in "diff"
make[1]: *** [Makefile:43: check] Error 1
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test53'
