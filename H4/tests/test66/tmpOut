make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test66'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****
loop

12:                                               ; preds = %2, %21
  %13 = phi i8* [ %5, %2 ], [ %22, %21 ]
  %14 = phi i32 [ 0, %2 ], [ %28, %21 ]
  %15 = call i64 @CAT_get(i8* noundef %13) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %13, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %13) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  br i1 %6, label %19, label %21
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 ____________________
loop

19:                                               ; preds = %12
  %20 = call i8* @CAT_new(i64 noundef 1) #4
  br label %21
: 
____________________
loop

21:                                               ; preds = %19, %12
  %22 = phi i8* [ %20, %19 ], [ %13, %12 ]
  %23 = call i32 @rand() #5
  %24 = sext i32 %23 to i64
  call void @CAT_set(i8* noundef %13, i64 noundef %24) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i64 @CAT_get(i8* noundef %13) #4
  %27 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25, i64 noundef %26)
  %28 = add nuw nsw i32 %14, 1
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %7, label %12, !llvm.loop !3
: 
____________________


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %6 = icmp sgt i32 %0, 100

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #4
  %4 = call i8* @CAT_new(i64 noundef 2) #4
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %6 = icmp sgt i32 %0, 100
  br label %12


NEXTBLOCK

falseFinds
  %13 = phi i8* [ %5, %2 ], [ %22, %21 ]   %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #43->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #42->1

Instruction
  %13 = phi i8* [ %5, %2 ], [ %22, %21 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %14 = phi i32 [ 0, %2 ], [ %28, %21 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %13) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %13, i8* noundef %3, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %17 = call i64 @CAT_get(i8* noundef %13) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  br i1 %6, label %19, label %21

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %21
  %13 = phi i8* [ %5, %2 ], [ %22, %21 ]
  %14 = phi i32 [ 0, %2 ], [ %28, %21 ]
  %15 = call i64 @CAT_get(i8* noundef %13) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %13, i8* noundef %3, i8* noundef %4) #4
  %17 = call i64 @CAT_get(i8* noundef %13) #4
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #4
  br i1 %6, label %19, label %21


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %20 = call i8* @CAT_new(i64 noundef 1) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br label %21

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

19:                                               ; preds = %12
  %20 = call i8* @CAT_new(i64 noundef 1) #4
  br label %21


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #4   %4 = call i8* @CAT_new(i64 noundef 2) #4 

Instruction
  %22 = phi i8* [ %20, %19 ], [ %13, %12 ]
phiNode
not falsefind

incomingValue:   %20 = call i8* @CAT_new(i64 noundef 1) #4
incomingConstant: i64 1
incomingValue:   %13 = phi i8* [ %5, %2 ], [ %22, %21 ]

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %23 = call i32 @rand() #5

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %24 = sext i32 %23 to i64

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  call void @CAT_set(i8* noundef %13, i64 noundef %24) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %26 = call i64 @CAT_get(i8* noundef %13) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %27 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25, i64 noundef %26)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %28 = add nuw nsw i32 %14, 1

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %29 = icmp eq i32 %28, 10

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  br i1 %29, label %7, label %12, !llvm.loop !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

21:                                               ; preds = %19, %12
  %22 = phi i8* [ %20, %19 ], [ %13, %12 ]
  %23 = call i32 @rand() #5
  %24 = sext i32 %23 to i64
  call void @CAT_set(i8* noundef %13, i64 noundef %24) #4
  %25 = call i64 @CAT_get(i8* noundef %22) #4
  %26 = call i64 @CAT_get(i8* noundef %13) #4
  %27 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25, i64 noundef %26)
  %28 = add nuw nsw i32 %14, 1
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %7, label %12, !llvm.loop !3


NEXTBLOCK


Instruction
  %8 = call i64 @CAT_variables() #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %10 = call i64 @CAT_cost() #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


Instruction
  ret i32 0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #4
  %20 = call i8* @CAT_new(i64 noundef 1) #4


BLOCK AFTER MODIFICATION

7:                                                ; preds = %21
  %8 = call i64 @CAT_variables() #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #4
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test66'
