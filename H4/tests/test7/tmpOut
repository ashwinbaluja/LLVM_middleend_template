make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test7'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****
loop

17:                                               ; preds = %1, %27
  %18 = phi i32 [ 0, %1 ], [ %30, %27 ]
  %19 = call i8* @CAT_new(i64 noundef 8) #4
  br i1 %6, label %20, label %21
: 
____________________
loop

20:                                               ; preds = %17
  call void @CAT_add(i8* noundef %19, i8* noundef %19, i8* noundef %19) #4
  br label %21
: 
  %19 = call i8* @CAT_new(i64 noundef 8) #4 ____________________
loop

21:                                               ; preds = %20, %17
  %22 = call i64 @CAT_get(i8* noundef %19) #4
  %23 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %22)
  %24 = call i8* @CAT_new(i64 noundef 0) #4
  %25 = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %19) #4
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %24) #4
  call void @CAT_add(i8* noundef %24, i8* noundef %24, i8* noundef %24) #4
  br i1 %7, label %26, label %27
: 
  %24 = call i8* @CAT_new(i64 noundef 0) #4 ____________________
loop

26:                                               ; preds = %21
  call void @CAT_add(i8* noundef %24, i8* noundef %2, i8* noundef %2) #4
  br label %27
: 
____________________
loop

27:                                               ; preds = %26, %21
  %28 = call i64 @CAT_get(i8* noundef %24) #4
  %29 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %28)
  %30 = add nuw i32 %18, 1
  %31 = icmp eq i32 %30, %0
  br i1 %31, label %8, label %17, !llvm.loop !3
: 
____________________


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i64 @CAT_get(i8* noundef %2) #4

optimize Cat_get

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef %3)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %5 = icmp sgt i32 %0, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @llvm.assume(i1 %5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %6 = icmp ugt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %7 = icmp ugt i32 %0, 20

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %17

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
i64 5

BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = icmp sgt i32 %0, 0
  call void @llvm.assume(i1 %4)
  %5 = icmp ugt i32 %0, 10
  %6 = icmp ugt i32 %0, 20
  br label %16


NEXTBLOCK

falseFinds
  %18 = call i8* @CAT_new(i64 noundef 8) #4   %23 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  %17 = phi i32 [ 0, %1 ], [ %29, %26 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %18 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %18 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  br i1 %5, label %19, label %20

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %18 = call i8* @CAT_new(i64 noundef 8) #4


BLOCK AFTER MODIFICATION

16:                                               ; preds = %1, %26
  %17 = phi i32 [ 0, %1 ], [ %29, %26 ]
  %18 = call i8* @CAT_new(i64 noundef 8) #4
  br i1 %5, label %19, label %20


NEXTBLOCK


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %4 = icmp sgt i32 %0, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @llvm.assume(i1 %4)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %5 = icmp ugt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %6 = icmp ugt i32 %0, 20

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %16

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = icmp sgt i32 %0, 0
  call void @llvm.assume(i1 %4)
  %5 = icmp ugt i32 %0, 10
  %6 = icmp ugt i32 %0, 20
  br label %16


NEXTBLOCK

falseFinds
  %18 = call i8* @CAT_new(i64 noundef 8) #4   %23 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  %18 = call i8* @CAT_new(i64 noundef 8) #42->1

Instruction
  call void @CAT_add(i8* noundef %18, i8* noundef %18, i8* noundef %18) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %20

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

19:                                               ; preds = %16
  call void @CAT_add(i8* noundef %18, i8* noundef %18, i8* noundef %18) #4
  br label %20


NEXTBLOCK

falseFinds
  %18 = call i8* @CAT_new(i64 noundef 8) #4   %23 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  %18 = call i8* @CAT_new(i64 noundef 8) #42->1

Instruction
  %21 = call i64 @CAT_get(i8* noundef %18) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %21)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %23 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %23 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %24 = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %23 = call i8* @CAT_new(i64 noundef 0) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %23, i8* noundef %2, i8* noundef %18) #4

endofblockkilling:  %23 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %23, i8* noundef %2, i8* noundef %23) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %23, i8* noundef %23, i8* noundef %23) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %6, label %25, label %26

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4
1^^^^1^^^^

BLOCK AFTER MODIFICATION

20:                                               ; preds = %19, %16
  %21 = call i64 @CAT_get(i8* noundef %18) #4
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %21)
  %23 = call i8* @CAT_new(i64 noundef 0) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_add(i8* noundef %23, i8* noundef %2, i8* noundef %18) #4
  call void @CAT_add(i8* noundef %23, i8* noundef %2, i8* noundef %23) #4
  call void @CAT_add(i8* noundef %23, i8* noundef %23, i8* noundef %23) #4
  br i1 %6, label %25, label %26


NEXTBLOCK

falseFinds
  %18 = call i8* @CAT_new(i64 noundef 8) #4   %23 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  call void @CAT_add(i8* noundef %23, i8* noundef %2, i8* noundef %2) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br label %26

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

25:                                               ; preds = %20
  call void @CAT_set(i8* %23, i64 10)
  br label %26


NEXTBLOCK

falseFinds
  %18 = call i8* @CAT_new(i64 noundef 8) #4   %23 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  %27 = call i64 @CAT_get(i8* noundef %23) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %28 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %27)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %29 = add nuw i32 %17, 1

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %30 = icmp eq i32 %29, %0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %30, label %7, label %16, !llvm.loop !3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

26:                                               ; preds = %25, %20
  %27 = call i64 @CAT_get(i8* noundef %23) #4
  %28 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %27)
  %29 = add nuw i32 %17, 1
  %30 = icmp eq i32 %29, %0
  br i1 %30, label %7, label %16, !llvm.loop !3


NEXTBLOCK


Instruction
  %.lcssa1 = phi i8* [ %23, %26 ]
phiNode
not falsefind

constantphifound  %.lcssa1 = phi i8* [ %23, %26 ]  %23 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %.lcssa = phi i8* [ %24, %26 ]
phiNode
not falsefind

constantphifound  %.lcssa = phi i8* [ %24, %26 ]  %24 = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %8 = call i64 @CAT_get(i8* noundef %.lcssa) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %10 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %12 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %12)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %14 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

optimize Cat_get

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %14)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %24 = call i8* @CAT_new(i64 noundef 42) #4
i64 42  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4

BLOCK AFTER MODIFICATION

7:                                                ; preds = %23
  %8 = call i64 @CAT_get(i8* noundef %.lcssa) #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %10)
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4
  %12 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %12)
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK

falseFinds
  %17 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  %16 = phi i32 [ 0, %1 ], [ %26, %23 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %17 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %17 = call i8* @CAT_new(i64 noundef 8) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %5, label %18, label %19

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %17 = call i8* @CAT_new(i64 noundef 8) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

15:                                               ; preds = %1, %23
  %16 = phi i32 [ 0, %1 ], [ %26, %23 ]
  %17 = call i8* @CAT_new(i64 noundef 8) #4
  br i1 %5, label %18, label %19


NEXTBLOCK


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %4 = icmp sgt i32 %0, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @llvm.assume(i1 %4)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %5 = icmp ugt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %6 = icmp ugt i32 %0, 20

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %15

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = icmp sgt i32 %0, 0
  call void @llvm.assume(i1 %4)
  %5 = icmp ugt i32 %0, 10
  %6 = icmp ugt i32 %0, 20
  br label %15


NEXTBLOCK

falseFinds
  %17 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  %17 = call i8* @CAT_new(i64 noundef 8) #42->1

Instruction
  call void @CAT_add(i8* noundef %17, i8* noundef %17, i8* noundef %17) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %19

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

18:                                               ; preds = %15
  call void @CAT_add(i8* noundef %17, i8* noundef %17, i8* noundef %17) #4
  br label %19


NEXTBLOCK

falseFinds
  %17 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  %17 = call i8* @CAT_new(i64 noundef 8) #42->1

Instruction
  %20 = call i64 @CAT_get(i8* noundef %17) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %20)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %17) #4

endofblockkilling:  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %6, label %22, label %23

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
1^^^^1^^^^

BLOCK AFTER MODIFICATION

19:                                               ; preds = %18, %15
  %20 = call i64 @CAT_get(i8* noundef %17) #4
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %20)
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %17) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %.lcssa1) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4
  br i1 %6, label %22, label %23


NEXTBLOCK

falseFinds
  %17 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  call void @CAT_set(i8* %.lcssa1, i64 10)

endofblockkilling:  call void @CAT_set(i8* %.lcssa1, i64 10)
endofblockkilling:  %2 = call i8* @CAT_new(i64 noundef 5) #4
endofblockkilling:  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
Constant after instruction


Instruction
  br label %23

Constant after instruction


BLOCK AFTER MODIFICATION

22:                                               ; preds = %19
  call void @CAT_set(i8* %.lcssa1, i64 10)
  br label %23


NEXTBLOCK

falseFinds
  %17 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  %24 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %24)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %26 = add nuw i32 %16, 1

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %27 = icmp eq i32 %26, %0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %27, label %7, label %15, !llvm.loop !3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

23:                                               ; preds = %22, %19
  %24 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %24)
  %26 = add nuw i32 %16, 1
  %27 = icmp eq i32 %26, %0
  br i1 %27, label %7, label %15, !llvm.loop !3


NEXTBLOCK


Instruction
  %8 = call i64 @CAT_get(i8* noundef %.lcssa) #4

optimize Cat_get

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %10 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %12 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %12)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
i64 42

BLOCK AFTER MODIFICATION

7:                                                ; preds = %22
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef 42)
  %9 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %9)
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4
  %11 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  %15 = phi i32 [ 0, %1 ], [ %25, %22 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %16 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %16 = call i8* @CAT_new(i64 noundef 8) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %5, label %17, label %18

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %16 = call i8* @CAT_new(i64 noundef 8) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

14:                                               ; preds = %1, %22
  %15 = phi i32 [ 0, %1 ], [ %25, %22 ]
  %16 = call i8* @CAT_new(i64 noundef 8) #4
  br i1 %5, label %17, label %18


NEXTBLOCK


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %4 = icmp sgt i32 %0, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @llvm.assume(i1 %4)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %5 = icmp ugt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %6 = icmp ugt i32 %0, 20

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %14

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = icmp sgt i32 %0, 0
  call void @llvm.assume(i1 %4)
  %5 = icmp ugt i32 %0, 10
  %6 = icmp ugt i32 %0, 20
  br label %14


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  %16 = call i8* @CAT_new(i64 noundef 8) #42->1

Instruction
  call void @CAT_add(i8* noundef %16, i8* noundef %16, i8* noundef %16) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %18

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

17:                                               ; preds = %14
  call void @CAT_add(i8* noundef %16, i8* noundef %16, i8* noundef %16) #4
  br label %18


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  %16 = call i8* @CAT_new(i64 noundef 8) #42->1

Instruction
  %19 = call i64 @CAT_get(i8* noundef %16) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %20 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %19)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %16) #4

endofblockkilling:  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %6, label %21, label %22

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
1^^^^1^^^^

BLOCK AFTER MODIFICATION

18:                                               ; preds = %17, %14
  %19 = call i64 @CAT_get(i8* noundef %16) #4
  %20 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %19)
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %16) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %.lcssa1) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4
  br i1 %6, label %21, label %22


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  call void @CAT_set(i8* %.lcssa1, i64 10)

endofblockkilling:  call void @CAT_set(i8* %.lcssa1, i64 10)
endofblockkilling:  %2 = call i8* @CAT_new(i64 noundef 5) #4
endofblockkilling:  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
Constant after instruction


Instruction
  br label %22

Constant after instruction


BLOCK AFTER MODIFICATION

21:                                               ; preds = %18
  call void @CAT_set(i8* %.lcssa1, i64 10)
  br label %22


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  %23 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %25 = add nuw i32 %15, 1

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %26 = icmp eq i32 %25, %0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %26, label %7, label %14, !llvm.loop !3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

22:                                               ; preds = %21, %18
  %23 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %23)
  %25 = add nuw i32 %15, 1
  %26 = icmp eq i32 %25, %0
  br i1 %26, label %7, label %14, !llvm.loop !3


NEXTBLOCK


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %9 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %9)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %11 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

7:                                                ; preds = %22
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef 42)
  %9 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %9)
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4
  %11 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @CAT_execution(i32 noundef %0)

Constant after instruction


Instruction
  %3 = call i64 @CAT_variables() #4

Constant after instruction


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %3)

Constant after instruction


Instruction
  %5 = call i64 @CAT_cost() #4

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  call void @CAT_execution(i32 noundef %0)
  %3 = call i64 @CAT_variables() #4
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %3)
  %5 = call i64 @CAT_cost() #4
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****
loop

14:                                               ; preds = %1, %22
  %15 = phi i32 [ 0, %1 ], [ %25, %22 ]
  %16 = call i8* @CAT_new(i64 noundef 8) #4
  br i1 %5, label %17, label %18
: 
____________________
loop

17:                                               ; preds = %14
  call void @CAT_add(i8* noundef %16, i8* noundef %16, i8* noundef %16) #4
  br label %18
: 
  %16 = call i8* @CAT_new(i64 noundef 8) #4 ____________________
loop

18:                                               ; preds = %17, %14
  %19 = call i64 @CAT_get(i8* noundef %16) #4
  %20 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %19)
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %16) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %.lcssa1) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4
  br i1 %6, label %21, label %22
: 
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 ____________________
loop

21:                                               ; preds = %18
  call void @CAT_set(i8* %.lcssa1, i64 10)
  br label %22
: 
____________________
loop

22:                                               ; preds = %21, %18
  %23 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %23)
  %25 = add nuw nsw i32 %15, 1
  %26 = icmp eq i32 %25, %0
  br i1 %26, label %7, label %14, !llvm.loop !3
: 
____________________


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %4 = icmp sgt i32 %0, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @llvm.assume(i1 %4)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %5 = icmp ugt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %6 = icmp ugt i32 %0, 20

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %14

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = icmp sgt i32 %0, 0
  call void @llvm.assume(i1 %4)
  %5 = icmp ugt i32 %0, 10
  %6 = icmp ugt i32 %0, 20
  br label %14


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  %15 = phi i32 [ 0, %1 ], [ %25, %22 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %16 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %16 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  br i1 %5, label %17, label %18

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %16 = call i8* @CAT_new(i64 noundef 8) #4


BLOCK AFTER MODIFICATION

14:                                               ; preds = %1, %22
  %15 = phi i32 [ 0, %1 ], [ %25, %22 ]
  %16 = call i8* @CAT_new(i64 noundef 8) #4
  br i1 %5, label %17, label %18


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  %16 = call i8* @CAT_new(i64 noundef 8) #42->1

Instruction
  call void @CAT_add(i8* noundef %16, i8* noundef %16, i8* noundef %16) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %18

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

17:                                               ; preds = %14
  call void @CAT_add(i8* noundef %16, i8* noundef %16, i8* noundef %16) #4
  br label %18


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  %16 = call i8* @CAT_new(i64 noundef 8) #42->1

Instruction
  %19 = call i64 @CAT_get(i8* noundef %16) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %20 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %19)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %16) #4

endofblockkilling:  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %6, label %21, label %22

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
1^^^^1^^^^

BLOCK AFTER MODIFICATION

18:                                               ; preds = %17, %14
  %19 = call i64 @CAT_get(i8* noundef %16) #4
  %20 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %19)
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %16) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %.lcssa1) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4
  br i1 %6, label %21, label %22


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  call void @CAT_set(i8* %.lcssa1, i64 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_set(i8* %.lcssa1, i64 10)


Instruction
  br label %22

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_set(i8* %.lcssa1, i64 10)


BLOCK AFTER MODIFICATION

21:                                               ; preds = %18
  call void @CAT_set(i8* %.lcssa1, i64 10)
  br label %22


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  call void @CAT_set(i8* %.lcssa1, i64 10)3->2

Instruction
  %23 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %25 = add nuw nsw i32 %15, 1

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %26 = icmp eq i32 %25, %0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %26, label %7, label %14, !llvm.loop !3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

22:                                               ; preds = %21, %18
  %23 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %23)
  %25 = add nuw nsw i32 %15, 1
  %26 = icmp eq i32 %25, %0
  br i1 %26, label %7, label %14, !llvm.loop !3


NEXTBLOCK


Instruction
  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %22 ]
phiNode
not falsefind

constantphifound  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %22 ]  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %9 = call i64 @CAT_get(i8* noundef %.lcssa1.lcssa) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %9)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_sub(i8* noundef %.lcssa1.lcssa, i8* noundef %.lcssa1.lcssa, i8* noundef %.lcssa1.lcssa) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %11 = call i64 @CAT_get(i8* noundef %.lcssa1.lcssa) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_set(i8* noundef %.lcssa1.lcssa, i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1.lcssa, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1.lcssa, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1.lcssa, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4

BLOCK AFTER MODIFICATION

7:                                                ; preds = %22
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef 42)
  %9 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %9)
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4
  %11 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  %15 = phi i32 [ 0, %1 ], [ %25, %22 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %16 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %16 = call i8* @CAT_new(i64 noundef 8) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %5, label %17, label %18

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %16 = call i8* @CAT_new(i64 noundef 8) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

14:                                               ; preds = %1, %22
  %15 = phi i32 [ 0, %1 ], [ %25, %22 ]
  %16 = call i8* @CAT_new(i64 noundef 8) #4
  br i1 %5, label %17, label %18


NEXTBLOCK


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %4 = icmp sgt i32 %0, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @llvm.assume(i1 %4)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %5 = icmp ugt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %6 = icmp ugt i32 %0, 20

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %14

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = icmp sgt i32 %0, 0
  call void @llvm.assume(i1 %4)
  %5 = icmp ugt i32 %0, 10
  %6 = icmp ugt i32 %0, 20
  br label %14


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  %16 = call i8* @CAT_new(i64 noundef 8) #42->1

Instruction
  call void @CAT_add(i8* noundef %16, i8* noundef %16, i8* noundef %16) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %18

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

17:                                               ; preds = %14
  call void @CAT_add(i8* noundef %16, i8* noundef %16, i8* noundef %16) #4
  br label %18


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  %16 = call i8* @CAT_new(i64 noundef 8) #42->1

Instruction
  %19 = call i64 @CAT_get(i8* noundef %16) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %20 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %19)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %16) #4

endofblockkilling:  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %6, label %21, label %22

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
1^^^^1^^^^

BLOCK AFTER MODIFICATION

18:                                               ; preds = %17, %14
  %19 = call i64 @CAT_get(i8* noundef %16) #4
  %20 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %19)
  %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %16) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %2, i8* noundef %.lcssa1) #4
  call void @CAT_add(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4
  br i1 %6, label %21, label %22


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 

Instruction
  call void @CAT_set(i8* %.lcssa1, i64 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_set(i8* %.lcssa1, i64 10)


Instruction
  br label %22

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4
  call void @CAT_set(i8* %.lcssa1, i64 10)


BLOCK AFTER MODIFICATION

21:                                               ; preds = %18
  call void @CAT_set(i8* %.lcssa1, i64 10)
  br label %22


NEXTBLOCK

falseFinds
  %16 = call i8* @CAT_new(i64 noundef 8) #4   %.lcssa1 = call i8* @CAT_new(i64 noundef 0) #4 REMOVED

  call void @CAT_set(i8* %.lcssa1, i64 10)3->2

Instruction
  %23 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %25 = add nuw nsw i32 %15, 1

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %26 = icmp eq i32 %25, %0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %26, label %7, label %14, !llvm.loop !3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

22:                                               ; preds = %21, %18
  %23 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %23)
  %25 = add nuw nsw i32 %15, 1
  %26 = icmp eq i32 %25, %0
  br i1 %26, label %7, label %14, !llvm.loop !3


NEXTBLOCK


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %9 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %9)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %11 = call i64 @CAT_get(i8* noundef %.lcssa1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %.lcssa = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

7:                                                ; preds = %22
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 noundef 42)
  %9 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %9)
  call void @CAT_sub(i8* noundef %.lcssa1, i8* noundef %.lcssa1, i8* noundef %.lcssa1) #4
  %11 = call i64 @CAT_get(i8* noundef %.lcssa1) #4
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)
  call void @CAT_set(i8* noundef %.lcssa1, i64 noundef 42) #4
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @CAT_execution(i32 noundef %0)

Constant after instruction


Instruction
  %3 = call i64 @CAT_variables() #4

Constant after instruction


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %3)

Constant after instruction


Instruction
  %5 = call i64 @CAT_cost() #4

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  call void @CAT_execution(i32 noundef %0)
  %3 = call i64 @CAT_variables() #4
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %3)
  %5 = call i64 @CAT_cost() #4
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test7'
