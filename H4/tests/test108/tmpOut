make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test108'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %3 = alloca i8*, align 8

Constant after instruction


Instruction
  %4 = alloca i8*, align 8

Constant after instruction


Instruction
  %5 = bitcast i8** %3 to i8*

Constant after instruction


Instruction
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)

endofblockkilling:  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
Constant after instruction


Instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  store i8* %6, i8** %3, align 8, !tbaa !3

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %7 = bitcast i8** %4 to i8*

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)

endofblockkilling:  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %8 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  store i8* %8, i8** %4, align 8, !tbaa !3

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %9 = icmp sgt i32 %0, 5

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %10 = select i1 %9, i8** %3, i8** %4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %11 = call i8* @CAT_new(i64 noundef 10) #4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  store i8* %11, i8** %10, align 8, !tbaa !3

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %12 = load i8*, i8** %3, align 8, !tbaa !3

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %13 = call i64 @CAT_get(i8* noundef %12) #4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %14 = load i8*, i8** %4, align 8, !tbaa !3

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef %13, i64 noundef %15)

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %17 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  %17 = call i8* @CAT_new(i64 noundef 52) #4


Instruction
  call void @CAT_add(i8* noundef %17, i8* noundef %17, i8* noundef %17) #4

endofblockkilling:  %17 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  call void @CAT_sub(i8* noundef %17, i8* noundef %17, i8* noundef %17) #4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4


Instruction
  %18 = call i64 @CAT_variables() #4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4


Instruction
  %19 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %18)

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4


Instruction
  %20 = call i64 @CAT_cost() #4

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4


Instruction
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %20)

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4


Instruction
  %22 = bitcast i8** %4 to i8*

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4


Instruction
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)

endofblockkilling:  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4


Instruction
  %23 = bitcast i8** %3 to i8*

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4


Instruction
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)

endofblockkilling:  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = call i8* @CAT_new(i64 noundef 5) #4
  store i8* %6, i8** %3, align 8, !tbaa !3
  %7 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = call i8* @CAT_new(i64 noundef 8) #4
  store i8* %8, i8** %4, align 8, !tbaa !3
  %9 = icmp sgt i32 %0, 5
  %10 = select i1 %9, i8** %3, i8** %4
  %11 = call i8* @CAT_new(i64 noundef 10) #4
  store i8* %11, i8** %10, align 8, !tbaa !3
  %12 = load i8*, i8** %3, align 8, !tbaa !3
  %13 = call i64 @CAT_get(i8* noundef %12) #4
  %14 = load i8*, i8** %4, align 8, !tbaa !3
  %15 = call i64 @CAT_get(i8* noundef %14) #4
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef %13, i64 noundef %15)
  %17 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %17, i64 104)
  call void @CAT_sub(i8* noundef %17, i8* noundef %17, i8* noundef %17) #4
  call void @CAT_set(i8* noundef %17, i64 noundef 42) #4
  %18 = call i64 @CAT_variables() #4
  %19 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %18)
  %20 = call i64 @CAT_cost() #4
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %20)
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  %23 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %3 = alloca i8*, align 8

Constant after instruction


Instruction
  %4 = alloca i8*, align 8

Constant after instruction


Instruction
  %.0.sroa_cast10 = bitcast i8** %3 to i8*

Constant after instruction


Instruction
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast10)

endofblockkilling:  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast10)
Constant after instruction


Instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  store i8* %5, i8** %3, align 8, !tbaa !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %.0.sroa_cast8 = bitcast i8** %4 to i8*

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast8)

endofblockkilling:  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast8)
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %6 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  store i8* %6, i8** %4, align 8, !tbaa !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %7 = icmp sgt i32 %0, 5

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %8 = select i1 %7, i8** %3, i8** %4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %9 = call i8* @CAT_new(i64 noundef 10) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  store i8* %9, i8** %8, align 8, !tbaa !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %.0..0..0.2 = load i8*, i8** %3, align 8, !tbaa !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %10 = call i64 @CAT_get(i8* noundef %.0..0..0.2) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %.0..0..0. = load i8*, i8** %4, align 8, !tbaa !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %11 = call i64 @CAT_get(i8* noundef %.0..0..0.) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef %10, i64 noundef %11)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %13 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  %13 = call i8* @CAT_new(i64 noundef 52) #4


Instruction
  call void @CAT_set(i8* %13, i64 104)

endofblockkilling:  %13 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* %13, i64 104)


Instruction
  call void @CAT_sub(i8* noundef %13, i8* noundef %13, i8* noundef %13) #4

endofblockkilling:  call void @CAT_set(i8* %13, i64 104)
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %14 = call i64 @CAT_variables() #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %16 = call i64 @CAT_cost() #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %17 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %16)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %.0.sroa_cast9 = bitcast i8** %4 to i8*

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast9)

endofblockkilling:  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast9)
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %.0.sroa_cast11 = bitcast i8** %3 to i8*

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast11)

endofblockkilling:  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast11)
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %.0.sroa_cast10 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast10)
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  store i8* %5, i8** %3, align 8, !tbaa !3
  %.0.sroa_cast8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast8)
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  store i8* %6, i8** %4, align 8, !tbaa !3
  %7 = icmp sgt i32 %0, 5
  %8 = select i1 %7, i8** %3, i8** %4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  store i8* %9, i8** %8, align 8, !tbaa !3
  %.0..0..0.2 = load i8*, i8** %3, align 8, !tbaa !3
  %10 = call i64 @CAT_get(i8* noundef %.0..0..0.2) #4
  %.0..0..0. = load i8*, i8** %4, align 8, !tbaa !3
  %11 = call i64 @CAT_get(i8* noundef %.0..0..0.) #4
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef %10, i64 noundef %11)
  %13 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %13, i64 104)
  call void @CAT_set(i8* %13, i64 0)
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4
  %14 = call i64 @CAT_variables() #4
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)
  %16 = call i64 @CAT_cost() #4
  %17 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %16)
  %.0.sroa_cast9 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast9)
  %.0.sroa_cast11 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast11)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %3 = alloca i8*, align 8

Constant after instruction


Instruction
  %4 = alloca i8*, align 8

Constant after instruction


Instruction
  %.0.sroa_cast9 = bitcast i8** %3 to i8*

Constant after instruction


Instruction
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast9)

endofblockkilling:  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast9)
Constant after instruction


Instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  store i8* %5, i8** %3, align 8, !tbaa !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %.0.sroa_cast7 = bitcast i8** %4 to i8*

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast7)

endofblockkilling:  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast7)
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %6 = call i8* @CAT_new(i64 noundef 8) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  store i8* %6, i8** %4, align 8, !tbaa !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %7 = icmp sgt i32 %0, 5

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %8 = select i1 %7, i8** %3, i8** %4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4


Instruction
  %9 = call i8* @CAT_new(i64 noundef 10) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  store i8* %9, i8** %8, align 8, !tbaa !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %.0..0..0..0..0..0.2 = load i8*, i8** %3, align 8, !tbaa !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %10 = call i64 @CAT_get(i8* noundef %.0..0..0..0..0..0.2) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %.0..0..0..0..0..0. = load i8*, i8** %4, align 8, !tbaa !3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %11 = call i64 @CAT_get(i8* noundef %.0..0..0..0..0..0.) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef %10, i64 noundef %11)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4


Instruction
  %13 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  %13 = call i8* @CAT_new(i64 noundef 52) #4


Instruction
  call void @CAT_set(i8* %13, i64 104)

endofblockkilling:  %13 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* %13, i64 104)


Instruction
  call void @CAT_set(i8* %13, i64 0)

endofblockkilling:  call void @CAT_set(i8* %13, i64 104)
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* %13, i64 0)


Instruction
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4

endofblockkilling:  call void @CAT_set(i8* %13, i64 0)
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %14 = call i64 @CAT_variables() #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %16 = call i64 @CAT_cost() #4

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %17 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %16)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %.0.sroa_cast8 = bitcast i8** %4 to i8*

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast8)

endofblockkilling:  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast8)
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  %.0.sroa_cast10 = bitcast i8** %3 to i8*

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast10)

endofblockkilling:  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast10)
Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %.0.sroa_cast9 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast9)
  %5 = call i8* @CAT_new(i64 noundef 5) #4
  store i8* %5, i8** %3, align 8, !tbaa !3
  %.0.sroa_cast7 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %.0.sroa_cast7)
  %6 = call i8* @CAT_new(i64 noundef 8) #4
  store i8* %6, i8** %4, align 8, !tbaa !3
  %7 = icmp sgt i32 %0, 5
  %8 = select i1 %7, i8** %3, i8** %4
  %9 = call i8* @CAT_new(i64 noundef 10) #4
  store i8* %9, i8** %8, align 8, !tbaa !3
  %.0..0..0..0..0..0.2 = load i8*, i8** %3, align 8, !tbaa !3
  %10 = call i64 @CAT_get(i8* noundef %.0..0..0..0..0..0.2) #4
  %.0..0..0..0..0..0. = load i8*, i8** %4, align 8, !tbaa !3
  %11 = call i64 @CAT_get(i8* noundef %.0..0..0..0..0..0.) #4
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef %10, i64 noundef %11)
  %13 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %13, i64 104)
  call void @CAT_set(i8* %13, i64 0)
  call void @CAT_set(i8* noundef %13, i64 noundef 42) #4
  %14 = call i64 @CAT_variables() #4
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)
  %16 = call i64 @CAT_cost() #4
  %17 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %16)
  %.0.sroa_cast8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast8)
  %.0.sroa_cast10 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %.0.sroa_cast10)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test108'
