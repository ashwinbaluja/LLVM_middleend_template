make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test0'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %2 = call i64 @CAT_get(i8* noundef %1) #5

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 noundef %2)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %4 = call i8* @CAT_new(i64 noundef 8) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %5 = call i64 @CAT_get(i8* noundef %4) #5

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 noundef %5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %7 = call i8* @CAT_new(i64 noundef 0) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5
  %7 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  call void @CAT_add(i8* noundef %7, i8* noundef %1, i8* noundef %4) #5

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %8 = call i64 @CAT_get(i8* noundef %7) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %1, i8* noundef %4) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %10 = call i64 @CAT_get(i8* noundef %7) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #5


Instruction
  %12 = call i64 @CAT_get(i8* noundef %7) #5

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #5


Instruction
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %12)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #5


Instruction
  %14 = call i32 (...) @rand() #6

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #5


Instruction
  %15 = icmp sgt i32 %14, 0

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #5


Instruction
  br i1 %15, label %16, label %17

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %4 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #5
i64 5i64 8i64 42

BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #5
  call void @CAT_set(i8* %5, i64 13)
  %6 = call i64 @CAT_get(i8* noundef %5) #5
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %6)
  call void @CAT_set(i8* %5, i64 -3)
  %8 = call i64 @CAT_get(i8* noundef %5) #5
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  %11 = call i32 (...) @rand() #6
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %14


NEXTBLOCK


Instruction
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %1) #5

endofblockkilling:  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %3) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 8) #5
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5


Instruction
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #5
Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5


Instruction
  br label %14

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5
2^^^^

BLOCK AFTER MODIFICATION

13:                                               ; preds = %0
  call void @CAT_set(i8* %5, i64 47)
  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %3) #5
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5
  br label %14


NEXTBLOCK

 found bad:   %1 = call i8* @CAT_new(i64 noundef 5) #5i64 39

 found bad:   %3 = call i8* @CAT_new(i64 noundef 8) #5i64 41
REMOVED

  call void @CAT_set(i8* noundef %5, i64 noundef 42) #53->2REMOVED

  call void @CAT_set(i8* noundef %3, i64 noundef 41) #52->1REMOVED

  call void @CAT_set(i8* noundef %1, i64 noundef 39) #51->0

Instruction
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %3) #5

Constant after instruction


Instruction
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %1) #5

Constant after instruction


Instruction
  %15 = call i64 @CAT_get(i8* noundef %5) #5

Constant after instruction


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %15)

Constant after instruction


Instruction
  call void @CAT_destroy(i8* noundef %1) #5
erased an instruction cause it was called in a function  %1 = call i8* @CAT_new(i64 noundef 5) #5

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #5
Constant after instruction


Instruction
  call void @CAT_destroy(i8* noundef %3) #5
erased an instruction cause it was called in a function  %3 = call i8* @CAT_new(i64 noundef 8) #5

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 8) #5
Constant after instruction


Instruction
  call void @CAT_destroy(i8* noundef %5) #5
erased an instruction cause it was called in a function  %5 = call i8* @CAT_new(i64 noundef 0) #5

endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction


Instruction
  ret void

Constant after instruction


BLOCK AFTER MODIFICATION

14:                                               ; preds = %13, %0
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %3) #5
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %1) #5
  %15 = call i64 @CAT_get(i8* noundef %5) #5
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %15)
  call void @CAT_destroy(i8* noundef %1) #5
  call void @CAT_destroy(i8* noundef %3) #5
  call void @CAT_destroy(i8* noundef %5) #5
  ret void


NEXTBLOCK


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  %5 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  call void @CAT_set(i8* %5, i64 13)

endofblockkilling:  call void @CAT_set(i8* %5, i64 13)
endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #5
endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 8) #5
endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction


Instruction
  %6 = call i64 @CAT_get(i8* noundef %5) #5

Constant after instruction


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %6)

Constant after instruction


Instruction
  call void @CAT_set(i8* %5, i64 -3)

endofblockkilling:  call void @CAT_set(i8* %5, i64 -3)
Constant after instruction


Instruction
  %8 = call i64 @CAT_get(i8* noundef %5) #5

Constant after instruction


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5

Constant after instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %11 = call i32 (...) @rand() #6

Constant after instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %12 = icmp sgt i32 %11, 0

Constant after instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  br i1 %12, label %13, label %14

Constant after instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #5
  call void @CAT_set(i8* %5, i64 13)
  %6 = call i64 @CAT_get(i8* noundef %5) #5
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %6)
  call void @CAT_set(i8* %5, i64 -3)
  %8 = call i64 @CAT_get(i8* noundef %5) #5
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  %11 = call i32 (...) @rand() #6
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %14


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  call void @my_execution()

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %5 = call i64 @CAT_variables() #5

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  %7 = call i64 @CAT_cost() #5

Constant after instruction


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @str, i64 0, i64 0))
  call void @my_execution()
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @str.7, i64 0, i64 0))
  %5 = call i64 @CAT_variables() #5
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)
  %7 = call i64 @CAT_cost() #5
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  %5 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  call void @CAT_set(i8* %5, i64 13)

endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 13)


Instruction
  %6 = call i64 @CAT_get(i8* noundef %5) #5

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 13)


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %6)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 13)


Instruction
  call void @CAT_set(i8* %5, i64 -3)

endofblockkilling:  call void @CAT_set(i8* %5, i64 13)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 -3)


Instruction
  %8 = call i64 @CAT_get(i8* noundef %5) #5

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 -3)


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 -3)


Instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5

endofblockkilling:  call void @CAT_set(i8* %5, i64 -3)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %11 = call i32 (...) @rand() #6

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %12 = icmp sgt i32 %11, 0

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  br i1 %12, label %13, label %14

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5
i64 13i64 -3

BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #5
  call void @CAT_set(i8* %5, i64 13)
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 13)
  call void @CAT_set(i8* %5, i64 -3)
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef -3)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  %9 = call i32 (...) @rand() #6
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %12


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %5, i64 47)

endofblockkilling:  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 47)


Instruction
  call void @CAT_sub(i8* noundef %5, i8* noundef %5, i8* noundef %3) #5

endofblockkilling:  call void @CAT_set(i8* %5, i64 47)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 8) #5
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5


Instruction
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #5
Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5


Instruction
  br label %12

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5


BLOCK AFTER MODIFICATION

11:                                               ; preds = %0
  call void @CAT_set(i8* %5, i64 47)
  call void @CAT_set(i8* %5, i64 39)
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5
  br label %12


NEXTBLOCK

 found bad:   %1 = call i8* @CAT_new(i64 noundef 5) #5i64 39

 found bad:   %3 = call i8* @CAT_new(i64 noundef 8) #5i64 41
REMOVED

  call void @CAT_set(i8* noundef %5, i64 noundef 42) #53->2REMOVED

  call void @CAT_set(i8* noundef %3, i64 noundef 41) #52->1REMOVED

  call void @CAT_set(i8* noundef %1, i64 noundef 39) #51->0

Instruction
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %3) #5

Constant after instruction


Instruction
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %1) #5

Constant after instruction


Instruction
  %13 = call i64 @CAT_get(i8* noundef %5) #5

Constant after instruction


Instruction
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)

Constant after instruction


Instruction
  call void @CAT_destroy(i8* noundef %1) #5
erased an instruction cause it was called in a function  %1 = call i8* @CAT_new(i64 noundef 5) #5

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #5
Constant after instruction


Instruction
  call void @CAT_destroy(i8* noundef %3) #5
erased an instruction cause it was called in a function  %3 = call i8* @CAT_new(i64 noundef 8) #5

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 8) #5
Constant after instruction


Instruction
  call void @CAT_destroy(i8* noundef %5) #5
erased an instruction cause it was called in a function  %5 = call i8* @CAT_new(i64 noundef 0) #5

endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction


Instruction
  ret void

Constant after instruction


BLOCK AFTER MODIFICATION

12:                                               ; preds = %11, %0
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %3) #5
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %1) #5
  %13 = call i64 @CAT_get(i8* noundef %5) #5
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)
  call void @CAT_destroy(i8* noundef %1) #5
  call void @CAT_destroy(i8* noundef %3) #5
  call void @CAT_destroy(i8* noundef %5) #5
  ret void


NEXTBLOCK


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  %5 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  call void @CAT_set(i8* %5, i64 13)

endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 13)


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 13)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 13)


Instruction
  call void @CAT_set(i8* %5, i64 -3)

endofblockkilling:  call void @CAT_set(i8* %5, i64 13)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 -3)


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef -3)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 -3)


Instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5

endofblockkilling:  call void @CAT_set(i8* %5, i64 -3)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %9 = call i32 (...) @rand() #6

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %10 = icmp sgt i32 %9, 0

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  br i1 %10, label %11, label %12

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #5
  call void @CAT_set(i8* %5, i64 13)
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 13)
  call void @CAT_set(i8* %5, i64 -3)
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef -3)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  %9 = call i32 (...) @rand() #6
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %12


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  call void @my_execution()

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %5 = call i64 @CAT_variables() #5

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  %7 = call i64 @CAT_cost() #5

Constant after instruction


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @str, i64 0, i64 0))
  call void @my_execution()
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @str.7, i64 0, i64 0))
  %5 = call i64 @CAT_variables() #5
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)
  %7 = call i64 @CAT_cost() #5
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %3 = call i8* @CAT_new(i64 noundef 8) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #5

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  %5 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  call void @CAT_set(i8* %5, i64 13)

endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 13)


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 13)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 13)


Instruction
  call void @CAT_set(i8* %5, i64 -3)

endofblockkilling:  call void @CAT_set(i8* %5, i64 13)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 -3)


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef -3)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 -3)


Instruction
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5

endofblockkilling:  call void @CAT_set(i8* %5, i64 -3)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %9 = call i32 (...) @rand() #6

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  %10 = icmp sgt i32 %9, 0

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


Instruction
  br i1 %10, label %11, label %12

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %2 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 noundef 8)
  %5 = call i8* @CAT_new(i64 noundef 0) #5
  call void @CAT_set(i8* %5, i64 13)
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 13)
  call void @CAT_set(i8* %5, i64 -3)
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef -3)
  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  %9 = call i32 (...) @rand() #6
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %12


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %5, i64 47)

endofblockkilling:  call void @CAT_set(i8* noundef %5, i64 noundef 42) #5
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 47)


Instruction
  call void @CAT_set(i8* %5, i64 39)

endofblockkilling:  call void @CAT_set(i8* %5, i64 47)
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  %3 = call i8* @CAT_new(i64 noundef 8) #5
  call void @CAT_set(i8* %5, i64 39)


Instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 8) #5
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* %5, i64 39)
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5


Instruction
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #5
Constant after instruction
  call void @CAT_set(i8* %5, i64 39)
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5


Instruction
  br label %12

Constant after instruction
  call void @CAT_set(i8* %5, i64 39)
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5


BLOCK AFTER MODIFICATION

11:                                               ; preds = %0
  call void @CAT_set(i8* %5, i64 47)
  call void @CAT_set(i8* %5, i64 39)
  call void @CAT_set(i8* noundef %3, i64 noundef 41) #5
  call void @CAT_set(i8* noundef %1, i64 noundef 39) #5
  br label %12


NEXTBLOCK

 found bad:   %1 = call i8* @CAT_new(i64 noundef 5) #5i64 39

 found bad:   %3 = call i8* @CAT_new(i64 noundef 8) #5i64 41

 found bad:   call void @CAT_set(i8* noundef %5, i64 noundef 42) #5i64 39
REMOVED

  call void @CAT_set(i8* %5, i64 39)3->2REMOVED

  call void @CAT_set(i8* noundef %3, i64 noundef 41) #52->1REMOVED

  call void @CAT_set(i8* noundef %1, i64 noundef 39) #51->0

Instruction
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %3) #5

Constant after instruction


Instruction
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %1) #5

Constant after instruction


Instruction
  %13 = call i64 @CAT_get(i8* noundef %5) #5

Constant after instruction


Instruction
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)

Constant after instruction


Instruction
  call void @CAT_destroy(i8* noundef %1) #5
erased an instruction cause it was called in a function  %1 = call i8* @CAT_new(i64 noundef 5) #5

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 5) #5
Constant after instruction


Instruction
  call void @CAT_destroy(i8* noundef %3) #5
erased an instruction cause it was called in a function  %3 = call i8* @CAT_new(i64 noundef 8) #5

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 8) #5
Constant after instruction


Instruction
  call void @CAT_destroy(i8* noundef %5) #5
erased an instruction cause it was called in a function  %5 = call i8* @CAT_new(i64 noundef 0) #5

endofblockkilling:  %5 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction


Instruction
  ret void

Constant after instruction


BLOCK AFTER MODIFICATION

12:                                               ; preds = %11, %0
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %3) #5
  call void @CAT_add(i8* noundef %5, i8* noundef %5, i8* noundef %1) #5
  %13 = call i64 @CAT_get(i8* noundef %5) #5
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)
  call void @CAT_destroy(i8* noundef %1) #5
  call void @CAT_destroy(i8* noundef %3) #5
  call void @CAT_destroy(i8* noundef %5) #5
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  call void @my_execution()

Constant after instruction


Instruction
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @str.7, i64 0, i64 0))

Constant after instruction


Instruction
  %5 = call i64 @CAT_variables() #5

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  %7 = call i64 @CAT_cost() #5

Constant after instruction


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @str, i64 0, i64 0))
  call void @my_execution()
  %4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @str.7, i64 0, i64 0))
  %5 = call i64 @CAT_variables() #5
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %5)
  %7 = call i64 @CAT_cost() #5
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %7)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm -fdeclspec -c ../misc/CAT.c -o ../misc/CAT.o
clang-14: warning: -lm: 'linker' input unused [-Wunused-command-line-argument]
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test0'
