make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test109'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %2 = alloca i8*, align 8

Constant after instruction


Instruction
  %3 = bitcast i8** %2 to i8*

Constant after instruction


Instruction
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4

endofblockkilling:  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
Constant after instruction


Instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  store i8* %4, i8** %2, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  store i8** %2, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %5 = call i64 @CAT_get(i8* noundef %4) #5

optimize Cat_get

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef %5)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %7 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %8 = load i8*, i8** %7, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %9 = call i64 @CAT_get(i8* noundef %8) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %9)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %11 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %12 = load i8*, i8** %11, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  call void @CAT_set(i8* noundef %12, i64 noundef 42) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %12, i64 noundef 42) #5


Instruction
  %13 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %12, i64 noundef 42) #5


Instruction
  %14 = load i8*, i8** %13, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %12, i64 noundef 42) #5


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %12, i64 noundef 42) #5


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %12, i64 noundef 42) #5


Instruction
  %17 = call i8* @CAT_new(i64 noundef 8) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %12, i64 noundef 42) #5
  %17 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %18 = icmp sgt i32 %0, 10

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %12, i64 noundef 42) #5
  %17 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  br i1 %18, label %19, label %20

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %12, i64 noundef 42) #5
  %17 = call i8* @CAT_new(i64 noundef 8) #5
i64 5

BLOCK AFTER MODIFICATION

  %2 = alloca i8*, align 8
  %3 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  store i8* %4, i8** %2, align 8, !tbaa !3
  store i8** %2, i8*** @g, align 8, !tbaa !3
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %6 = load i8**, i8*** @g, align 8, !tbaa !3
  %7 = load i8*, i8** %6, align 8, !tbaa !3
  %8 = call i64 @CAT_get(i8* noundef %7) #5
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = load i8**, i8*** @g, align 8, !tbaa !3
  %11 = load i8*, i8** %10, align 8, !tbaa !3
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %12 = load i8**, i8*** @g, align 8, !tbaa !3
  %13 = load i8*, i8** %12, align 8, !tbaa !3
  %14 = call i64 @CAT_get(i8* noundef %13) #5
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)
  %16 = call i8* @CAT_new(i64 noundef 8) #5
  %17 = icmp sgt i32 %0, 10
  br i1 %17, label %18, label %19


NEXTBLOCK


Instruction
  call void @CAT_add(i8* noundef %16, i8* noundef %16, i8* noundef %16) #5

endofblockkilling:  %16 = call i8* @CAT_new(i64 noundef 8) #5
Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  br label %19

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


BLOCK AFTER MODIFICATION

18:                                               ; preds = %1
  call void @CAT_set(i8* %16, i64 16)
  br label %19


NEXTBLOCK
REMOVED

  %16 = call i8* @CAT_new(i64 noundef 8) #53->2

Instruction
  %20 = call i64 @CAT_get(i8* noundef %16) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i64 noundef %20)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %22 = call i8* @CAT_new(i64 noundef 0) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %22 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  %23 = load i8*, i8** %2, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %22 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %23, i8* noundef %16) #5

endofblockkilling:  %22 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %24 = call i64 @CAT_get(i8* noundef %22) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i64 noundef %24)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4

endofblockkilling:  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4
Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  ret void

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


BLOCK AFTER MODIFICATION

19:                                               ; preds = %18, %1
  %20 = call i64 @CAT_get(i8* noundef %16) #5
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i64 noundef %20)
  %22 = call i8* @CAT_new(i64 noundef 0) #5
  %23 = load i8*, i8** %2, align 8, !tbaa !3
  call void @CAT_add(i8* noundef %22, i8* noundef %23, i8* noundef %16) #5
  %24 = call i64 @CAT_get(i8* noundef %22) #5
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i64 noundef %24)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4
  ret void


NEXTBLOCK


Instruction
  %2 = alloca i8*, align 8

Constant after instruction


Instruction
  %3 = bitcast i8** %2 to i8*

Constant after instruction


Instruction
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4

endofblockkilling:  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
Constant after instruction


Instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  store i8* %4, i8** %2, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  store i8** %2, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %6 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %7 = load i8*, i8** %6, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %8 = call i64 @CAT_get(i8* noundef %7) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %10 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %11 = load i8*, i8** %10, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %12 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %13 = load i8*, i8** %12, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %14 = call i64 @CAT_get(i8* noundef %13) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %16 = call i8* @CAT_new(i64 noundef 8) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %16 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %17 = icmp sgt i32 %0, 10

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %16 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  br i1 %17, label %18, label %19

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %16 = call i8* @CAT_new(i64 noundef 8) #5


BLOCK AFTER MODIFICATION

  %2 = alloca i8*, align 8
  %3 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  store i8* %4, i8** %2, align 8, !tbaa !3
  store i8** %2, i8*** @g, align 8, !tbaa !3
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %6 = load i8**, i8*** @g, align 8, !tbaa !3
  %7 = load i8*, i8** %6, align 8, !tbaa !3
  %8 = call i64 @CAT_get(i8* noundef %7) #5
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = load i8**, i8*** @g, align 8, !tbaa !3
  %11 = load i8*, i8** %10, align 8, !tbaa !3
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %12 = load i8**, i8*** @g, align 8, !tbaa !3
  %13 = load i8*, i8** %12, align 8, !tbaa !3
  %14 = call i64 @CAT_get(i8* noundef %13) #5
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)
  %16 = call i8* @CAT_new(i64 noundef 8) #5
  %17 = icmp sgt i32 %0, 10
  br i1 %17, label %18, label %19


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @CAT_execution(i32 noundef %0)

Constant after instruction


Instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction


Instruction
  call void @CAT_sub(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %4 = call i64 @CAT_variables() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %4)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %6 = call i64 @CAT_cost() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %6)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  call void @CAT_execution(i32 noundef %0)
  %3 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %3, i64 104)
  call void @CAT_sub(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4
  %4 = call i64 @CAT_variables() #4
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %4)
  %6 = call i64 @CAT_cost() #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %6)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %2 = alloca i8*, align 8

Constant after instruction


Instruction
  %3 = bitcast i8** %2 to i8*

Constant after instruction


Instruction
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4

endofblockkilling:  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
Constant after instruction


Instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  store i8* %4, i8** %2, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  store i8** %2, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %6 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %7 = load i8*, i8** %6, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %8 = call i64 @CAT_get(i8* noundef %7) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %10 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %11 = load i8*, i8** %10, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %12 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %13 = load i8*, i8** %12, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %14 = call i64 @CAT_get(i8* noundef %13) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %16 = call i8* @CAT_new(i64 noundef 8) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %16 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %17 = icmp sgt i32 %0, 10

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %16 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  br i1 %17, label %18, label %19

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %16 = call i8* @CAT_new(i64 noundef 8) #5


BLOCK AFTER MODIFICATION

  %2 = alloca i8*, align 8
  %3 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  store i8* %4, i8** %2, align 8, !tbaa !3
  store i8** %2, i8*** @g, align 8, !tbaa !3
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %6 = load i8**, i8*** @g, align 8, !tbaa !3
  %7 = load i8*, i8** %6, align 8, !tbaa !3
  %8 = call i64 @CAT_get(i8* noundef %7) #5
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = load i8**, i8*** @g, align 8, !tbaa !3
  %11 = load i8*, i8** %10, align 8, !tbaa !3
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %12 = load i8**, i8*** @g, align 8, !tbaa !3
  %13 = load i8*, i8** %12, align 8, !tbaa !3
  %14 = call i64 @CAT_get(i8* noundef %13) #5
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)
  %16 = call i8* @CAT_new(i64 noundef 8) #5
  %17 = icmp sgt i32 %0, 10
  br i1 %17, label %18, label %19


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %16, i64 16)

endofblockkilling:  %16 = call i8* @CAT_new(i64 noundef 8) #5
Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  call void @CAT_set(i8* %16, i64 16)


Instruction
  br label %19

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  call void @CAT_set(i8* %16, i64 16)


BLOCK AFTER MODIFICATION

18:                                               ; preds = %1
  call void @CAT_set(i8* %16, i64 16)
  br label %19


NEXTBLOCK

 found bad:   %16 = call i8* @CAT_new(i64 noundef 8) #5i64 16
REMOVED

  call void @CAT_set(i8* %16, i64 16)3->2

Instruction
  %20 = call i64 @CAT_get(i8* noundef %16) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i64 noundef %20)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %22 = call i8* @CAT_new(i64 noundef 0) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %22 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  %23 = load i8*, i8** %2, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %22 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %23, i8* noundef %16) #5

endofblockkilling:  %22 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %24 = call i64 @CAT_get(i8* noundef %22) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i64 noundef %24)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4

endofblockkilling:  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4
Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  ret void

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


BLOCK AFTER MODIFICATION

19:                                               ; preds = %18, %1
  %20 = call i64 @CAT_get(i8* noundef %16) #5
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i64 noundef %20)
  %22 = call i8* @CAT_new(i64 noundef 0) #5
  %23 = load i8*, i8** %2, align 8, !tbaa !3
  call void @CAT_add(i8* noundef %22, i8* noundef %23, i8* noundef %16) #5
  %24 = call i64 @CAT_get(i8* noundef %22) #5
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i64 noundef %24)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @CAT_execution(i32 noundef %0)

Constant after instruction


Instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4


Instruction
  call void @CAT_set(i8* %3, i64 104)

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction
  call void @CAT_set(i8* %3, i64 104)


Instruction
  call void @CAT_sub(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

endofblockkilling:  call void @CAT_set(i8* %3, i64 104)
Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %4 = call i64 @CAT_variables() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %4)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %6 = call i64 @CAT_cost() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %6)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  call void @CAT_execution(i32 noundef %0)
  %3 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %3, i64 104)
  call void @CAT_set(i8* %3, i64 0)
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4
  %4 = call i64 @CAT_variables() #4
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %4)
  %6 = call i64 @CAT_cost() #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %6)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %2 = alloca i8*, align 8

Constant after instruction


Instruction
  %3 = bitcast i8** %2 to i8*

Constant after instruction


Instruction
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4

endofblockkilling:  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
Constant after instruction


Instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  store i8* %4, i8** %2, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  store i8** %2, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %6 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %7 = load i8*, i8** %6, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %8 = call i64 @CAT_get(i8* noundef %7) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %10 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  %11 = load i8*, i8** %10, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5


Instruction
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %12 = load i8**, i8*** @g, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %13 = load i8*, i8** %12, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %14 = call i64 @CAT_get(i8* noundef %13) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %16 = call i8* @CAT_new(i64 noundef 8) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %16 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  %17 = icmp sgt i32 %0, 10

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %16 = call i8* @CAT_new(i64 noundef 8) #5


Instruction
  br i1 %17, label %18, label %19

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %16 = call i8* @CAT_new(i64 noundef 8) #5


BLOCK AFTER MODIFICATION

  %2 = alloca i8*, align 8
  %3 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  store i8* %4, i8** %2, align 8, !tbaa !3
  store i8** %2, i8*** @g, align 8, !tbaa !3
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %6 = load i8**, i8*** @g, align 8, !tbaa !3
  %7 = load i8*, i8** %6, align 8, !tbaa !3
  %8 = call i64 @CAT_get(i8* noundef %7) #5
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = load i8**, i8*** @g, align 8, !tbaa !3
  %11 = load i8*, i8** %10, align 8, !tbaa !3
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %12 = load i8**, i8*** @g, align 8, !tbaa !3
  %13 = load i8*, i8** %12, align 8, !tbaa !3
  %14 = call i64 @CAT_get(i8* noundef %13) #5
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %14)
  %16 = call i8* @CAT_new(i64 noundef 8) #5
  %17 = icmp sgt i32 %0, 10
  br i1 %17, label %18, label %19


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %16, i64 16)

endofblockkilling:  %16 = call i8* @CAT_new(i64 noundef 8) #5
Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  call void @CAT_set(i8* %16, i64 16)


Instruction
  br label %19

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  call void @CAT_set(i8* %16, i64 16)


BLOCK AFTER MODIFICATION

18:                                               ; preds = %1
  call void @CAT_set(i8* %16, i64 16)
  br label %19


NEXTBLOCK

 found bad:   %16 = call i8* @CAT_new(i64 noundef 8) #5i64 16
REMOVED

  call void @CAT_set(i8* %16, i64 16)3->2

Instruction
  %20 = call i64 @CAT_get(i8* noundef %16) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i64 noundef %20)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %22 = call i8* @CAT_new(i64 noundef 0) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %22 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  %23 = load i8*, i8** %2, align 8, !tbaa !3

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5
  %22 = call i8* @CAT_new(i64 noundef 0) #5


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %23, i8* noundef %16) #5

endofblockkilling:  %22 = call i8* @CAT_new(i64 noundef 0) #5
Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %24 = call i64 @CAT_get(i8* noundef %22) #5

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i64 noundef %24)

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4

endofblockkilling:  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4
Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


Instruction
  ret void

Constant after instruction
  %4 = call i8* @CAT_new(i64 noundef 5) #5
  call void @CAT_set(i8* noundef %11, i64 noundef 42) #5


BLOCK AFTER MODIFICATION

19:                                               ; preds = %18, %1
  %20 = call i64 @CAT_get(i8* noundef %16) #5
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i64 noundef %20)
  %22 = call i8* @CAT_new(i64 noundef 0) #5
  %23 = load i8*, i8** %2, align 8, !tbaa !3
  call void @CAT_add(i8* noundef %22, i8* noundef %23, i8* noundef %16) #5
  %24 = call i64 @CAT_get(i8* noundef %22) #5
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i64 noundef %24)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @CAT_execution(i32 noundef %0)

Constant after instruction


Instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4


Instruction
  call void @CAT_set(i8* %3, i64 104)

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction
  call void @CAT_set(i8* %3, i64 104)


Instruction
  call void @CAT_set(i8* %3, i64 0)

endofblockkilling:  call void @CAT_set(i8* %3, i64 104)
Constant after instruction
  call void @CAT_set(i8* %3, i64 0)


Instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4

endofblockkilling:  call void @CAT_set(i8* %3, i64 0)
Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %4 = call i64 @CAT_variables() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %4)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %6 = call i64 @CAT_cost() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %6)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  call void @CAT_execution(i32 noundef %0)
  %3 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %3, i64 104)
  call void @CAT_set(i8* %3, i64 0)
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4
  %4 = call i64 @CAT_variables() #4
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 noundef %4)
  %6 = call i64 @CAT_cost() #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 noundef %6)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test109'
