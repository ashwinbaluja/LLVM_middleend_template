make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test52'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****
loop

12:                                               ; preds = %2, %30
  %13 = phi i32 [ 0, %2 ], [ %31, %30 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa, %30 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %28, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %27, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %27 = call i8* @CAT_new(i64 noundef 1) #3
  %28 = add nuw nsw i32 %21, 1
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %.preheader, label %20, !llvm.loop !3
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

30:                                               ; preds = %41
  %.lcssa1.lcssa.lcssa = phi i8* [ %.lcssa1.lcssa, %41 ]
  %31 = add nuw nsw i32 %13, 1
  %32 = icmp eq i32 %31, 10
  br i1 %32, label %6, label %12, !llvm.loop !6
: 
____________________
loop

33:                                               ; preds = %.preheader, %41
  %34 = phi i32 [ %42, %41 ], [ 0, %.preheader ]
  %35 = phi i8* [ %.lcssa1.lcssa, %41 ], [ %.lcssa, %.preheader ]
  %36 = call i64 @CAT_get(i8* noundef %35) #3
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %35, i8* noundef %3, i8* noundef %4) #3
  %38 = call i64 @CAT_get(i8* noundef %35) #3
  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %38)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %40 = call i8* @CAT_new(i64 noundef 1) #3
  br label %44
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

41:                                               ; preds = %52
  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %52 ]
  %42 = add nuw nsw i32 %34, 1
  %43 = icmp eq i32 %42, 10
  br i1 %43, label %30, label %33, !llvm.loop !7
: 
____________________
loop

44:                                               ; preds = %33, %52
  %45 = phi i32 [ 0, %33 ], [ %53, %52 ]
  %46 = phi i8* [ %40, %33 ], [ %.lcssa1, %52 ]
  %47 = call i64 @CAT_get(i8* noundef %46) #3
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)
  call void @CAT_add(i8* noundef %46, i8* noundef %3, i8* noundef %4) #3
  %49 = call i64 @CAT_get(i8* noundef %46) #3
  %50 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %49)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %51 = call i8* @CAT_new(i64 noundef 1) #3
  br label %55
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

52:                                               ; preds = %55
  %.lcssa1 = phi i8* [ %62, %55 ]
  %53 = add nuw nsw i32 %45, 1
  %54 = icmp eq i32 %53, 10
  br i1 %54, label %41, label %44, !llvm.loop !8
: 
____________________
loop

55:                                               ; preds = %44, %55
  %56 = phi i32 [ 0, %44 ], [ %63, %55 ]
  %57 = phi i8* [ %51, %44 ], [ %62, %55 ]
  %58 = call i64 @CAT_get(i8* noundef %57) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %57, i8* noundef %3, i8* noundef %4) #3
  %60 = call i64 @CAT_get(i8* noundef %57) #3
  %61 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %60)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %62 = call i8* @CAT_new(i64 noundef 1) #3
  %63 = add nuw nsw i32 %56, 1
  %64 = icmp eq i32 %63, 10
  br i1 %64, label %52, label %55, !llvm.loop !9
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

.preheader:                                       ; preds = %20
  %.lcssa = phi i8* [ %27, %20 ]
  br label %33
: 
____________________


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa, %30 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #33->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #32->1

Instruction
  %13 = phi i32 [ 0, %2 ], [ %31, %30 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa, %30 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %30
  %13 = phi i32 [ 0, %2 ], [ %31, %30 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa, %30 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %22 = phi i8* [ %19, %12 ], [ %27, %20 ] 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %28, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %22 = phi i8* [ %19, %12 ], [ %27, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %27 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %27 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %28 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %27 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %29 = icmp eq i32 %28, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %27 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %29, label %.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %27 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %28, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %27, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %27 = call i8* @CAT_new(i64 noundef 1) #3
  %28 = add nuw nsw i32 %21, 1
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa = phi i8* [ %27, %20 ]
phiNode
not falsefind

constantphifound  %.lcssa = phi i8* [ %27, %20 ]  %27 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %27 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %33

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %27 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %20
  br label %32


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ] 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %28, label %.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %34 = phi i8* [ %.lcssa1.lcssa, %40 ], [ %.lcssa, %.preheader ] 

Instruction
  %33 = phi i32 [ %41, %40 ], [ 0, %.preheader ]
phiNode
not falsefind

incomingValue:   %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %34 = phi i8* [ %.lcssa1.lcssa, %40 ], [ %.lcssa, %.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %35 = call i64 @CAT_get(i8* noundef %34) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %36 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %35)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %37 = call i64 @CAT_get(i8* noundef %34) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %39 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %43

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

32:                                               ; preds = %.preheader, %40
  %33 = phi i32 [ %41, %40 ], [ 0, %.preheader ]
  %34 = phi i8* [ %.lcssa1.lcssa, %40 ], [ %.lcssa, %.preheader ]
  %35 = call i64 @CAT_get(i8* noundef %34) #3
  %36 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %35)
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #3
  %37 = call i64 @CAT_get(i8* noundef %34) #3
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  br label %43


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  br label %32

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %20
  br label %32


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %45 = phi i8* [ %39, %32 ], [ %.lcssa1, %51 ] 

Instruction
  %44 = phi i32 [ 0, %32 ], [ %52, %51 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %45 = phi i8* [ %39, %32 ], [ %.lcssa1, %51 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %46 = call i64 @CAT_get(i8* noundef %45) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %47 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %46)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %45, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %48 = call i64 @CAT_get(i8* noundef %45) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %50 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %54

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

43:                                               ; preds = %32, %51
  %44 = phi i32 [ 0, %32 ], [ %52, %51 ]
  %45 = phi i8* [ %39, %32 ], [ %.lcssa1, %51 ]
  %46 = call i64 @CAT_get(i8* noundef %45) #3
  %47 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %46)
  call void @CAT_add(i8* noundef %45, i8* noundef %3, i8* noundef %4) #3
  %48 = call i64 @CAT_get(i8* noundef %45) #3
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  br label %54


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #33->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #32->1

Instruction
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa, %29 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %56 = phi i8* [ %50, %43 ], [ %61, %54 ] 

Instruction
  %55 = phi i32 [ 0, %43 ], [ %62, %54 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = phi i8* [ %50, %43 ], [ %61, %54 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i64 @CAT_get(i8* noundef %56) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %57)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %56, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i64 @CAT_get(i8* noundef %56) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %59)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %62 = add nuw nsw i32 %55, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %63 = icmp eq i32 %62, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %63, label %51, label %54, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

54:                                               ; preds = %43, %54
  %55 = phi i32 [ 0, %43 ], [ %62, %54 ]
  %56 = phi i8* [ %50, %43 ], [ %61, %54 ]
  %57 = call i64 @CAT_get(i8* noundef %56) #3
  %58 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %57)
  call void @CAT_add(i8* noundef %56, i8* noundef %3, i8* noundef %4) #3
  %59 = call i64 @CAT_get(i8* noundef %56) #3
  %60 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %59)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %61 = call i8* @CAT_new(i64 noundef 1) #3
  %62 = add nuw nsw i32 %55, 1
  %63 = icmp eq i32 %62, 10
  br i1 %63, label %51, label %54, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa1 = phi i8* [ %61, %54 ]
phiNode
not falsefind

constantphifound  %.lcssa1 = phi i8* [ %61, %54 ]  %61 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %52 = add nuw nsw i32 %44, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %53 = icmp eq i32 %52, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %53, label %40, label %43, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

51:                                               ; preds = %54
  %52 = add nuw nsw i32 %44, 1
  %53 = icmp eq i32 %52, 10
  br i1 %53, label %40, label %43, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %56 = phi i8* [ %50, %43 ], [ %.lcssa1, %54 ] 

Instruction
  %55 = phi i32 [ 0, %43 ], [ %61, %54 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = phi i8* [ %50, %43 ], [ %.lcssa1, %54 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i64 @CAT_get(i8* noundef %56) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %57)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %56, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i64 @CAT_get(i8* noundef %56) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %59)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = add nuw nsw i32 %55, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %62 = icmp eq i32 %61, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %62, label %51, label %54, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

54:                                               ; preds = %43, %54
  %55 = phi i32 [ 0, %43 ], [ %61, %54 ]
  %56 = phi i8* [ %50, %43 ], [ %.lcssa1, %54 ]
  %57 = call i64 @CAT_get(i8* noundef %56) #3
  %58 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %57)
  call void @CAT_add(i8* noundef %56, i8* noundef %3, i8* noundef %4) #3
  %59 = call i64 @CAT_get(i8* noundef %56) #3
  %60 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %59)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = add nuw nsw i32 %55, 1
  %62 = icmp eq i32 %61, 10
  br i1 %62, label %51, label %54, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %51 ]
phiNode
not falsefind

constantphifound  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %51 ]  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %42 = icmp eq i32 %41, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %42, label %29, label %32, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

40:                                               ; preds = %51
  %41 = add nuw nsw i32 %33, 1
  %42 = icmp eq i32 %41, 10
  br i1 %42, label %29, label %32, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %45 = phi i8* [ %39, %32 ], [ %.lcssa1, %51 ] 

Instruction
  %44 = phi i32 [ 0, %32 ], [ %52, %51 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %45 = phi i8* [ %39, %32 ], [ %.lcssa1, %51 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %46 = call i64 @CAT_get(i8* noundef %45) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %47 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %46)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %45, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %48 = call i64 @CAT_get(i8* noundef %45) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %50 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %54

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

43:                                               ; preds = %32, %51
  %44 = phi i32 [ 0, %32 ], [ %52, %51 ]
  %45 = phi i8* [ %39, %32 ], [ %.lcssa1, %51 ]
  %46 = call i64 @CAT_get(i8* noundef %45) #3
  %47 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %46)
  call void @CAT_add(i8* noundef %45, i8* noundef %3, i8* noundef %4) #3
  %48 = call i64 @CAT_get(i8* noundef %45) #3
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  br label %54


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %52 = add nuw nsw i32 %44, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %53 = icmp eq i32 %52, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %53, label %40, label %43, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

51:                                               ; preds = %54
  %52 = add nuw nsw i32 %44, 1
  %53 = icmp eq i32 %52, 10
  br i1 %53, label %40, label %43, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %56 = phi i8* [ %50, %43 ], [ %.lcssa1, %54 ] 

Instruction
  %55 = phi i32 [ 0, %43 ], [ %61, %54 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = phi i8* [ %50, %43 ], [ %.lcssa1, %54 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i64 @CAT_get(i8* noundef %56) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %57)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %56, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i64 @CAT_get(i8* noundef %56) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %59)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = add nuw nsw i32 %55, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %62 = icmp eq i32 %61, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %62, label %51, label %54, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

54:                                               ; preds = %43, %54
  %55 = phi i32 [ 0, %43 ], [ %61, %54 ]
  %56 = phi i8* [ %50, %43 ], [ %.lcssa1, %54 ]
  %57 = call i64 @CAT_get(i8* noundef %56) #3
  %58 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %57)
  call void @CAT_add(i8* noundef %56, i8* noundef %3, i8* noundef %4) #3
  %59 = call i64 @CAT_get(i8* noundef %56) #3
  %60 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %59)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = add nuw nsw i32 %55, 1
  %62 = icmp eq i32 %61, 10
  br i1 %62, label %51, label %54, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa1.lcssa.lcssa = phi i8* [ %.lcssa1, %40 ]
phiNode
not falsefind

constantphifound  %.lcssa1.lcssa.lcssa = phi i8* [ %.lcssa1, %40 ]  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %31 = icmp eq i32 %30, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

29:                                               ; preds = %40
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 10
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %34 = phi i8* [ %.lcssa1, %40 ], [ %.lcssa, %.preheader ] 

Instruction
  %33 = phi i32 [ %41, %40 ], [ 0, %.preheader ]
phiNode
not falsefind

incomingValue:   %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %34 = phi i8* [ %.lcssa1, %40 ], [ %.lcssa, %.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %35 = call i64 @CAT_get(i8* noundef %34) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %36 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %35)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %37 = call i64 @CAT_get(i8* noundef %34) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %39 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %43

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

32:                                               ; preds = %.preheader, %40
  %33 = phi i32 [ %41, %40 ], [ 0, %.preheader ]
  %34 = phi i8* [ %.lcssa1, %40 ], [ %.lcssa, %.preheader ]
  %35 = call i64 @CAT_get(i8* noundef %34) #3
  %36 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %35)
  call void @CAT_add(i8* noundef %34, i8* noundef %3, i8* noundef %4) #3
  %37 = call i64 @CAT_get(i8* noundef %34) #3
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %37)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  br label %43


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %56 = phi i8* [ %50, %43 ], [ %.lcssa1, %54 ] 

Instruction
  %55 = phi i32 [ 0, %43 ], [ %61, %54 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = phi i8* [ %50, %43 ], [ %.lcssa1, %54 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i64 @CAT_get(i8* noundef %56) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %57)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %56, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i64 @CAT_get(i8* noundef %56) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %59)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = add nuw nsw i32 %55, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %62 = icmp eq i32 %61, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %62, label %51, label %54, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

54:                                               ; preds = %43, %54
  %55 = phi i32 [ 0, %43 ], [ %61, %54 ]
  %56 = phi i8* [ %50, %43 ], [ %.lcssa1, %54 ]
  %57 = call i64 @CAT_get(i8* noundef %56) #3
  %58 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %57)
  call void @CAT_add(i8* noundef %56, i8* noundef %3, i8* noundef %4) #3
  %59 = call i64 @CAT_get(i8* noundef %56) #3
  %60 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %59)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %61 = add nuw nsw i32 %55, 1
  %62 = icmp eq i32 %61, 10
  br i1 %62, label %51, label %54, !llvm.loop !9


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #38->7REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #37->6

Instruction
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1, %29 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %41 = add nuw nsw i32 %33, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %42 = icmp eq i32 %41, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %42, label %29, label %32, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

40:                                               ; preds = %51
  %41 = add nuw nsw i32 %33, 1
  %42 = icmp eq i32 %41, 10
  br i1 %42, label %29, label %32, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %45 = phi i8* [ %39, %32 ], [ %.lcssa1, %51 ] 

Instruction
  %44 = phi i32 [ 0, %32 ], [ %52, %51 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %45 = phi i8* [ %39, %32 ], [ %.lcssa1, %51 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %46 = call i64 @CAT_get(i8* noundef %45) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %47 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %46)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %45, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %48 = call i64 @CAT_get(i8* noundef %45) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %50 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %54

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

43:                                               ; preds = %32, %51
  %44 = phi i32 [ 0, %32 ], [ %52, %51 ]
  %45 = phi i8* [ %39, %32 ], [ %.lcssa1, %51 ]
  %46 = call i64 @CAT_get(i8* noundef %45) #3
  %47 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %46)
  call void @CAT_add(i8* noundef %45, i8* noundef %3, i8* noundef %4) #3
  %48 = call i64 @CAT_get(i8* noundef %45) #3
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %48)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  br label %54


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %52 = add nuw nsw i32 %44, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %53 = icmp eq i32 %52, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %53, label %40, label %43, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

51:                                               ; preds = %54
  %52 = add nuw nsw i32 %44, 1
  %53 = icmp eq i32 %52, 10
  br i1 %53, label %40, label %43, !llvm.loop !8


NEXTBLOCK


Instruction
  %7 = call i8* @CAT_new(i64 noundef 52) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %7 = call i8* @CAT_new(i64 noundef 52) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %7, i8* noundef %7, i8* noundef %7) #3

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 52) #3
Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %8 = call i64 @CAT_variables() #3

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %10 = call i64 @CAT_cost() #3

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

6:                                                ; preds = %29
  %7 = call i8* @CAT_new(i64 noundef 52) #3
  call void @CAT_set(i8* %7, i64 104)
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %8 = call i64 @CAT_variables() #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #3
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ] 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %28, label %.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %31 = icmp eq i32 %30, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %39 = call i8* @CAT_new(i64 noundef 1) #3
  %50 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

29:                                               ; preds = %40
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 10
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  br label %32

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %20
  br label %32


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****
loop

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

29:                                               ; preds = %39
  %.lcssa1.lcssa.lcssa.lcssa = phi i8* [ %.lcssa1.lcssa.lcssa, %39 ]
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 10
  br i1 %31, label %6, label %12, !llvm.loop !6
: 
____________________
loop

.preheader:                                       ; preds = %.preheader.preheader, %39
  %32 = phi i32 [ %40, %39 ], [ 0, %.preheader.preheader ]
  %33 = phi i8* [ %.lcssa1.lcssa.lcssa, %39 ], [ %.lcssa.lcssa, %.preheader.preheader ]
  %34 = call i64 @CAT_get(i8* noundef %33) #3
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %34)
  call void @CAT_add(i8* noundef %33, i8* noundef %3, i8* noundef %4) #3
  %36 = call i64 @CAT_get(i8* noundef %33) #3
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  br label %42
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

39:                                               ; preds = %50
  %.lcssa1.lcssa.lcssa = phi i8* [ %.lcssa1.lcssa, %50 ]
  %40 = add nuw nsw i32 %32, 1
  %41 = icmp eq i32 %40, 10
  br i1 %41, label %29, label %.preheader, !llvm.loop !7
: 
____________________
loop

42:                                               ; preds = %.preheader, %50
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1.lcssa, %50 ]
  %45 = call i64 @CAT_get(i8* noundef %44) #3
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3
  %47 = call i64 @CAT_get(i8* noundef %44) #3
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  br label %53
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

50:                                               ; preds = %53
  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %53 ]
  %51 = add nuw nsw i32 %43, 1
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %39, label %42, !llvm.loop !8
: 
____________________
loop

53:                                               ; preds = %42, %53
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
  %56 = call i64 @CAT_get(i8* noundef %55) #3
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3
  %58 = call i64 @CAT_get(i8* noundef %55) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %60 = add nuw nsw i32 %54, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %50, label %53, !llvm.loop !9
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

.preheader.preheader:                             ; preds = %20
  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]
  br label %.preheader
: 
____________________


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #33->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #32->1

Instruction
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]
phiNode
not falsefind

constantphifound  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

.preheader.preheader:                             ; preds = %20
  br label %.preheader


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %33 = phi i8* [ %.lcssa1.lcssa.lcssa, %39 ], [ %.lcssa, %.preheader.preheader ] 

Instruction
  %32 = phi i32 [ %40, %39 ], [ 0, %.preheader.preheader ]
phiNode
not falsefind

incomingValue:   %40 = add nuw nsw i32 %32, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %33 = phi i8* [ %.lcssa1.lcssa.lcssa, %39 ], [ %.lcssa, %.preheader.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %34 = call i64 @CAT_get(i8* noundef %33) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %34)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %33, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %36 = call i64 @CAT_get(i8* noundef %33) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %38 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %42

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %.preheader.preheader, %39
  %32 = phi i32 [ %40, %39 ], [ 0, %.preheader.preheader ]
  %33 = phi i8* [ %.lcssa1.lcssa.lcssa, %39 ], [ %.lcssa, %.preheader.preheader ]
  %34 = call i64 @CAT_get(i8* noundef %33) #3
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %34)
  call void @CAT_add(i8* noundef %33, i8* noundef %3, i8* noundef %4) #3
  %36 = call i64 @CAT_get(i8* noundef %33) #3
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  br label %42


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  br label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

.preheader.preheader:                             ; preds = %20
  br label %.preheader


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1.lcssa, %50 ] 

Instruction
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1.lcssa, %50 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %45 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %47 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %49 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %53

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

42:                                               ; preds = %.preheader, %50
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1.lcssa, %50 ]
  %45 = call i64 @CAT_get(i8* noundef %44) #3
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3
  %47 = call i64 @CAT_get(i8* noundef %44) #3
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  br label %53


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #33->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #32->1

Instruction
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ] 

Instruction
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = add nuw nsw i32 %54, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = icmp eq i32 %60, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %61, label %50, label %53, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

53:                                               ; preds = %42, %53
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
  %56 = call i64 @CAT_get(i8* noundef %55) #3
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3
  %58 = call i64 @CAT_get(i8* noundef %55) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %60 = add nuw nsw i32 %54, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %50, label %53, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %53 ]
phiNode
not falsefind

constantphifound  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %53 ]  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %51 = add nuw nsw i32 %43, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %52 = icmp eq i32 %51, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %52, label %39, label %42, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

50:                                               ; preds = %53
  %51 = add nuw nsw i32 %43, 1
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %39, label %42, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ] 

Instruction
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = add nuw nsw i32 %54, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = icmp eq i32 %60, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %61, label %50, label %53, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

53:                                               ; preds = %42, %53
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
  %56 = call i64 @CAT_get(i8* noundef %55) #3
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3
  %58 = call i64 @CAT_get(i8* noundef %55) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %60 = add nuw nsw i32 %54, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %50, label %53, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa1.lcssa.lcssa = phi i8* [ %.lcssa1, %50 ]
phiNode
not falsefind

constantphifound  %.lcssa1.lcssa.lcssa = phi i8* [ %.lcssa1, %50 ]  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %40 = add nuw nsw i32 %32, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %41 = icmp eq i32 %40, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %41, label %29, label %.preheader, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

39:                                               ; preds = %50
  %40 = add nuw nsw i32 %32, 1
  %41 = icmp eq i32 %40, 10
  br i1 %41, label %29, label %.preheader, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ] 

Instruction
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %45 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %47 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %49 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %53

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

42:                                               ; preds = %.preheader, %50
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ]
  %45 = call i64 @CAT_get(i8* noundef %44) #3
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3
  %47 = call i64 @CAT_get(i8* noundef %44) #3
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  br label %53


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %51 = add nuw nsw i32 %43, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %52 = icmp eq i32 %51, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %52, label %39, label %42, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

50:                                               ; preds = %53
  %51 = add nuw nsw i32 %43, 1
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %39, label %42, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ] 

Instruction
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = add nuw nsw i32 %54, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = icmp eq i32 %60, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %61, label %50, label %53, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

53:                                               ; preds = %42, %53
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
  %56 = call i64 @CAT_get(i8* noundef %55) #3
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3
  %58 = call i64 @CAT_get(i8* noundef %55) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %60 = add nuw nsw i32 %54, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %50, label %53, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa1.lcssa.lcssa.lcssa = phi i8* [ %.lcssa1, %39 ]
phiNode
not falsefind

constantphifound  %.lcssa1.lcssa.lcssa.lcssa = phi i8* [ %.lcssa1, %39 ]  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %31 = icmp eq i32 %30, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

29:                                               ; preds = %39
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 10
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %33 = phi i8* [ %.lcssa1, %39 ], [ %.lcssa, %.preheader.preheader ] 

Instruction
  %32 = phi i32 [ %40, %39 ], [ 0, %.preheader.preheader ]
phiNode
not falsefind

incomingValue:   %40 = add nuw nsw i32 %32, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %33 = phi i8* [ %.lcssa1, %39 ], [ %.lcssa, %.preheader.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %34 = call i64 @CAT_get(i8* noundef %33) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %34)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %33, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %36 = call i64 @CAT_get(i8* noundef %33) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %38 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %42

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %.preheader.preheader, %39
  %32 = phi i32 [ %40, %39 ], [ 0, %.preheader.preheader ]
  %33 = phi i8* [ %.lcssa1, %39 ], [ %.lcssa, %.preheader.preheader ]
  %34 = call i64 @CAT_get(i8* noundef %33) #3
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %34)
  call void @CAT_add(i8* noundef %33, i8* noundef %3, i8* noundef %4) #3
  %36 = call i64 @CAT_get(i8* noundef %33) #3
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  br label %42


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ] 

Instruction
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = add nuw nsw i32 %54, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = icmp eq i32 %60, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %61, label %50, label %53, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

53:                                               ; preds = %42, %53
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
  %56 = call i64 @CAT_get(i8* noundef %55) #3
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3
  %58 = call i64 @CAT_get(i8* noundef %55) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %60 = add nuw nsw i32 %54, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %50, label %53, !llvm.loop !9


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #38->7REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #37->6

Instruction
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1, %29 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %40 = add nuw nsw i32 %32, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %41 = icmp eq i32 %40, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %41, label %29, label %.preheader, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

39:                                               ; preds = %50
  %40 = add nuw nsw i32 %32, 1
  %41 = icmp eq i32 %40, 10
  br i1 %41, label %29, label %.preheader, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ] 

Instruction
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %45 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %47 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %49 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %53

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

42:                                               ; preds = %.preheader, %50
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ]
  %45 = call i64 @CAT_get(i8* noundef %44) #3
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3
  %47 = call i64 @CAT_get(i8* noundef %44) #3
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  br label %53


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %51 = add nuw nsw i32 %43, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %52 = icmp eq i32 %51, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %52, label %39, label %42, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

50:                                               ; preds = %53
  %51 = add nuw nsw i32 %43, 1
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %39, label %42, !llvm.loop !8


NEXTBLOCK


Instruction
  %7 = call i8* @CAT_new(i64 noundef 52) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %7 = call i8* @CAT_new(i64 noundef 52) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_set(i8* %7, i64 104)

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 52) #3
Constant after instruction
  call void @CAT_set(i8* %7, i64 104)
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_sub(i8* noundef %7, i8* noundef %7, i8* noundef %7) #3

endofblockkilling:  call void @CAT_set(i8* %7, i64 104)
Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %8 = call i64 @CAT_variables() #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %10 = call i64 @CAT_cost() #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  ret i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

6:                                                ; preds = %29
  %7 = call i8* @CAT_new(i64 noundef 52) #3
  call void @CAT_set(i8* %7, i64 104)
  call void @CAT_set(i8* %7, i64 0)
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %8 = call i64 @CAT_variables() #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #3
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %31 = icmp eq i32 %30, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

29:                                               ; preds = %39
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 10
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  br label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

.preheader.preheader:                             ; preds = %20
  br label %.preheader


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****
loop

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

29:                                               ; preds = %39
  %.lcssa1.lcssa.lcssa.lcssa = phi i8* [ %.lcssa1.lcssa.lcssa, %39 ]
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 10
  br i1 %31, label %6, label %12, !llvm.loop !6
: 
____________________
loop

.preheader:                                       ; preds = %.preheader.preheader, %39
  %32 = phi i32 [ %40, %39 ], [ 0, %.preheader.preheader ]
  %33 = phi i8* [ %.lcssa1.lcssa.lcssa, %39 ], [ %.lcssa.lcssa, %.preheader.preheader ]
  %34 = call i64 @CAT_get(i8* noundef %33) #3
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %34)
  call void @CAT_add(i8* noundef %33, i8* noundef %3, i8* noundef %4) #3
  %36 = call i64 @CAT_get(i8* noundef %33) #3
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  br label %42
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

39:                                               ; preds = %50
  %.lcssa1.lcssa.lcssa = phi i8* [ %.lcssa1.lcssa, %50 ]
  %40 = add nuw nsw i32 %32, 1
  %41 = icmp eq i32 %40, 10
  br i1 %41, label %29, label %.preheader, !llvm.loop !7
: 
____________________
loop

42:                                               ; preds = %.preheader, %50
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1.lcssa, %50 ]
  %45 = call i64 @CAT_get(i8* noundef %44) #3
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3
  %47 = call i64 @CAT_get(i8* noundef %44) #3
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  br label %53
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

50:                                               ; preds = %53
  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %53 ]
  %51 = add nuw nsw i32 %43, 1
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %39, label %42, !llvm.loop !8
: 
____________________
loop

53:                                               ; preds = %42, %53
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
  %56 = call i64 @CAT_get(i8* noundef %55) #3
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3
  %58 = call i64 @CAT_get(i8* noundef %55) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %60 = add nuw nsw i32 %54, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %50, label %53, !llvm.loop !9
: 
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 ____________________
loop

.preheader.preheader:                             ; preds = %20
  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]
  br label %.preheader
: 
____________________


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #33->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #32->1

Instruction
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]
phiNode
not falsefind

constantphifound  %.lcssa.lcssa = phi i8* [ %.lcssa, %20 ]  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

.preheader.preheader:                             ; preds = %20
  br label %.preheader


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %33 = phi i8* [ %.lcssa1.lcssa.lcssa, %39 ], [ %.lcssa, %.preheader.preheader ] 

Instruction
  %32 = phi i32 [ %40, %39 ], [ 0, %.preheader.preheader ]
phiNode
not falsefind

incomingValue:   %40 = add nuw nsw i32 %32, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %33 = phi i8* [ %.lcssa1.lcssa.lcssa, %39 ], [ %.lcssa, %.preheader.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %34 = call i64 @CAT_get(i8* noundef %33) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %34)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %33, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %36 = call i64 @CAT_get(i8* noundef %33) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %38 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %42

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %.preheader.preheader, %39
  %32 = phi i32 [ %40, %39 ], [ 0, %.preheader.preheader ]
  %33 = phi i8* [ %.lcssa1.lcssa.lcssa, %39 ], [ %.lcssa, %.preheader.preheader ]
  %34 = call i64 @CAT_get(i8* noundef %33) #3
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %34)
  call void @CAT_add(i8* noundef %33, i8* noundef %3, i8* noundef %4) #3
  %36 = call i64 @CAT_get(i8* noundef %33) #3
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  br label %42


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  br label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

.preheader.preheader:                             ; preds = %20
  br label %.preheader


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1.lcssa, %50 ] 

Instruction
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1.lcssa, %50 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %45 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %47 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %49 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %53

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

42:                                               ; preds = %.preheader, %50
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1.lcssa, %50 ]
  %45 = call i64 @CAT_get(i8* noundef %44) #3
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3
  %47 = call i64 @CAT_get(i8* noundef %44) #3
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  br label %53


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #33->2REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #32->1

Instruction
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]
phiNode

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1.lcssa.lcssa.lcssa, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ] 

Instruction
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = add nuw nsw i32 %54, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = icmp eq i32 %60, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %61, label %50, label %53, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

53:                                               ; preds = %42, %53
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
  %56 = call i64 @CAT_get(i8* noundef %55) #3
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3
  %58 = call i64 @CAT_get(i8* noundef %55) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %60 = add nuw nsw i32 %54, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %50, label %53, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %53 ]
phiNode
not falsefind

constantphifound  %.lcssa1.lcssa = phi i8* [ %.lcssa1, %53 ]  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %51 = add nuw nsw i32 %43, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %52 = icmp eq i32 %51, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %52, label %39, label %42, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

50:                                               ; preds = %53
  %51 = add nuw nsw i32 %43, 1
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %39, label %42, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ] 

Instruction
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = add nuw nsw i32 %54, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = icmp eq i32 %60, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %61, label %50, label %53, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

53:                                               ; preds = %42, %53
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
  %56 = call i64 @CAT_get(i8* noundef %55) #3
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3
  %58 = call i64 @CAT_get(i8* noundef %55) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %60 = add nuw nsw i32 %54, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %50, label %53, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa1.lcssa.lcssa = phi i8* [ %.lcssa1, %50 ]
phiNode
not falsefind

constantphifound  %.lcssa1.lcssa.lcssa = phi i8* [ %.lcssa1, %50 ]  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %40 = add nuw nsw i32 %32, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %41 = icmp eq i32 %40, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %41, label %29, label %.preheader, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

39:                                               ; preds = %50
  %40 = add nuw nsw i32 %32, 1
  %41 = icmp eq i32 %40, 10
  br i1 %41, label %29, label %.preheader, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ] 

Instruction
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %45 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %47 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %49 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %53

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

42:                                               ; preds = %.preheader, %50
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ]
  %45 = call i64 @CAT_get(i8* noundef %44) #3
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3
  %47 = call i64 @CAT_get(i8* noundef %44) #3
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  br label %53


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %51 = add nuw nsw i32 %43, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %52 = icmp eq i32 %51, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %52, label %39, label %42, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

50:                                               ; preds = %53
  %51 = add nuw nsw i32 %43, 1
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %39, label %42, !llvm.loop !8


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ] 

Instruction
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = add nuw nsw i32 %54, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = icmp eq i32 %60, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %61, label %50, label %53, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

53:                                               ; preds = %42, %53
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
  %56 = call i64 @CAT_get(i8* noundef %55) #3
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3
  %58 = call i64 @CAT_get(i8* noundef %55) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %60 = add nuw nsw i32 %54, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %50, label %53, !llvm.loop !9


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %.lcssa1.lcssa.lcssa.lcssa = phi i8* [ %.lcssa1, %39 ]
phiNode
not falsefind

constantphifound  %.lcssa1.lcssa.lcssa.lcssa = phi i8* [ %.lcssa1, %39 ]  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %31 = icmp eq i32 %30, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

BLOCK AFTER MODIFICATION

29:                                               ; preds = %39
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 10
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %33 = phi i8* [ %.lcssa1, %39 ], [ %.lcssa, %.preheader.preheader ] 

Instruction
  %32 = phi i32 [ %40, %39 ], [ 0, %.preheader.preheader ]
phiNode
not falsefind

incomingValue:   %40 = add nuw nsw i32 %32, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %33 = phi i8* [ %.lcssa1, %39 ], [ %.lcssa, %.preheader.preheader ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %34 = call i64 @CAT_get(i8* noundef %33) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %34)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %33, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %36 = call i64 @CAT_get(i8* noundef %33) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %38 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %42

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

.preheader:                                       ; preds = %.preheader.preheader, %39
  %32 = phi i32 [ %40, %39 ], [ 0, %.preheader.preheader ]
  %33 = phi i8* [ %.lcssa1, %39 ], [ %.lcssa, %.preheader.preheader ]
  %34 = call i64 @CAT_get(i8* noundef %33) #3
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %34)
  call void @CAT_add(i8* noundef %33, i8* noundef %3, i8* noundef %4) #3
  %36 = call i64 @CAT_get(i8* noundef %33) #3
  %37 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 noundef %36)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  br label %42


NEXTBLOCK


Instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 2) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  br label %12

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 40) #3
  %4 = call i8* @CAT_new(i64 noundef 2) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  br label %12


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ] 

Instruction
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %56 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %58 = call i64 @CAT_get(i8* noundef %55) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %60 = add nuw nsw i32 %54, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %61 = icmp eq i32 %60, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %61, label %50, label %53, !llvm.loop !9

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

53:                                               ; preds = %42, %53
  %54 = phi i32 [ 0, %42 ], [ %60, %53 ]
  %55 = phi i8* [ %49, %42 ], [ %.lcssa1, %53 ]
  %56 = call i64 @CAT_get(i8* noundef %55) #3
  %57 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %56)
  call void @CAT_add(i8* noundef %55, i8* noundef %3, i8* noundef %4) #3
  %58 = call i64 @CAT_get(i8* noundef %55) #3
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 noundef %58)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3
  %60 = add nuw nsw i32 %54, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %50, label %53, !llvm.loop !9


NEXTBLOCK

falseFinds
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1, %29 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 REMOVED

  %3 = call i8* @CAT_new(i64 noundef 40) #38->7REMOVED

  %4 = call i8* @CAT_new(i64 noundef 2) #37->6

Instruction
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1, %29 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %15 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %17 = call i64 @CAT_get(i8* noundef %14) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %20

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

12:                                               ; preds = %2, %29
  %13 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %14 = phi i8* [ %5, %2 ], [ %.lcssa1, %29 ]
  %15 = call i64 @CAT_get(i8* noundef %14) #3
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %15)
  call void @CAT_add(i8* noundef %14, i8* noundef %3, i8* noundef %4) #3
  %17 = call i64 @CAT_get(i8* noundef %14) #3
  %18 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 noundef %17)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  br label %20


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %40 = add nuw nsw i32 %32, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %41 = icmp eq i32 %40, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %41, label %29, label %.preheader, !llvm.loop !7

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

39:                                               ; preds = %50
  %40 = add nuw nsw i32 %32, 1
  %41 = icmp eq i32 %40, 10
  br i1 %41, label %29, label %.preheader, !llvm.loop !7


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3   %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ] 

Instruction
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %45 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %47 = call i64 @CAT_get(i8* noundef %44) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %49 = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br label %53

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

42:                                               ; preds = %.preheader, %50
  %43 = phi i32 [ 0, %.preheader ], [ %51, %50 ]
  %44 = phi i8* [ %38, %.preheader ], [ %.lcssa1, %50 ]
  %45 = call i64 @CAT_get(i8* noundef %44) #3
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %45)
  call void @CAT_add(i8* noundef %44, i8* noundef %3, i8* noundef %4) #3
  %47 = call i64 @CAT_get(i8* noundef %44) #3
  %48 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef %47)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  br label %53


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %51 = add nuw nsw i32 %43, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %52 = icmp eq i32 %51, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %52, label %39, label %42, !llvm.loop !8

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

50:                                               ; preds = %53
  %51 = add nuw nsw i32 %43, 1
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %39, label %42, !llvm.loop !8


NEXTBLOCK


Instruction
  %7 = call i8* @CAT_new(i64 noundef 52) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %7 = call i8* @CAT_new(i64 noundef 52) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_set(i8* %7, i64 104)

endofblockkilling:  %7 = call i8* @CAT_new(i64 noundef 52) #3
Constant after instruction
  call void @CAT_set(i8* %7, i64 104)
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_set(i8* %7, i64 0)

endofblockkilling:  call void @CAT_set(i8* %7, i64 104)
Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_set(i8* %7, i64 0)
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3

endofblockkilling:  call void @CAT_set(i8* %7, i64 0)
Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %8 = call i64 @CAT_variables() #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %10 = call i64 @CAT_cost() #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  ret i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

6:                                                ; preds = %29
  %7 = call i8* @CAT_new(i64 noundef 52) #3
  call void @CAT_set(i8* %7, i64 104)
  call void @CAT_set(i8* %7, i64 0)
  call void @CAT_set(i8* noundef %7, i64 noundef 42) #3
  %8 = call i64 @CAT_variables() #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 noundef %8)
  %10 = call i64 @CAT_cost() #3
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 noundef %10)
  ret i32 0


NEXTBLOCK

falseFinds
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]   %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
phiNode

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %23 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %25 = call i64 @CAT_get(i8* noundef %22) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %27 = add nuw nsw i32 %21, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %28 = icmp eq i32 %27, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %27, %20 ]
  %22 = phi i8* [ %19, %12 ], [ %.lcssa, %20 ]
  %23 = call i64 @CAT_get(i8* noundef %22) #3
  %24 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %23)
  call void @CAT_add(i8* noundef %22, i8* noundef %3, i8* noundef %4) #3
  %25 = call i64 @CAT_get(i8* noundef %22) #3
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %25)
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #3
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %.preheader.preheader, label %20, !llvm.loop !3


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  %30 = add nuw nsw i32 %13, 1

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  %31 = icmp eq i32 %30, 10

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


Instruction
  br i1 %31, label %6, label %12, !llvm.loop !6

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3
  %38 = call i8* @CAT_new(i64 noundef 1) #3
  %49 = call i8* @CAT_new(i64 noundef 1) #3
  %.lcssa1 = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

29:                                               ; preds = %39
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 10
  br i1 %31, label %6, label %12, !llvm.loop !6


NEXTBLOCK

falseFinds
  %3 = call i8* @CAT_new(i64 noundef 40) #3   %4 = call i8* @CAT_new(i64 noundef 2) #3 

Instruction
  br label %.preheader

Constant after instruction
  %19 = call i8* @CAT_new(i64 noundef 1) #3
  %5 = call i8* @CAT_new(i64 noundef 0) #3
  %.lcssa = call i8* @CAT_new(i64 noundef 1) #3


BLOCK AFTER MODIFICATION

.preheader.preheader:                             ; preds = %20
  br label %.preheader


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
  Test failed because there are too many CAT invocations left in the generated bitcode
  The maximum number of CAT invocations are 213033 and the generated bitcode has 235433
make[1]: *** [Makefile:43: check] Error 1
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test52'
