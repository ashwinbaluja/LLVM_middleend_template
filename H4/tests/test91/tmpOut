make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test91'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %4 = sitofp i32 %0 to double

Constant after instruction


Instruction
  %5 = fpext float %1 to double

Constant after instruction


Instruction
  %6 = fadd double %4, %5

Constant after instruction


Instruction
  %7 = fadd double %6, %2

Constant after instruction


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %7)

Constant after instruction


Instruction
  %9 = add nsw i32 %0, 100

Constant after instruction


Instruction
  ret i32 %9

Constant after instruction


BLOCK AFTER MODIFICATION

  %4 = sitofp i32 %0 to double
  %5 = fpext float %1 to double
  %6 = fadd double %4, %5
  %7 = fadd double %6, %2
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %7)
  %9 = add nsw i32 %0, 100
  ret i32 %9


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = icmp eq i8** %0, null

Constant after instruction


Instruction
  br i1 %3, label %5, label %4

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = icmp eq i8** %0, null
  br i1 %3, label %5, label %4


NEXTBLOCK


Instruction
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  br label %7

Constant after instruction


BLOCK AFTER MODIFICATION

5:                                                ; preds = %2
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0))
  br label %7


NEXTBLOCK


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %1) #6

Constant after instruction


Instruction
  br label %7

Constant after instruction


BLOCK AFTER MODIFICATION

4:                                                ; preds = %2
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %1) #6
  br label %7


NEXTBLOCK


Instruction
  ret void

Constant after instruction


BLOCK AFTER MODIFICATION

7:                                                ; preds = %5, %4
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  %2 = icmp eq i8* %0, null

Constant after instruction


Instruction
  br i1 %2, label %7, label %3

Constant after instruction


BLOCK AFTER MODIFICATION

  %2 = icmp eq i8* %0, null
  br i1 %2, label %7, label %3


NEXTBLOCK


Instruction
  %8 = phi i8** [ null, %1 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %6 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %3 ]
phiNode
not falsefind

incomingValue: i8** null

Constant after instruction


Instruction
  ret i8** %8

Constant after instruction


BLOCK AFTER MODIFICATION

7:                                                ; preds = %3, %6, %1
  %8 = phi i8** [ null, %1 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %6 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %3 ]
  ret i8** %8


NEXTBLOCK


Instruction
  %4 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction


Instruction
  %5 = icmp eq i8* %4, null

Constant after instruction


Instruction
  br i1 %5, label %6, label %7

Constant after instruction


BLOCK AFTER MODIFICATION

3:                                                ; preds = %1
  %4 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %7


NEXTBLOCK


Instruction
  store i8* %0, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction


Instruction
  br label %7

Constant after instruction


BLOCK AFTER MODIFICATION

6:                                                ; preds = %3
  store i8* %0, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  br label %7


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %4 = icmp sgt i32 %0, 5

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %4, label %11, label %5

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 5) #6
  %4 = icmp sgt i32 %0, 5
  br i1 %4, label %11, label %5


NEXTBLOCK


Instruction
  %12 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0), %2 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %5 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %7 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %10 ]
phiNode
not falsefind

incomingValue: i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0)

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %13 = phi i8*** [ null, %2 ], [ null, %5 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %7 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %10 ]
phiNode
not falsefind

incomingValue: i8*** null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %14 = call i32 @puts(i8* nonnull dereferenceable(1) %12)

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %15 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.10, i64 0, i64 0))

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %16 = add nsw i32 %0, 1

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %17 = sitofp i32 %16 to float

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %18 = sitofp i32 %0 to double

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %19 = fpext float %17 to double

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %20 = fadd double %18, %19

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %21 = fadd double %20, 4.242000e+01

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %21) #7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %23 = icmp sgt i32 %0, -90

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %23, label %24, label %31

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

11:                                               ; preds = %10, %7, %5, %2
  %12 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0), %2 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %5 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %7 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %10 ]
  %13 = phi i8*** [ null, %2 ], [ null, %5 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %7 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %10 ]
  %14 = call i32 @puts(i8* nonnull dereferenceable(1) %12)
  %15 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.10, i64 0, i64 0))
  %16 = add nsw i32 %0, 1
  %17 = sitofp i32 %16 to float
  %18 = sitofp i32 %0 to double
  %19 = fpext float %17 to double
  %20 = fadd double %18, %19
  %21 = fadd double %20, 4.242000e+01
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %21) #7
  %23 = icmp sgt i32 %0, -90
  br i1 %23, label %24, label %31


NEXTBLOCK


Instruction
  %6 = icmp eq i8* %3, null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %6, label %11, label %7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

5:                                                ; preds = %2
  %6 = icmp eq i8* %3, null
  br i1 %6, label %11, label %7


NEXTBLOCK


Instruction
  %25 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @str.12, i64 0, i64 0))

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %26 = load i8**, i8*** %13, align 8, !tbaa !3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %27 = icmp eq i8** %26, null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %27, label %29, label %28

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

24:                                               ; preds = %11
  %25 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @str.12, i64 0, i64 0))
  %26 = load i8**, i8*** %13, align 8, !tbaa !3
  %27 = icmp eq i8** %26, null
  br i1 %27, label %29, label %28


NEXTBLOCK


Instruction
  %32 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0))

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br label %33

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

31:                                               ; preds = %11
  %32 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0))
  br label %33


NEXTBLOCK


Instruction
  %8 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %9 = icmp eq i8* %8, null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %9, label %10, label %11

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

7:                                                ; preds = %5
  %8 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11


NEXTBLOCK


Instruction
  %30 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)) #7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br label %33

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

29:                                               ; preds = %24
  %30 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)) #7
  br label %33


NEXTBLOCK


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #6

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction


Instruction
  br label %33

Constant after instruction


BLOCK AFTER MODIFICATION

28:                                               ; preds = %24
  call void @CAT_set(i8* %3, i64 10)
  br label %33


NEXTBLOCK
REMOVED

  %3 = call i8* @CAT_new(i64 noundef 5) #61->0

Instruction
  %34 = call i64 @CAT_get(i8* noundef %3) #6

Constant after instruction


Instruction
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i64 noundef %34)

Constant after instruction


Instruction
  %36 = call i8* @CAT_new(i64 noundef 52) #6

Constant after instruction
  %36 = call i8* @CAT_new(i64 noundef 52) #6


Instruction
  call void @CAT_add(i8* noundef %36, i8* noundef %36, i8* noundef %36) #6

endofblockkilling:  %36 = call i8* @CAT_new(i64 noundef 52) #6
Constant after instruction


Instruction
  call void @CAT_sub(i8* noundef %36, i8* noundef %36, i8* noundef %36) #6

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %37 = call i64 @CAT_variables() #6

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %39 = call i64 @CAT_cost() #6

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 noundef %39)

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


BLOCK AFTER MODIFICATION

33:                                               ; preds = %29, %28, %31
  %34 = call i64 @CAT_get(i8* noundef %3) #6
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i64 noundef %34)
  %36 = call i8* @CAT_new(i64 noundef 52) #6
  call void @CAT_set(i8* %36, i64 104)
  call void @CAT_sub(i8* noundef %36, i8* noundef %36, i8* noundef %36) #6
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6
  %37 = call i64 @CAT_variables() #6
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 noundef %37)
  %39 = call i64 @CAT_cost() #6
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 noundef %39)
  ret i32 0


NEXTBLOCK


Instruction
  store i8* %3, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br label %11

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

10:                                               ; preds = %7
  store i8* %3, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  br label %11


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %4 = sitofp i32 %0 to double

Constant after instruction


Instruction
  %5 = fpext float %1 to double

Constant after instruction


Instruction
  %6 = fadd double %4, %5

Constant after instruction


Instruction
  %7 = fadd double %6, %2

Constant after instruction


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %7)

Constant after instruction


Instruction
  %9 = add nsw i32 %0, 100

Constant after instruction


Instruction
  ret i32 %9

Constant after instruction


BLOCK AFTER MODIFICATION

  %4 = sitofp i32 %0 to double
  %5 = fpext float %1 to double
  %6 = fadd double %4, %5
  %7 = fadd double %6, %2
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %7)
  %9 = add nsw i32 %0, 100
  ret i32 %9


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = icmp eq i8** %0, null

Constant after instruction


Instruction
  br i1 %3, label %5, label %4

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = icmp eq i8** %0, null
  br i1 %3, label %5, label %4


NEXTBLOCK


Instruction
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  br label %7

Constant after instruction


BLOCK AFTER MODIFICATION

5:                                                ; preds = %2
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0))
  br label %7


NEXTBLOCK


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %1) #6

Constant after instruction


Instruction
  br label %7

Constant after instruction


BLOCK AFTER MODIFICATION

4:                                                ; preds = %2
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %1) #6
  br label %7


NEXTBLOCK


Instruction
  ret void

Constant after instruction


BLOCK AFTER MODIFICATION

7:                                                ; preds = %5, %4
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  %2 = icmp eq i8* %0, null

Constant after instruction


Instruction
  br i1 %2, label %7, label %3

Constant after instruction


BLOCK AFTER MODIFICATION

  %2 = icmp eq i8* %0, null
  br i1 %2, label %7, label %3


NEXTBLOCK


Instruction
  %8 = phi i8** [ null, %1 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %6 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %3 ]
phiNode
not falsefind

incomingValue: i8** null

Constant after instruction


Instruction
  ret i8** %8

Constant after instruction


BLOCK AFTER MODIFICATION

7:                                                ; preds = %3, %6, %1
  %8 = phi i8** [ null, %1 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %6 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %3 ]
  ret i8** %8


NEXTBLOCK


Instruction
  %4 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction


Instruction
  %5 = icmp eq i8* %4, null

Constant after instruction


Instruction
  br i1 %5, label %6, label %7

Constant after instruction


BLOCK AFTER MODIFICATION

3:                                                ; preds = %1
  %4 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %7


NEXTBLOCK


Instruction
  store i8* %0, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction


Instruction
  br label %7

Constant after instruction


BLOCK AFTER MODIFICATION

6:                                                ; preds = %3
  store i8* %0, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  br label %7


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %4 = icmp sgt i32 %0, 5

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %4, label %11, label %5

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 5) #6
  %4 = icmp sgt i32 %0, 5
  br i1 %4, label %11, label %5


NEXTBLOCK


Instruction
  %12 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0), %2 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %5 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %7 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %10 ]
phiNode
not falsefind

incomingValue: i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0)

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %13 = phi i8*** [ null, %2 ], [ null, %5 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %7 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %10 ]
phiNode
not falsefind

incomingValue: i8*** null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %14 = call i32 @puts(i8* nonnull dereferenceable(1) %12)

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %15 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.10, i64 0, i64 0))

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %16 = add nsw i32 %0, 1

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %17 = sitofp i32 %16 to float

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %18 = sitofp i32 %0 to double

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %19 = fpext float %17 to double

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %20 = fadd double %18, %19

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %21 = fadd double %20, 4.242000e+01

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %21) #7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %23 = icmp sgt i32 %0, -90

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %23, label %24, label %31

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

11:                                               ; preds = %10, %7, %5, %2
  %12 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0), %2 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %5 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %7 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %10 ]
  %13 = phi i8*** [ null, %2 ], [ null, %5 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %7 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %10 ]
  %14 = call i32 @puts(i8* nonnull dereferenceable(1) %12)
  %15 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.10, i64 0, i64 0))
  %16 = add nsw i32 %0, 1
  %17 = sitofp i32 %16 to float
  %18 = sitofp i32 %0 to double
  %19 = fpext float %17 to double
  %20 = fadd double %18, %19
  %21 = fadd double %20, 4.242000e+01
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %21) #7
  %23 = icmp sgt i32 %0, -90
  br i1 %23, label %24, label %31


NEXTBLOCK


Instruction
  %6 = icmp eq i8* %3, null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %6, label %11, label %7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

5:                                                ; preds = %2
  %6 = icmp eq i8* %3, null
  br i1 %6, label %11, label %7


NEXTBLOCK


Instruction
  %25 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @str.12, i64 0, i64 0))

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %26 = load i8**, i8*** %13, align 8, !tbaa !3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %27 = icmp eq i8** %26, null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %27, label %29, label %28

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

24:                                               ; preds = %11
  %25 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @str.12, i64 0, i64 0))
  %26 = load i8**, i8*** %13, align 8, !tbaa !3
  %27 = icmp eq i8** %26, null
  br i1 %27, label %29, label %28


NEXTBLOCK


Instruction
  %32 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0))

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br label %33

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

31:                                               ; preds = %11
  %32 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0))
  br label %33


NEXTBLOCK


Instruction
  %8 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %9 = icmp eq i8* %8, null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %9, label %10, label %11

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

7:                                                ; preds = %5
  %8 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11


NEXTBLOCK


Instruction
  %30 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)) #7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br label %33

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

29:                                               ; preds = %24
  %30 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)) #7
  br label %33


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %3, i64 10)

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction
  call void @CAT_set(i8* %3, i64 10)


Instruction
  br label %33

Constant after instruction
  call void @CAT_set(i8* %3, i64 10)


BLOCK AFTER MODIFICATION

28:                                               ; preds = %24
  call void @CAT_set(i8* %3, i64 10)
  br label %33


NEXTBLOCK

 found bad:   call void @CAT_set(i8* %3, i64 10)i64 5
REMOVED

  %3 = call i8* @CAT_new(i64 noundef 5) #61->0

Instruction
  %34 = call i64 @CAT_get(i8* noundef %3) #6

Constant after instruction


Instruction
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i64 noundef %34)

Constant after instruction


Instruction
  %36 = call i8* @CAT_new(i64 noundef 52) #6

Constant after instruction
  %36 = call i8* @CAT_new(i64 noundef 52) #6


Instruction
  call void @CAT_set(i8* %36, i64 104)

endofblockkilling:  %36 = call i8* @CAT_new(i64 noundef 52) #6
Constant after instruction
  call void @CAT_set(i8* %36, i64 104)


Instruction
  call void @CAT_sub(i8* noundef %36, i8* noundef %36, i8* noundef %36) #6

endofblockkilling:  call void @CAT_set(i8* %36, i64 104)
Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %37 = call i64 @CAT_variables() #6

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %39 = call i64 @CAT_cost() #6

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 noundef %39)

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


BLOCK AFTER MODIFICATION

33:                                               ; preds = %29, %28, %31
  %34 = call i64 @CAT_get(i8* noundef %3) #6
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i64 noundef %34)
  %36 = call i8* @CAT_new(i64 noundef 52) #6
  call void @CAT_set(i8* %36, i64 104)
  call void @CAT_set(i8* %36, i64 0)
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6
  %37 = call i64 @CAT_variables() #6
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 noundef %37)
  %39 = call i64 @CAT_cost() #6
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 noundef %39)
  ret i32 0


NEXTBLOCK


Instruction
  store i8* %3, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br label %11

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

10:                                               ; preds = %7
  store i8* %3, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  br label %11


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %4 = sitofp i32 %0 to double

Constant after instruction


Instruction
  %5 = fpext float %1 to double

Constant after instruction


Instruction
  %6 = fadd double %4, %5

Constant after instruction


Instruction
  %7 = fadd double %6, %2

Constant after instruction


Instruction
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %7)

Constant after instruction


Instruction
  %9 = add nsw i32 %0, 100

Constant after instruction


Instruction
  ret i32 %9

Constant after instruction


BLOCK AFTER MODIFICATION

  %4 = sitofp i32 %0 to double
  %5 = fpext float %1 to double
  %6 = fadd double %4, %5
  %7 = fadd double %6, %2
  %8 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %7)
  %9 = add nsw i32 %0, 100
  ret i32 %9


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = icmp eq i8** %0, null

Constant after instruction


Instruction
  br i1 %3, label %5, label %4

Constant after instruction


BLOCK AFTER MODIFICATION

  %3 = icmp eq i8** %0, null
  br i1 %3, label %5, label %4


NEXTBLOCK


Instruction
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0))

Constant after instruction


Instruction
  br label %7

Constant after instruction


BLOCK AFTER MODIFICATION

5:                                                ; preds = %2
  %6 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0))
  br label %7


NEXTBLOCK


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %1) #6

Constant after instruction


Instruction
  br label %7

Constant after instruction


BLOCK AFTER MODIFICATION

4:                                                ; preds = %2
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %1) #6
  br label %7


NEXTBLOCK


Instruction
  ret void

Constant after instruction


BLOCK AFTER MODIFICATION

7:                                                ; preds = %5, %4
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  %2 = icmp eq i8* %0, null

Constant after instruction


Instruction
  br i1 %2, label %7, label %3

Constant after instruction


BLOCK AFTER MODIFICATION

  %2 = icmp eq i8* %0, null
  br i1 %2, label %7, label %3


NEXTBLOCK


Instruction
  %8 = phi i8** [ null, %1 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %6 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %3 ]
phiNode
not falsefind

incomingValue: i8** null

Constant after instruction


Instruction
  ret i8** %8

Constant after instruction


BLOCK AFTER MODIFICATION

7:                                                ; preds = %3, %6, %1
  %8 = phi i8** [ null, %1 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %6 ], [ @you_cannot_take_decisions_based_on_function_names.internalD1, %3 ]
  ret i8** %8


NEXTBLOCK


Instruction
  %4 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction


Instruction
  %5 = icmp eq i8* %4, null

Constant after instruction


Instruction
  br i1 %5, label %6, label %7

Constant after instruction


BLOCK AFTER MODIFICATION

3:                                                ; preds = %1
  %4 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %7


NEXTBLOCK


Instruction
  store i8* %0, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction


Instruction
  br label %7

Constant after instruction


BLOCK AFTER MODIFICATION

6:                                                ; preds = %3
  store i8* %0, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  br label %7


NEXTBLOCK
loopToBadConstants ****


Instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %4 = icmp sgt i32 %0, 5

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %4, label %11, label %5

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

  %3 = call i8* @CAT_new(i64 noundef 5) #6
  %4 = icmp sgt i32 %0, 5
  br i1 %4, label %11, label %5


NEXTBLOCK


Instruction
  %12 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0), %2 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %5 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %7 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %10 ]
phiNode
not falsefind

incomingValue: i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0)

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %13 = phi i8*** [ null, %2 ], [ null, %5 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %7 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %10 ]
phiNode
not falsefind

incomingValue: i8*** null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %14 = call i32 @puts(i8* nonnull dereferenceable(1) %12)

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %15 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.10, i64 0, i64 0))

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %16 = add nsw i32 %0, 1

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %17 = sitofp i32 %16 to float

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %18 = sitofp i32 %0 to double

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %19 = fpext float %17 to double

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %20 = fadd double %18, %19

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %21 = fadd double %20, 4.242000e+01

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %21) #7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %23 = icmp sgt i32 %0, -90

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %23, label %24, label %31

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

11:                                               ; preds = %10, %7, %5, %2
  %12 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0), %2 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %5 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %7 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), %10 ]
  %13 = phi i8*** [ null, %2 ], [ null, %5 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %7 ], [ bitcast (i8** @you_cannot_take_decisions_based_on_function_names.internalD1 to i8***), %10 ]
  %14 = call i32 @puts(i8* nonnull dereferenceable(1) %12)
  %15 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @str.10, i64 0, i64 0))
  %16 = add nsw i32 %0, 1
  %17 = sitofp i32 %16 to float
  %18 = sitofp i32 %0 to double
  %19 = fpext float %17 to double
  %20 = fadd double %18, %19
  %21 = fadd double %20, 4.242000e+01
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), double noundef %21) #7
  %23 = icmp sgt i32 %0, -90
  br i1 %23, label %24, label %31


NEXTBLOCK


Instruction
  %6 = icmp eq i8* %3, null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %6, label %11, label %7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

5:                                                ; preds = %2
  %6 = icmp eq i8* %3, null
  br i1 %6, label %11, label %7


NEXTBLOCK


Instruction
  %25 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @str.12, i64 0, i64 0))

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %26 = load i8**, i8*** %13, align 8, !tbaa !3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %27 = icmp eq i8** %26, null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %27, label %29, label %28

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

24:                                               ; preds = %11
  %25 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @str.12, i64 0, i64 0))
  %26 = load i8**, i8*** %13, align 8, !tbaa !3
  %27 = icmp eq i8** %26, null
  br i1 %27, label %29, label %28


NEXTBLOCK


Instruction
  %32 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0))

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br label %33

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

31:                                               ; preds = %11
  %32 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.13, i64 0, i64 0))
  br label %33


NEXTBLOCK


Instruction
  %8 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  %9 = icmp eq i8* %8, null

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br i1 %9, label %10, label %11

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

7:                                                ; preds = %5
  %8 = load i8*, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11


NEXTBLOCK


Instruction
  %30 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)) #7

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br label %33

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

29:                                               ; preds = %24
  %30 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)) #7
  br label %33


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %3, i64 10)

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 5) #6
Constant after instruction
  call void @CAT_set(i8* %3, i64 10)


Instruction
  br label %33

Constant after instruction
  call void @CAT_set(i8* %3, i64 10)


BLOCK AFTER MODIFICATION

28:                                               ; preds = %24
  call void @CAT_set(i8* %3, i64 10)
  br label %33


NEXTBLOCK

 found bad:   call void @CAT_set(i8* %3, i64 10)i64 5
REMOVED

  %3 = call i8* @CAT_new(i64 noundef 5) #61->0

Instruction
  %34 = call i64 @CAT_get(i8* noundef %3) #6

Constant after instruction


Instruction
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i64 noundef %34)

Constant after instruction


Instruction
  %36 = call i8* @CAT_new(i64 noundef 52) #6

Constant after instruction
  %36 = call i8* @CAT_new(i64 noundef 52) #6


Instruction
  call void @CAT_set(i8* %36, i64 104)

endofblockkilling:  %36 = call i8* @CAT_new(i64 noundef 52) #6
Constant after instruction
  call void @CAT_set(i8* %36, i64 104)


Instruction
  call void @CAT_set(i8* %36, i64 0)

endofblockkilling:  call void @CAT_set(i8* %36, i64 104)
Constant after instruction
  call void @CAT_set(i8* %36, i64 0)


Instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6

endofblockkilling:  call void @CAT_set(i8* %36, i64 0)
Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %37 = call i64 @CAT_variables() #6

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 noundef %37)

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %39 = call i64 @CAT_cost() #6

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 noundef %39)

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6


BLOCK AFTER MODIFICATION

33:                                               ; preds = %29, %28, %31
  %34 = call i64 @CAT_get(i8* noundef %3) #6
  %35 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i64 noundef %34)
  %36 = call i8* @CAT_new(i64 noundef 52) #6
  call void @CAT_set(i8* %36, i64 104)
  call void @CAT_set(i8* %36, i64 0)
  call void @CAT_set(i8* noundef %36, i64 noundef 42) #6
  %37 = call i64 @CAT_variables() #6
  %38 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 noundef %37)
  %39 = call i64 @CAT_cost() #6
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 noundef %39)
  ret i32 0


NEXTBLOCK


Instruction
  store i8* %3, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


Instruction
  br label %11

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #6


BLOCK AFTER MODIFICATION

10:                                               ; preds = %7
  store i8* %3, i8** @you_cannot_take_decisions_based_on_function_names.internalD1, align 8, !tbaa !3
  br label %11


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test91'
