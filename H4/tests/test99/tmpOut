make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test99'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  ret i8* %0

Constant after instruction


BLOCK AFTER MODIFICATION

  ret i8* %0


NEXTBLOCK
loopToBadConstants ****
loop

16:                                               ; preds = %34, %13
  %17 = phi i32 [ 0, %13 ], [ %35, %34 ]
  %18 = call i64 @CAT_get(i8* noundef %1) #4
  %19 = trunc i64 %18 to i32
  %20 = icmp sgt i32 %19, 9
  br i1 %20, label %21, label %24
: 
____________________
loop

21:                                               ; preds = %16
  %22 = call i64 @CAT_get(i8* noundef %1) #4
  %23 = call i8* @CAT_new(i64 noundef %22) #4
  br label %28
: 
____________________
loop

24:                                               ; preds = %16
  %25 = call i8* @CAT_new(i64 noundef 5) #4
  %26 = call i64 @CAT_get(i8* noundef %25) #4
  %27 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %26)
  br label %28
: 
____________________
loop

28:                                               ; preds = %21, %24
  %29 = phi i8* [ %23, %21 ], [ %25, %24 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %29) #4
  %30 = call i64 @CAT_get(i8* noundef %2) #4
  %31 = icmp eq i32 %17, 0
  br i1 %31, label %32, label %34
: 
  %1 = call i8* @CAT_new(i64 noundef 4) #4 ____________________
loop

32:                                               ; preds = %28
  %33 = call i8* @CAT_new(i64 noundef 125) #4
  br label %34
: 
____________________
loop

34:                                               ; preds = %32, %28
  %35 = add nuw nsw i32 %17, 1
  %36 = icmp eq i32 %35, 10
  br i1 %36, label %37, label %16, !llvm.loop !3
: 
____________________


Instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4


Instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %3 = call i64 @CAT_get(i8* noundef %1) #4

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %4 = trunc i64 %3 to i32

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %5 = icmp sgt i32 %4, 9

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %5, label %6, label %9

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
i64 4

BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = trunc i64 4 to i32
  %4 = icmp sgt i32 %3, 9
  br i1 %4, label %5, label %8


NEXTBLOCK


Instruction
  %6 = call i64 @CAT_get(i8* noundef %1) #4

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %7 = call i8* @CAT_new(i64 noundef %6) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br label %12

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
i64 4

BLOCK AFTER MODIFICATION

5:                                                ; preds = %0
  %6 = call i8* @CAT_new(i64 noundef 4) #4
  br label %11


NEXTBLOCK


Instruction
  %8 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %9 = call i64 @CAT_get(i8* noundef %8) #4

optimize Cat_get

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %10 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef %9)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %11

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
i64 5

BLOCK AFTER MODIFICATION

7:                                                ; preds = %0
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  br label %10


NEXTBLOCK


Instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4


Instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %3 = trunc i64 4 to i32

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %4 = icmp sgt i32 %3, 9

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %4, label %5, label %7

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = trunc i64 4 to i32
  %4 = icmp sgt i32 %3, 9
  br i1 %4, label %5, label %7


NEXTBLOCK


Instruction
  %11 = phi i8* [ %6, %5 ], [ %8, %7 ]
phiNode
not falsefind

incomingValue:   %6 = call i8* @CAT_new(i64 noundef 4) #4
incomingConstant: i64 4
incomingValue:   %8 = call i8* @CAT_new(i64 noundef 5) #4
incomingConstant: i64 5
not equal
prev: i64 4
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %11) #4

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 4) #4
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %12 = call i64 @CAT_get(i8* noundef %2) #4

optimize Cat_get

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %13

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
1^^^^i64 42

BLOCK AFTER MODIFICATION

10:                                               ; preds = %7, %5
  %11 = phi i8* [ %6, %5 ], [ %8, %7 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %11) #4
  br label %12


NEXTBLOCK


Instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4


Instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %3 = trunc i64 4 to i32

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %4 = icmp sgt i32 %3, 9

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %4, label %5, label %7

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = trunc i64 4 to i32
  %4 = icmp sgt i32 %3, 9
  br i1 %4, label %5, label %7


NEXTBLOCK


Instruction
  %11 = phi i8* [ %6, %5 ], [ %8, %7 ]
phiNode
not falsefind

incomingValue:   %6 = call i8* @CAT_new(i64 noundef 4) #4
incomingConstant: i64 4
incomingValue:   %8 = call i8* @CAT_new(i64 noundef 5) #4
incomingConstant: i64 5
not equal
prev: i64 4
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %11) #4

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 4) #4
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %12

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
1^^^^

BLOCK AFTER MODIFICATION

10:                                               ; preds = %7, %5
  %11 = phi i8* [ %6, %5 ], [ %8, %7 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %11) #4
  br label %12


NEXTBLOCK


Instruction
  %6 = call i8* @CAT_new(i64 noundef 4) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %6 = call i8* @CAT_new(i64 noundef 4) #4


Instruction
  br label %10

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %6 = call i8* @CAT_new(i64 noundef 4) #4


BLOCK AFTER MODIFICATION

5:                                                ; preds = %0
  %6 = call i8* @CAT_new(i64 noundef 4) #4
  br label %10


NEXTBLOCK


Instruction
  %8 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %10

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

7:                                                ; preds = %0
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  br label %10


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %13 = phi i32 [ 0, %10 ], [ %31, %30 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %14 = call i64 @CAT_get(i8* noundef %1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %15 = trunc i64 %14 to i32

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %16 = icmp sgt i32 %15, 9

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br i1 %16, label %17, label %20

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %30, %10
  %13 = phi i32 [ 0, %10 ], [ %31, %30 ]
  %14 = call i64 @CAT_get(i8* noundef %1) #4
  %15 = trunc i64 %14 to i32
  %16 = icmp sgt i32 %15, 9
  br i1 %16, label %17, label %20


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %18 = call i64 @CAT_get(i8* noundef %1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef %18) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %24

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

17:                                               ; preds = %12
  %18 = call i64 @CAT_get(i8* noundef %1) #4
  %19 = call i8* @CAT_new(i64 noundef %18) #4
  br label %24


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %21 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %22 = call i64 @CAT_get(i8* noundef %21) #4

optimize Cat_get

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %23 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef %22)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %24

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
i64 5

BLOCK AFTER MODIFICATION

20:                                               ; preds = %12
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef 5)
  br label %23


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %24 = phi i8* [ %19, %17 ], [ %21, %20 ]
phiNode
not falsefind

incomingValue:   %19 = call i8* @CAT_new(i64 noundef %18) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %24) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %25 = call i64 @CAT_get(i8* noundef %2) #4

optimize Cat_get

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %26 = icmp eq i32 %13, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br i1 %26, label %27, label %29

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
i64 42

BLOCK AFTER MODIFICATION

23:                                               ; preds = %17, %20
  %24 = phi i8* [ %19, %17 ], [ %21, %20 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %24) #4
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %28


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %24 = phi i8* [ %19, %17 ], [ %21, %20 ]
phiNode
not falsefind

incomingValue:   %19 = call i8* @CAT_new(i64 noundef %18) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %24) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %25 = icmp eq i32 %13, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br i1 %25, label %26, label %28

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

23:                                               ; preds = %17, %20
  %24 = phi i8* [ %19, %17 ], [ %21, %20 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %24) #4
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %28


NEXTBLOCK


Instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4


Instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %3 = trunc i64 4 to i32

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %4 = icmp sgt i32 %3, 9

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %4, label %5, label %7

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = trunc i64 4 to i32
  %4 = icmp sgt i32 %3, 9
  br i1 %4, label %5, label %7


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %27 = call i8* @CAT_new(i64 noundef 125) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  br label %28

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

26:                                               ; preds = %23
  %27 = call i8* @CAT_new(i64 noundef 125) #4
  br label %28


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %29 = add nuw nsw i32 %13, 1

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  %30 = icmp eq i32 %29, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  br i1 %30, label %31, label %12, !llvm.loop !3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

28:                                               ; preds = %26, %23
  %29 = add nuw nsw i32 %13, 1
  %30 = icmp eq i32 %29, 10
  br i1 %30, label %31, label %12, !llvm.loop !3


NEXTBLOCK


Instruction
  %6 = call i8* @CAT_new(i64 noundef 4) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %6 = call i8* @CAT_new(i64 noundef 4) #4


Instruction
  br label %10

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %6 = call i8* @CAT_new(i64 noundef 4) #4


BLOCK AFTER MODIFICATION

5:                                                ; preds = %0
  %6 = call i8* @CAT_new(i64 noundef 4) #4
  br label %10


NEXTBLOCK


Instruction
  %8 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %10

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

7:                                                ; preds = %0
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  br label %10


NEXTBLOCK


Instruction
  %.lcssa = phi i64 [ 42, %28 ]
phiNode
not falsefind

constantphifound  %.lcssa = phi i64 [ 42, %28 ]i64 42

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  %32 = trunc i64 %.lcssa to i32

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  %33 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 noundef %32)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4
i64 42

BLOCK AFTER MODIFICATION

31:                                               ; preds = %28
  %32 = trunc i64 42 to i32
  %33 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 noundef %32)
  ret void


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %13 = phi i32 [ 0, %10 ], [ %29, %28 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  %14 = call i64 @CAT_get(i8* noundef %1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  %15 = trunc i64 %14 to i32

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  %16 = icmp sgt i32 %15, 9

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  br i1 %16, label %17, label %20

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

12:                                               ; preds = %28, %10
  %13 = phi i32 [ 0, %10 ], [ %29, %28 ]
  %14 = call i64 @CAT_get(i8* noundef %1) #4
  %15 = trunc i64 %14 to i32
  %16 = icmp sgt i32 %15, 9
  br i1 %16, label %17, label %20


NEXTBLOCK


Instruction
  %11 = phi i8* [ %6, %5 ], [ %8, %7 ]
phiNode
not falsefind

incomingValue:   %6 = call i8* @CAT_new(i64 noundef 4) #4
incomingConstant: i64 4
incomingValue:   %8 = call i8* @CAT_new(i64 noundef 5) #4
incomingConstant: i64 5
not equal
prev: i64 4
Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %11) #4

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 4) #4
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %12

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
1^^^^

BLOCK AFTER MODIFICATION

10:                                               ; preds = %7, %5
  %11 = phi i8* [ %6, %5 ], [ %8, %7 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %11) #4
  br label %12


NEXTBLOCK


Instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4


Instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %3 = trunc i64 4 to i32

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %4 = icmp sgt i32 %3, 9

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  br i1 %4, label %5, label %7

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = trunc i64 4 to i32
  %4 = icmp sgt i32 %3, 9
  br i1 %4, label %5, label %7


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %18 = call i64 @CAT_get(i8* noundef %1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %19 = call i8* @CAT_new(i64 noundef %18) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %23

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

17:                                               ; preds = %12
  %18 = call i64 @CAT_get(i8* noundef %1) #4
  %19 = call i8* @CAT_new(i64 noundef %18) #4
  br label %23


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %21 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %23

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

20:                                               ; preds = %12
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef 5)
  br label %23


NEXTBLOCK


Instruction
  %6 = call i8* @CAT_new(i64 noundef 4) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %6 = call i8* @CAT_new(i64 noundef 4) #4


Instruction
  br label %10

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %6 = call i8* @CAT_new(i64 noundef 4) #4


BLOCK AFTER MODIFICATION

5:                                                ; preds = %0
  %6 = call i8* @CAT_new(i64 noundef 4) #4
  br label %10


NEXTBLOCK


Instruction
  %8 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %10

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

7:                                                ; preds = %0
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  br label %10


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %24 = phi i8* [ %19, %17 ], [ %21, %20 ]
phiNode
not falsefind

incomingValue:   %19 = call i8* @CAT_new(i64 noundef %18) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %24) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %25 = icmp eq i32 %13, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br i1 %25, label %26, label %28

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

23:                                               ; preds = %17, %20
  %24 = phi i8* [ %19, %17 ], [ %21, %20 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %24) #4
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %28


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %27 = call i8* @CAT_new(i64 noundef 125) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  br label %28

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

26:                                               ; preds = %23
  %27 = call i8* @CAT_new(i64 noundef 125) #4
  br label %28


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %29 = add nuw nsw i32 %13, 1

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  %30 = icmp eq i32 %29, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  br i1 %30, label %31, label %12, !llvm.loop !3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

28:                                               ; preds = %26, %23
  %29 = add nuw nsw i32 %13, 1
  %30 = icmp eq i32 %29, 10
  br i1 %30, label %31, label %12, !llvm.loop !3


NEXTBLOCK


Instruction
  %32 = trunc i64 42 to i32

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  %33 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 noundef %32)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %8 = call i8* @CAT_new(i64 noundef 5) #4
  %21 = call i8* @CAT_new(i64 noundef 5) #4
  %27 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

31:                                               ; preds = %28
  %32 = trunc i64 42 to i32
  %33 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 noundef %32)
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @computeF()

Constant after instruction


Instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4


Instruction
  call void @CAT_add(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction


Instruction
  call void @CAT_sub(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %4 = call i64 @CAT_variables() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %4)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %6 = call i64 @CAT_cost() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %6)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  call void @computeF()
  %3 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %3, i64 104)
  call void @CAT_sub(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4
  %4 = call i64 @CAT_variables() #4
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %4)
  %6 = call i64 @CAT_cost() #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %6)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  ret i8* %0

Constant after instruction


BLOCK AFTER MODIFICATION

  ret i8* %0


NEXTBLOCK
loopToBadConstants ****
loop

5:                                                ; preds = %21, %0
  %6 = phi i32 [ 0, %0 ], [ %22, %21 ]
  %7 = call i64 @CAT_get(i8* noundef %1) #4
  %8 = trunc i64 %7 to i32
  %9 = icmp sgt i32 %8, 9
  br i1 %9, label %10, label %13
: 
____________________
loop

10:                                               ; preds = %5
  %11 = call i64 @CAT_get(i8* noundef %1) #4
  %12 = call i8* @CAT_new(i64 noundef %11) #4
  br label %16
: 
____________________
loop

13:                                               ; preds = %5
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef 5)
  br label %16
: 
____________________
loop

16:                                               ; preds = %10, %13
  %17 = phi i8* [ %12, %10 ], [ %14, %13 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %17) #4
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %19, label %21
: 
  %1 = call i8* @CAT_new(i64 noundef 4) #4 ____________________
loop

19:                                               ; preds = %16
  %20 = call i8* @CAT_new(i64 noundef 125) #4
  br label %21
: 
____________________
loop

21:                                               ; preds = %19, %16
  %22 = add nuw nsw i32 %6, 1
  %23 = icmp eq i32 %22, 10
  br i1 %23, label %24, label %5, !llvm.loop !3
: 
____________________


Instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4


Instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %3) #4

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 4) #4
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %5

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  call void @CAT_set(i8* %1, i64 9)
  br label %5


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %6 = phi i32 [ 0, %0 ], [ %22, %21 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %7 = call i64 @CAT_get(i8* noundef %1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %8 = trunc i64 %7 to i32

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %9 = icmp sgt i32 %8, 9

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br i1 %9, label %10, label %13

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

5:                                                ; preds = %21, %0
  %6 = phi i32 [ 0, %0 ], [ %22, %21 ]
  %7 = call i64 @CAT_get(i8* noundef %1) #4
  %8 = trunc i64 %7 to i32
  %9 = icmp sgt i32 %8, 9
  br i1 %9, label %10, label %13


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %11 = call i64 @CAT_get(i8* noundef %1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %12 = call i8* @CAT_new(i64 noundef %11) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %16

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

10:                                               ; preds = %5
  %11 = call i64 @CAT_get(i8* noundef %1) #4
  %12 = call i8* @CAT_new(i64 noundef %11) #4
  br label %16


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %14 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %16

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

13:                                               ; preds = %5
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef 5)
  br label %16


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %17 = phi i8* [ %12, %10 ], [ %14, %13 ]
phiNode
not falsefind

incomingValue:   %12 = call i8* @CAT_new(i64 noundef %11) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %17) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %18 = icmp eq i32 %6, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br i1 %18, label %19, label %21

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

16:                                               ; preds = %10, %13
  %17 = phi i8* [ %12, %10 ], [ %14, %13 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %17) #4
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %19, label %21


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %20 = call i8* @CAT_new(i64 noundef 125) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  br label %21

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

19:                                               ; preds = %16
  %20 = call i8* @CAT_new(i64 noundef 125) #4
  br label %21


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %22 = add nuw nsw i32 %6, 1

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  %23 = icmp eq i32 %22, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  br i1 %23, label %24, label %5, !llvm.loop !3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

21:                                               ; preds = %19, %16
  %22 = add nuw nsw i32 %6, 1
  %23 = icmp eq i32 %22, 10
  br i1 %23, label %24, label %5, !llvm.loop !3


NEXTBLOCK


Instruction
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

24:                                               ; preds = %21
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 noundef 42)
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @computeF()

Constant after instruction


Instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4


Instruction
  call void @CAT_set(i8* %3, i64 104)

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction
  call void @CAT_set(i8* %3, i64 104)


Instruction
  call void @CAT_sub(i8* noundef %3, i8* noundef %3, i8* noundef %3) #4

endofblockkilling:  call void @CAT_set(i8* %3, i64 104)
Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %4 = call i64 @CAT_variables() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %4)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %6 = call i64 @CAT_cost() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %6)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  call void @computeF()
  %3 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %3, i64 104)
  call void @CAT_set(i8* %3, i64 0)
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4
  %4 = call i64 @CAT_variables() #4
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %4)
  %6 = call i64 @CAT_cost() #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %6)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  ret i8* %0

Constant after instruction


BLOCK AFTER MODIFICATION

  ret i8* %0


NEXTBLOCK
loopToBadConstants ****
loop

5:                                                ; preds = %21, %0
  %6 = phi i32 [ 0, %0 ], [ %22, %21 ]
  %7 = call i64 @CAT_get(i8* noundef %1) #4
  %8 = trunc i64 %7 to i32
  %9 = icmp sgt i32 %8, 9
  br i1 %9, label %10, label %13
: 
____________________
loop

10:                                               ; preds = %5
  %11 = call i64 @CAT_get(i8* noundef %1) #4
  %12 = call i8* @CAT_new(i64 noundef %11) #4
  br label %16
: 
____________________
loop

13:                                               ; preds = %5
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef 5)
  br label %16
: 
____________________
loop

16:                                               ; preds = %10, %13
  %17 = phi i8* [ %12, %10 ], [ %14, %13 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %17) #4
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %19, label %21
: 
  %1 = call i8* @CAT_new(i64 noundef 4) #4 ____________________
loop

19:                                               ; preds = %16
  %20 = call i8* @CAT_new(i64 noundef 125) #4
  br label %21
: 
____________________
loop

21:                                               ; preds = %19, %16
  %22 = add nuw nsw i32 %6, 1
  %23 = icmp eq i32 %22, 10
  br i1 %23, label %24, label %5, !llvm.loop !3
: 
____________________


Instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4


Instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4


Instruction
  %3 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @CAT_set(i8* %1, i64 9)

endofblockkilling:  %1 = call i8* @CAT_new(i64 noundef 4) #4
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* %1, i64 9)


Instruction
  br label %5

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  call void @CAT_set(i8* %1, i64 9)


BLOCK AFTER MODIFICATION

  %1 = call i8* @CAT_new(i64 noundef 4) #4
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  call void @CAT_set(i8* %1, i64 9)
  br label %5


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 REMOVED

  call void @CAT_set(i8* %1, i64 9)3->2

Instruction
  %6 = phi i32 [ 0, %0 ], [ %22, %21 ]
phiNode
not falsefind

incomingValue: i32 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %7 = call i64 @CAT_get(i8* noundef %1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %8 = trunc i64 %7 to i32

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %9 = icmp sgt i32 %8, 9

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br i1 %9, label %10, label %13

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

5:                                                ; preds = %21, %0
  %6 = phi i32 [ 0, %0 ], [ %22, %21 ]
  %7 = call i64 @CAT_get(i8* noundef %1) #4
  %8 = trunc i64 %7 to i32
  %9 = icmp sgt i32 %8, 9
  br i1 %9, label %10, label %13


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %11 = call i64 @CAT_get(i8* noundef %1) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %12 = call i8* @CAT_new(i64 noundef %11) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %16

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

10:                                               ; preds = %5
  %11 = call i64 @CAT_get(i8* noundef %1) #4
  %12 = call i8* @CAT_new(i64 noundef %11) #4
  br label %16


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %14 = call i8* @CAT_new(i64 noundef 5) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br label %16

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

13:                                               ; preds = %5
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 noundef 5)
  br label %16


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %17 = phi i8* [ %12, %10 ], [ %14, %13 ]
phiNode
not falsefind

incomingValue:   %12 = call i8* @CAT_new(i64 noundef %11) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %17) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  %18 = icmp eq i32 %6, 0

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


Instruction
  br i1 %18, label %19, label %21

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4


BLOCK AFTER MODIFICATION

16:                                               ; preds = %10, %13
  %17 = phi i8* [ %12, %10 ], [ %14, %13 ]
  call void @CAT_add(i8* noundef %1, i8* noundef %1, i8* noundef %17) #4
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %19, label %21


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %20 = call i8* @CAT_new(i64 noundef 125) #4

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  br label %21

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

19:                                               ; preds = %16
  %20 = call i8* @CAT_new(i64 noundef 125) #4
  br label %21


NEXTBLOCK

falseFinds
  %1 = call i8* @CAT_new(i64 noundef 4) #4 

Instruction
  %22 = add nuw nsw i32 %6, 1

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  %23 = icmp eq i32 %22, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  br i1 %23, label %24, label %5, !llvm.loop !3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

21:                                               ; preds = %19, %16
  %22 = add nuw nsw i32 %6, 1
  %23 = icmp eq i32 %22, 10
  br i1 %23, label %24, label %5, !llvm.loop !3


NEXTBLOCK


Instruction
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 42) #4
  %3 = call i8* @CAT_new(i64 noundef 5) #4
  %14 = call i8* @CAT_new(i64 noundef 5) #4
  %20 = call i8* @CAT_new(i64 noundef 125) #4


BLOCK AFTER MODIFICATION

24:                                               ; preds = %21
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 noundef 42)
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @computeF()

Constant after instruction


Instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4

Constant after instruction
  %3 = call i8* @CAT_new(i64 noundef 52) #4


Instruction
  call void @CAT_set(i8* %3, i64 104)

endofblockkilling:  %3 = call i8* @CAT_new(i64 noundef 52) #4
Constant after instruction
  call void @CAT_set(i8* %3, i64 104)


Instruction
  call void @CAT_set(i8* %3, i64 0)

endofblockkilling:  call void @CAT_set(i8* %3, i64 104)
Constant after instruction
  call void @CAT_set(i8* %3, i64 0)


Instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4

endofblockkilling:  call void @CAT_set(i8* %3, i64 0)
Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %4 = call i64 @CAT_variables() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %4)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %6 = call i64 @CAT_cost() #4

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %6)

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


Instruction
  ret i32 0

Constant after instruction
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4


BLOCK AFTER MODIFICATION

  call void @computeF()
  %3 = call i8* @CAT_new(i64 noundef 52) #4
  call void @CAT_set(i8* %3, i64 104)
  call void @CAT_set(i8* %3, i64 0)
  call void @CAT_set(i8* noundef %3, i64 noundef 42) #4
  %4 = call i64 @CAT_variables() #4
  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %4)
  %6 = call i64 @CAT_cost() #4
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %6)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test99'
