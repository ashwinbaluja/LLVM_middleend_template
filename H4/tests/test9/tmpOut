make[1]: Entering directory '/home/hwo2853/LLVM/H4/tests/test9'
timeout 10m ../misc/run_test.sh "--basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker" "program.bc" "program_optimized.bc" 0 0
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so program.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %3 = call i64 @CAT_get(i8* noundef %2) #3

optimize Cat_get

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef %3)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %5 = call i8* @CAT_new(i64 noundef 8) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %5 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %6 = icmp sgt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %5 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  br i1 %6, label %7, label %8

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %5 = call i8* @CAT_new(i64 noundef 8) #3
i64 5

BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = call i8* @CAT_new(i64 noundef 8) #3
  %5 = icmp sgt i32 %0, 10
  br i1 %5, label %6, label %7


NEXTBLOCK


Instruction
  call void @CAT_add(i8* noundef %4, i8* noundef %4, i8* noundef %4) #3

endofblockkilling:  %4 = call i8* @CAT_new(i64 noundef 8) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  br label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


BLOCK AFTER MODIFICATION

6:                                                ; preds = %1
  call void @CAT_set(i8* %4, i64 16)
  br label %7


NEXTBLOCK
REMOVED

  %4 = call i8* @CAT_new(i64 noundef 8) #32->1

Instruction
  %8 = call i64 @CAT_get(i8* noundef %4) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %10 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %10 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3

endofblockkilling:  %10 = call i8* @CAT_new(i64 noundef 0) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %2) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %11 = call i64 @CAT_get(i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_sub(i8* noundef %10, i8* noundef %10, i8* noundef %2) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %13 = call i64 @CAT_get(i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  %15 = call i64 @CAT_get(i8* noundef %10) #3

optimize Cat_get

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  %16 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %15)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
1^^^^1^^^^2^^^^i64 42

BLOCK AFTER MODIFICATION

7:                                                ; preds = %6, %1
  %8 = call i64 @CAT_get(i8* noundef %4) #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3
  call void @CAT_set(i8* %10, i64 10)
  %11 = call i64 @CAT_get(i8* noundef %10) #3
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)
  call void @CAT_sub(i8* noundef %10, i8* noundef %10, i8* noundef %2) #3
  %13 = call i64 @CAT_get(i8* noundef %10) #3
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 8) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %5 = icmp sgt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  br i1 %5, label %6, label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = call i8* @CAT_new(i64 noundef 8) #3
  %5 = icmp sgt i32 %0, 10
  br i1 %5, label %6, label %7


NEXTBLOCK
REMOVED

  %4 = call i8* @CAT_new(i64 noundef 8) #32->1

Instruction
  %8 = call i64 @CAT_get(i8* noundef %4) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %10 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %10 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3

endofblockkilling:  %10 = call i8* @CAT_new(i64 noundef 0) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_set(i8* %10, i64 10)

endofblockkilling:  call void @CAT_set(i8* %10, i64 10)
endofblockkilling:  %2 = call i8* @CAT_new(i64 noundef 5) #3
Constant after instruction


Instruction
  %11 = call i64 @CAT_get(i8* noundef %10) #3

Constant after instruction


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)

Constant after instruction


Instruction
  call void @CAT_sub(i8* noundef %10, i8* noundef %10, i8* noundef %2) #3

Constant after instruction


Instruction
  %13 = call i64 @CAT_get(i8* noundef %10) #3

Constant after instruction


Instruction
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3

Constant after instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  ret void

Constant after instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
1^^^^1^^^^

BLOCK AFTER MODIFICATION

7:                                                ; preds = %6, %1
  %8 = call i64 @CAT_get(i8* noundef %4) #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3
  call void @CAT_set(i8* %10, i64 10)
  %11 = call i64 @CAT_get(i8* noundef %10) #3
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)
  call void @CAT_sub(i8* noundef %10, i8* noundef %10, i8* noundef %2) #3
  %13 = call i64 @CAT_get(i8* noundef %10) #3
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %4, i64 16)

endofblockkilling:  call void @CAT_set(i8* %4, i64 16)
endofblockkilling:  %2 = call i8* @CAT_new(i64 noundef 5) #3
endofblockkilling:  %4 = call i8* @CAT_new(i64 noundef 8) #3
Constant after instruction


Instruction
  br label %7

Constant after instruction


BLOCK AFTER MODIFICATION

6:                                                ; preds = %1
  call void @CAT_set(i8* %4, i64 16)
  br label %7


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @CAT_execution(i32 noundef %0)

Constant after instruction


Instruction
  %3 = call i64 @CAT_variables() #3

Constant after instruction


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %3)

Constant after instruction


Instruction
  %5 = call i64 @CAT_cost() #3

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  call void @CAT_execution(i32 noundef %0)
  %3 = call i64 @CAT_variables() #3
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %3)
  %5 = call i64 @CAT_cost() #3
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %5)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_0.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 8) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %5 = icmp sgt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  br i1 %5, label %6, label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = call i8* @CAT_new(i64 noundef 8) #3
  %5 = icmp sgt i32 %0, 10
  br i1 %5, label %6, label %7


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %4, i64 16)

endofblockkilling:  %4 = call i8* @CAT_new(i64 noundef 8) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %4, i64 16)


Instruction
  br label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %4, i64 16)


BLOCK AFTER MODIFICATION

6:                                                ; preds = %1
  call void @CAT_set(i8* %4, i64 16)
  br label %7


NEXTBLOCK

 found bad:   %4 = call i8* @CAT_new(i64 noundef 8) #3i64 16
REMOVED

  call void @CAT_set(i8* %4, i64 16)2->1

Instruction
  %8 = call i64 @CAT_get(i8* noundef %4) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %10 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %10 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3

endofblockkilling:  %10 = call i8* @CAT_new(i64 noundef 0) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_set(i8* %10, i64 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  %11 = call i64 @CAT_get(i8* noundef %10) #3

optimize Cat_get

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %11)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  call void @CAT_sub(i8* noundef %10, i8* noundef %10, i8* noundef %2) #3

endofblockkilling:  call void @CAT_set(i8* %10, i64 10)
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %13 = call i64 @CAT_get(i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %13)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
1^^^^1^^^^i64 10

BLOCK AFTER MODIFICATION

7:                                                ; preds = %6, %1
  %8 = call i64 @CAT_get(i8* noundef %4) #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3
  call void @CAT_set(i8* %10, i64 10)
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 10)
  call void @CAT_set(i8* %10, i64 5)
  %12 = call i64 @CAT_get(i8* noundef %10) #3
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %12)
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK

 found bad:   %4 = call i8* @CAT_new(i64 noundef 8) #3i64 16
REMOVED

  call void @CAT_set(i8* %4, i64 16)2->1

Instruction
  %8 = call i64 @CAT_get(i8* noundef %4) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %10 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %10 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3

endofblockkilling:  %10 = call i8* @CAT_new(i64 noundef 0) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_set(i8* %10, i64 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  call void @CAT_set(i8* %10, i64 5)

endofblockkilling:  call void @CAT_set(i8* %10, i64 5)
endofblockkilling:  %2 = call i8* @CAT_new(i64 noundef 5) #3
endofblockkilling:  call void @CAT_set(i8* %10, i64 10)
Constant after instruction


Instruction
  %12 = call i64 @CAT_get(i8* noundef %10) #3

Constant after instruction


Instruction
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %12)

Constant after instruction


Instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3

Constant after instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  ret void

Constant after instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
1^^^^1^^^^

BLOCK AFTER MODIFICATION

7:                                                ; preds = %6, %1
  %8 = call i64 @CAT_get(i8* noundef %4) #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3
  call void @CAT_set(i8* %10, i64 10)
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 10)
  call void @CAT_set(i8* %10, i64 5)
  %12 = call i64 @CAT_get(i8* noundef %10) #3
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %12)
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 8) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %5 = icmp sgt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  br i1 %5, label %6, label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = call i8* @CAT_new(i64 noundef 8) #3
  %5 = icmp sgt i32 %0, 10
  br i1 %5, label %6, label %7


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %4, i64 16)

endofblockkilling:  %4 = call i8* @CAT_new(i64 noundef 8) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %4, i64 16)


Instruction
  br label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %4, i64 16)


BLOCK AFTER MODIFICATION

6:                                                ; preds = %1
  call void @CAT_set(i8* %4, i64 16)
  br label %7


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @CAT_execution(i32 noundef %0)

Constant after instruction


Instruction
  %3 = call i64 @CAT_variables() #3

Constant after instruction


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %3)

Constant after instruction


Instruction
  %5 = call i64 @CAT_cost() #3

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  call void @CAT_execution(i32 noundef %0)
  %3 = call i64 @CAT_variables() #3
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %3)
  %5 = call i64 @CAT_cost() #3
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %5)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_1.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 8) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %5 = icmp sgt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  br i1 %5, label %6, label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = call i8* @CAT_new(i64 noundef 8) #3
  %5 = icmp sgt i32 %0, 10
  br i1 %5, label %6, label %7


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %4, i64 16)

endofblockkilling:  %4 = call i8* @CAT_new(i64 noundef 8) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %4, i64 16)


Instruction
  br label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %4, i64 16)


BLOCK AFTER MODIFICATION

6:                                                ; preds = %1
  call void @CAT_set(i8* %4, i64 16)
  br label %7


NEXTBLOCK

 found bad:   %4 = call i8* @CAT_new(i64 noundef 8) #3i64 16
REMOVED

  call void @CAT_set(i8* %4, i64 16)2->1

Instruction
  %8 = call i64 @CAT_get(i8* noundef %4) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %10 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %10 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3

endofblockkilling:  %10 = call i8* @CAT_new(i64 noundef 0) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_set(i8* %10, i64 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  call void @CAT_set(i8* %10, i64 5)

endofblockkilling:  call void @CAT_set(i8* %10, i64 10)
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 5)


Instruction
  %12 = call i64 @CAT_get(i8* noundef %10) #3

optimize Cat_get

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 5)


Instruction
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef %12)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 5)


Instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3

endofblockkilling:  call void @CAT_set(i8* %10, i64 5)
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
1^^^^1^^^^i64 5

BLOCK AFTER MODIFICATION

7:                                                ; preds = %6, %1
  %8 = call i64 @CAT_get(i8* noundef %4) #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3
  call void @CAT_set(i8* %10, i64 10)
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 10)
  call void @CAT_set(i8* %10, i64 5)
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 5)
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK

 found bad:   %4 = call i8* @CAT_new(i64 noundef 8) #3i64 16
REMOVED

  call void @CAT_set(i8* %4, i64 16)2->1

Instruction
  %8 = call i64 @CAT_get(i8* noundef %4) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %10 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %10 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3

endofblockkilling:  %10 = call i8* @CAT_new(i64 noundef 0) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_set(i8* %10, i64 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  call void @CAT_set(i8* %10, i64 5)

endofblockkilling:  call void @CAT_set(i8* %10, i64 10)
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 5)


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 5)


Instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3

endofblockkilling:  call void @CAT_set(i8* %10, i64 5)
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
1^^^^1^^^^

BLOCK AFTER MODIFICATION

7:                                                ; preds = %6, %1
  %8 = call i64 @CAT_get(i8* noundef %4) #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3
  call void @CAT_set(i8* %10, i64 10)
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 10)
  call void @CAT_set(i8* %10, i64 5)
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 5)
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 8) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %5 = icmp sgt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  br i1 %5, label %6, label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = call i8* @CAT_new(i64 noundef 8) #3
  %5 = icmp sgt i32 %0, 10
  br i1 %5, label %6, label %7


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %4, i64 16)

endofblockkilling:  %4 = call i8* @CAT_new(i64 noundef 8) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %4, i64 16)


Instruction
  br label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %4, i64 16)


BLOCK AFTER MODIFICATION

6:                                                ; preds = %1
  call void @CAT_set(i8* %4, i64 16)
  br label %7


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @CAT_execution(i32 noundef %0)

Constant after instruction


Instruction
  %3 = call i64 @CAT_variables() #3

Constant after instruction


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %3)

Constant after instruction


Instruction
  %5 = call i64 @CAT_cost() #3

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  call void @CAT_execution(i32 noundef %0)
  %3 = call i64 @CAT_variables() #3
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %3)
  %5 = call i64 @CAT_cost() #3
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %5)
  ret i32 0


NEXTBLOCK
####  The compiler modified the input bitcode: the fixed point isn't reached.
#### Running the CAT compiler
####   Command line =  opt --enable-new-pm=0 -load ~/CAT/lib/CAT.so output_code_iter_2.bc --basic-aa --globals-aa --cfl-steens-aa --tbaa --scev-aa --cfl-anders-aa -loops -loop-simplify -lcssa -domtree -scalar-evolution -assumption-cache-tracker -CAT -o program_optimized.bc
loopToBadConstants ****


Instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %4 = call i8* @CAT_new(i64 noundef 8) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  %5 = icmp sgt i32 %0, 10

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


Instruction
  br i1 %5, label %6, label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %4 = call i8* @CAT_new(i64 noundef 8) #3


BLOCK AFTER MODIFICATION

  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %3 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 noundef 5)
  %4 = call i8* @CAT_new(i64 noundef 8) #3
  %5 = icmp sgt i32 %0, 10
  br i1 %5, label %6, label %7


NEXTBLOCK


Instruction
  call void @CAT_set(i8* %4, i64 16)

endofblockkilling:  %4 = call i8* @CAT_new(i64 noundef 8) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %4, i64 16)


Instruction
  br label %7

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %4, i64 16)


BLOCK AFTER MODIFICATION

6:                                                ; preds = %1
  call void @CAT_set(i8* %4, i64 16)
  br label %7


NEXTBLOCK

 found bad:   %4 = call i8* @CAT_new(i64 noundef 8) #3i64 16
REMOVED

  call void @CAT_set(i8* %4, i64 16)2->1

Instruction
  %8 = call i64 @CAT_get(i8* noundef %4) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  %10 = call i8* @CAT_new(i64 noundef 0) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  %10 = call i8* @CAT_new(i64 noundef 0) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3

endofblockkilling:  %10 = call i8* @CAT_new(i64 noundef 0) #3
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3


Instruction
  call void @CAT_set(i8* %10, i64 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 10)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 10)


Instruction
  call void @CAT_set(i8* %10, i64 5)

endofblockkilling:  call void @CAT_set(i8* %10, i64 10)
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 5)


Instruction
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 5)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* %10, i64 5)


Instruction
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3

endofblockkilling:  call void @CAT_set(i8* %10, i64 5)
Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3


Instruction
  ret void

Constant after instruction
  %2 = call i8* @CAT_new(i64 noundef 5) #3
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
1^^^^1^^^^

BLOCK AFTER MODIFICATION

7:                                                ; preds = %6, %1
  %8 = call i64 @CAT_get(i8* noundef %4) #3
  %9 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 noundef %8)
  %10 = call i8* @CAT_new(i64 noundef 0) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %4) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %2, i8* noundef %10) #3
  call void @CAT_add(i8* noundef %10, i8* noundef %10, i8* noundef %10) #3
  call void @CAT_set(i8* %10, i64 10)
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 10)
  call void @CAT_set(i8* %10, i64 5)
  %12 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 5)
  call void @CAT_set(i8* noundef %10, i64 noundef 42) #3
  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 noundef 42)
  ret void


NEXTBLOCK
loopToBadConstants ****


Instruction
  call void @CAT_execution(i32 noundef %0)

Constant after instruction


Instruction
  %3 = call i64 @CAT_variables() #3

Constant after instruction


Instruction
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %3)

Constant after instruction


Instruction
  %5 = call i64 @CAT_cost() #3

Constant after instruction


Instruction
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %5)

Constant after instruction


Instruction
  ret i32 0

Constant after instruction


BLOCK AFTER MODIFICATION

  call void @CAT_execution(i32 noundef %0)
  %3 = call i64 @CAT_variables() #3
  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 noundef %3)
  %5 = call i64 @CAT_cost() #3
  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 noundef %5)
  ret i32 0


NEXTBLOCK
####  The compiler did not modify the input bitcode: the fixed point has been reached.
llvm-dis program_optimized.bc
clang -O2 -lm program_optimized.bc ../misc/CAT.o -o program_optimized
./program_optimized > program_optimized_output
../misc/check.sh "output/oracle.txt" "program_optimized_output"
Checking output/oracle.txt against program_optimized_output
Test passed!
make[1]: Leaving directory '/home/hwo2853/LLVM/H4/tests/test9'
